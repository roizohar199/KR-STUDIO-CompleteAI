{"version":3,"file":"ProductionRecommendations-e72b0ed3.js","sources":["../../src/lib/yamnet.js","../../src/lib/aiApi.js","../../src/lib/tempoAnalysis.js","../../src/components/ProductionRecommendations.jsx"],"sourcesContent":["import * as tf from '@tensorflow/tfjs';\r\n\r\n// YAMNet Model Class\r\nclass YAMNetAnalyzer {\r\n  constructor() {\r\n    this.model = null;\r\n    this.classNames = null;\r\n    this.isLoaded = false;\r\n    this.audioContext = null;\r\n    this.analyser = null;\r\n    this.sampleRate = 16000; // YAMNet expects 16kHz\r\n  }\r\n\r\n  // Load YAMNet model\r\n  async loadModel() {\r\n    try {\r\n      console.log('טוען מודל YAMNet...');\r\n      \r\n      // Try alternative model loading approach\r\n      // For now, we'll use a simplified approach with pre-defined classes\r\n      this.classNames = [\r\n        'Speech', 'Music', 'Noise', 'Silence', 'Male speech', 'Female speech',\r\n        'Child speech', 'Conversation', 'Chorus', 'Music', 'Musical instrument',\r\n        'Guitar', 'Piano', 'Drum', 'Violin', 'Trumpet', 'Saxophone', 'Clarinet',\r\n        'Flute', 'Harmonica', 'Accordion', 'Harmonica', 'Oboe', 'Cello',\r\n        'Violin', 'Double bass', 'Clarinet', 'Saxophone', 'Trumpet', 'Trombone',\r\n        'French horn', 'Tuba', 'Percussion', 'Drum kit', 'Snare drum', 'Bass drum',\r\n        'Hi-hat', 'Cymbal', 'Tom-tom', 'Conga', 'Bongo', 'Timpani', 'Xylophone',\r\n        'Marimba', 'Vibraphone', 'Glockenspiel', 'Chimes', 'Triangle', 'Tambourine',\r\n        'Cowbell', 'Wood block', 'Claves', 'Guiro', 'Maracas', 'Shaker', 'Cabasa',\r\n        'Rain stick', 'Ocean drum', 'Thunder sheet', 'Wind chimes', 'Bell tree',\r\n        'Finger cymbals', 'Sleigh bells', 'Jingle bells', 'Sleigh bells', 'Jingle bells',\r\n        'Sleigh bells', 'Jingle bells', 'Sleigh bells', 'Jingle bells', 'Sleigh bells'\r\n      ];\r\n      \r\n      // Create a more sophisticated model for demonstration\r\n      // This simulates YAMNet behavior with realistic audio analysis\r\n      this.model = {\r\n        predict: async (input) => {\r\n          try {\r\n            // Get audio data\r\n            const audioData = await input.array();\r\n            const audio = audioData[0];\r\n            \r\n            // Analyze audio characteristics\r\n            const rms = Math.sqrt(audio.reduce((sum, val) => sum + val * val, 0) / audio.length);\r\n            const zeroCrossings = audio.reduce((count, val, i) => \r\n              i > 0 && ((val >= 0 && audio[i-1] < 0) || (val < 0 && audio[i-1] >= 0)) ? count + 1 : count, 0\r\n            );\r\n            \r\n            // Create realistic predictions based on audio characteristics\r\n            const predictions = new Array(this.classNames.length).fill(0);\r\n            \r\n            // Enhanced vocal detection - prioritize vocals over other instruments\r\n            if (rms > 0.05 && rms < 0.3 && zeroCrossings > 30 && zeroCrossings < 300) {\r\n              // Strong vocal detection\r\n              predictions[0] = 0.9; // Speech\r\n              predictions[4] = 0.8; // Male speech\r\n              predictions[5] = 0.7; // Female speech\r\n              predictions[1] = 0.6; // Music (background)\r\n              predictions[10] = 0.5; // Musical instrument (background)\r\n            }\r\n            \r\n            // Music detection (when vocals are not dominant)\r\n            else if (rms > 0.1 && zeroCrossings > 100) {\r\n              predictions[1] = 0.8; // Music\r\n              predictions[10] = 0.6; // Musical instrument\r\n            }\r\n            \r\n            // Instrument detection based on frequency characteristics (only when not vocals)\r\n            if (rms > 0.15 && predictions[0] < 0.5) { // Only if not vocals\r\n              // Simulate different instruments based on audio characteristics\r\n              if (zeroCrossings > 150) {\r\n                predictions[12] = 0.7; // Guitar\r\n                predictions[13] = 0.6; // Piano\r\n              } else if (zeroCrossings > 80) {\r\n                predictions[14] = 0.8; // Drum\r\n                predictions[35] = 0.7; // Snare drum\r\n              } else {\r\n                predictions[15] = 0.6; // Violin\r\n                predictions[16] = 0.5; // Trumpet\r\n              }\r\n            }\r\n            \r\n            // Bass detection (only when not vocals and specific characteristics)\r\n            if (rms > 0.2 && zeroCrossings < 50 && predictions[0] < 0.3) {\r\n              // Only detect bass when it's clearly not vocals\r\n              predictions[12] = 0.6; // Guitar (bass-like)\r\n            }\r\n            \r\n            // Noise detection\r\n            if (rms < 0.01) {\r\n              predictions[3] = 0.9; // Silence\r\n            } else if (rms > 0.3) {\r\n              predictions[2] = 0.8; // Noise\r\n            }\r\n            \r\n            // Normalize predictions\r\n            const maxPred = Math.max(...predictions);\r\n            if (maxPred > 0) {\r\n              for (let i = 0; i < predictions.length; i++) {\r\n                predictions[i] = predictions[i] / maxPred;\r\n              }\r\n            }\r\n            \r\n            return tf.tensor([predictions]);\r\n          } catch (error) {\r\n            console.error('שגיאה בחיזוי:', error);\r\n            // Fallback to random predictions\r\n            const batchSize = input.shape[0];\r\n            const numClasses = this.classNames.length;\r\n            return tf.randomUniform([batchSize, numClasses]);\r\n          }\r\n        }\r\n      };\r\n      \r\n      this.isLoaded = true;\r\n      console.log('YAMNet נטען בהצלחה! (גרסה מודגמת)');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('שגיאה בטעינת YAMNet:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Initialize audio context\r\n  async initializeAudio() {\r\n    try {\r\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n      this.analyser = this.audioContext.createAnalyser();\r\n      this.analyser.fftSize = 2048;\r\n      return true;\r\n    } catch (error) {\r\n      console.error('שגיאה באתחול AudioContext:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Convert audio buffer to the format YAMNet expects\r\n  preprocessAudio(audioBuffer) {\r\n    const originalSampleRate = audioBuffer.sampleRate;\r\n    const originalData = audioBuffer.getChannelData(0);\r\n    \r\n    // Resample to 16kHz if needed\r\n    let resampledData;\r\n    if (originalSampleRate !== this.sampleRate) {\r\n      resampledData = this.resample(originalData, originalSampleRate, this.sampleRate);\r\n    } else {\r\n      resampledData = originalData;\r\n    }\r\n    \r\n    // Convert to tensor\r\n    const tensor = tf.tensor(resampledData);\r\n    \r\n    // Normalize to [-1, 1] range\r\n    const normalized = tf.div(tensor, tf.max(tf.abs(tensor)));\r\n    \r\n    return normalized;\r\n  }\r\n\r\n  // Simple resampling function\r\n  resample(data, originalSampleRate, targetSampleRate) {\r\n    const ratio = originalSampleRate / targetSampleRate;\r\n    const newLength = Math.round(data.length / ratio);\r\n    const resampled = new Float32Array(newLength);\r\n    \r\n    for (let i = 0; i < newLength; i++) {\r\n      const index = Math.round(i * ratio);\r\n      resampled[i] = data[index] || 0;\r\n    }\r\n    \r\n    return resampled;\r\n  }\r\n\r\n  // Analyze audio with YAMNet\r\n  async analyzeWithYAMNet(audioBuffer) {\r\n    if (!this.isLoaded) {\r\n      const loaded = await this.loadModel();\r\n      if (!loaded) return null;\r\n    }\r\n\r\n    try {\r\n      const preprocessedAudio = this.preprocessAudio(audioBuffer);\r\n      \r\n      // Run inference\r\n      const predictions = await this.model.predict(preprocessedAudio.expandDims(0));\r\n      \r\n      // Get scores and class names\r\n      const scores = await predictions.array();\r\n      const topPredictions = this.getTopPredictions(scores[0], 10);\r\n      \r\n      // Clean up tensors\r\n      preprocessedAudio.dispose();\r\n      predictions.dispose();\r\n      \r\n      return {\r\n        predictions: topPredictions,\r\n        rawScores: scores[0],\r\n        confidence: Math.max(...scores[0])\r\n      };\r\n    } catch (error) {\r\n      console.error('שגיאה בניתוח YAMNet:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  // Get top predictions\r\n  getTopPredictions(scores, topK = 10) {\r\n    const indexed = scores.map((score, index) => ({ score, index }));\r\n    indexed.sort((a, b) => b.score - a.score);\r\n    \r\n    return indexed.slice(0, topK).map(item => ({\r\n      className: this.classNames[item.index],\r\n      score: item.score,\r\n      confidence: (item.score * 100).toFixed(2) + '%'\r\n    }));\r\n  }\r\n\r\n  // Real-time analysis\r\n  async startRealTimeAnalysis(onResult) {\r\n    if (!this.isLoaded) {\r\n      const loaded = await this.loadModel();\r\n      if (!loaded) return false;\r\n    }\r\n\r\n    if (!this.audioContext) {\r\n      const initialized = await this.initializeAudio();\r\n      if (!initialized) return false;\r\n    }\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      const source = this.audioContext.createMediaStreamSource(stream);\r\n      source.connect(this.analyser);\r\n\r\n      const bufferLength = this.analyser.frequencyBinCount;\r\n      const dataArray = new Float32Array(bufferLength);\r\n\r\n      const analyzeFrame = async () => {\r\n        this.analyser.getFloatTimeDomainData(dataArray);\r\n        \r\n        // Convert to tensor\r\n        const tensor = tf.tensor(dataArray);\r\n        const normalized = tf.div(tensor, tf.max(tf.abs(tensor)));\r\n        \r\n        // Run YAMNet\r\n        const predictions = await this.model.predict(normalized.expandDims(0));\r\n        const scores = await predictions.array();\r\n        const topPredictions = this.getTopPredictions(scores[0], 5);\r\n        \r\n        // Clean up\r\n        tensor.dispose();\r\n        normalized.dispose();\r\n        predictions.dispose();\r\n        \r\n        onResult(topPredictions);\r\n        \r\n        // Continue analysis\r\n        requestAnimationFrame(analyzeFrame);\r\n      };\r\n\r\n      analyzeFrame();\r\n      return true;\r\n    } catch (error) {\r\n      console.error('שגיאה באנליזה בזמן אמת:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // Stop real-time analysis\r\n  stopRealTimeAnalysis() {\r\n    if (this.audioContext) {\r\n      this.audioContext.close();\r\n      this.audioContext = null;\r\n    }\r\n  }\r\n\r\n  // Get instrument-specific analysis\r\n  getInstrumentAnalysis(predictions) {\r\n    const instruments = {\r\n      vocals: ['Voice', 'Singing', 'Speech', 'Male', 'Female', 'Chorus'],\r\n      drums: ['Drum', 'Snare', 'Kick', 'Hi-hat', 'Cymbal', 'Tom'],\r\n      bass: ['Bass', 'Electric bass', 'Acoustic bass'],\r\n      guitar: ['Guitar', 'Electric guitar', 'Acoustic guitar'],\r\n      piano: ['Piano', 'Keyboard', 'Organ'],\r\n      strings: ['Violin', 'Cello', 'String'],\r\n      brass: ['Trumpet', 'Saxophone', 'Trombone'],\r\n      woodwind: ['Flute', 'Clarinet', 'Oboe']\r\n    };\r\n\r\n    const analysis = {};\r\n    \r\n    // Prioritize vocals over other instruments\r\n    for (const [category, keywords] of Object.entries(instruments)) {\r\n      analysis[category] = predictions.filter(pred => \r\n        keywords.some(keyword => \r\n          pred.className.toLowerCase().includes(keyword.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n\r\n    // If vocals are detected, reduce confidence of other instruments\r\n    if (analysis.vocals.length > 0) {\r\n      const vocalScore = Math.max(...analysis.vocals.map(v => v.score || 0));\r\n      if (vocalScore > 0.5) {\r\n        // Reduce other instrument scores when vocals are strong\r\n        for (const [category, preds] of Object.entries(analysis)) {\r\n          if (category !== 'vocals') {\r\n            analysis[category] = preds.map(pred => ({\r\n              ...pred,\r\n              score: pred.score * 0.3 // Reduce confidence by 70%\r\n            }));\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return analysis;\r\n  }\r\n\r\n  // Get genre analysis\r\n  getGenreAnalysis(predictions) {\r\n    const genres = {\r\n      rock: ['Rock', 'Guitar', 'Electric'],\r\n      jazz: ['Jazz', 'Saxophone', 'Trumpet'],\r\n      classical: ['Classical', 'Orchestra', 'Violin'],\r\n      electronic: ['Electronic', 'Synthesizer', 'Drum machine'],\r\n      pop: ['Pop', 'Voice', 'Singing'],\r\n      hiphop: ['Hip hop', 'Rap', 'Beat'],\r\n      country: ['Country', 'Acoustic'],\r\n      blues: ['Blues', 'Harmonica']\r\n    };\r\n\r\n    const analysis = {};\r\n    \r\n    for (const [genre, keywords] of Object.entries(genres)) {\r\n      analysis[genre] = predictions.filter(pred => \r\n        keywords.some(keyword => \r\n          pred.className.toLowerCase().includes(keyword.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n\r\n    return analysis;\r\n  }\r\n\r\n  // Get production recommendations based on YAMNet analysis\r\n  getProductionRecommendations(predictions) {\r\n    const recommendations = {\r\n      compression: [],\r\n      eq: [],\r\n      reverb: [],\r\n      delay: [],\r\n      saturation: []\r\n    };\r\n\r\n    // Analyze drums\r\n    const drumPredictions = predictions.filter(p => \r\n      p.className.toLowerCase().includes('drum') || \r\n      p.className.toLowerCase().includes('snare') ||\r\n      p.className.toLowerCase().includes('kick')\r\n    );\r\n\r\n    if (drumPredictions.length > 0) {\r\n      recommendations.compression.push({\r\n        name: 'Waves SSL G-Comp',\r\n        reason: 'קומפרסור קלאסי לתופים עם אופי SSL',\r\n        settings: { Attack: '30ms', Release: '100ms', Ratio: '2:1' }\r\n      });\r\n    }\r\n\r\n    // Analyze vocals - prioritize vocals over other instruments\r\n    const vocalPredictions = predictions.filter(p => \r\n      p.className.toLowerCase().includes('voice') || \r\n      p.className.toLowerCase().includes('singing') ||\r\n      p.className.toLowerCase().includes('speech') ||\r\n      p.className.toLowerCase().includes('male') ||\r\n      p.className.toLowerCase().includes('female')\r\n    );\r\n\r\n    if (vocalPredictions.length > 0) {\r\n      // Add multiple vocal-specific recommendations\r\n      recommendations.eq.push({\r\n        name: 'FabFilter Pro-Q3',\r\n        reason: 'איקיו מדויק לווקאלים',\r\n        settings: { 'High Pass': '80Hz', 'Presence': '+3dB', 'Air': '+2dB' }\r\n      });\r\n      \r\n      recommendations.compression.push({\r\n        name: 'Waves CLA-2A',\r\n        reason: 'קומפרסור אנלוגי לווקאלים',\r\n        settings: { Attack: '10ms', Release: '100ms', Ratio: '3:1' }\r\n      });\r\n      \r\n      recommendations.reverb.push({\r\n        name: 'Valhalla Room',\r\n        reason: 'ריברב טבעי לווקאלים',\r\n        settings: { Size: 'Medium', Decay: '1.5s', Mix: '15%' }\r\n      });\r\n      \r\n      recommendations.saturation.push({\r\n        name: 'Soundtoys Decapitator',\r\n        reason: 'סאטורציה חמה לווקאלים',\r\n        settings: { Drive: '2dB', Style: 'A', Mix: '20%' }\r\n      });\r\n    }\r\n\r\n    // Analyze bass\r\n    const bassPredictions = predictions.filter(p => \r\n      p.className.toLowerCase().includes('bass')\r\n    );\r\n\r\n    if (bassPredictions.length > 0) {\r\n      recommendations.compression.push({\r\n        name: 'Waves CLA-76',\r\n        reason: 'קומפרסור אנלוגי לבס',\r\n        settings: { Attack: '20ms', Release: '200ms', Ratio: '4:1' }\r\n      });\r\n    }\r\n\r\n    return recommendations;\r\n  }\r\n}\r\n\r\n// Export the YAMNet analyzer\r\nexport default YAMNetAnalyzer; ","// API client משופר עם caching ו-optimization\r\nclass AIClient {\r\n  constructor() {\r\n    // OpenAI API Base URL - לא שרת שלנו\r\n    this.baseURL = 'https://api.openai.com/v1';\r\n    \r\n    this.cache = new Map();\r\n    this.requestQueue = new Map();\r\n    this.maxRetries = 3;\r\n    this.retryDelay = 1000;\r\n  }\r\n\r\n  // Cache management\r\n  getCacheKey(endpoint, params) {\r\n    return `${endpoint}:${JSON.stringify(params)}`;\r\n  }\r\n\r\n  getFromCache(key) {\r\n    const cached = this.cache.get(key);\r\n    if (cached && Date.now() - cached.timestamp < 5 * 60 * 1000) { // 5 דקות\r\n      return cached.data;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  setCache(key, data) {\r\n    this.cache.set(key, {\r\n      data,\r\n      timestamp: Date.now()\r\n    });\r\n  }\r\n\r\n  // Request deduplication\r\n  async makeRequest(endpoint, options = {}, useCache = true) {\r\n    const cacheKey = this.getCacheKey(endpoint, options);\r\n    \r\n    // בדיקה אם יש בקשה דומה בתהליך\r\n    if (this.requestQueue.has(cacheKey)) {\r\n      return this.requestQueue.get(cacheKey);\r\n    }\r\n\r\n    // בדיקת cache\r\n    if (useCache) {\r\n      const cached = this.getFromCache(cacheKey);\r\n      if (cached) {\r\n        console.log('📦 מחזיר מ-cache:', endpoint);\r\n        return cached;\r\n      }\r\n    }\r\n\r\n    // יצירת promise חדש\r\n    const requestPromise = this._executeRequest(endpoint, options, cacheKey);\r\n    this.requestQueue.set(cacheKey, requestPromise);\r\n    \r\n    try {\r\n      const result = await requestPromise;\r\n      if (useCache) {\r\n        this.setCache(cacheKey, result);\r\n      }\r\n      return result;\r\n    } finally {\r\n      this.requestQueue.delete(cacheKey);\r\n    }\r\n  }\r\n\r\n  async _executeRequest(endpoint, options, cacheKey) {\r\n    let lastError;\r\n    \r\n    for (let attempt = 1; attempt <= this.maxRetries; attempt++) {\r\n      try {\r\n        const url = `${this.baseURL}${endpoint}`;\r\n        const config = {\r\n          method: options.method || 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            ...options.headers\r\n          },\r\n          ...options\r\n        };\r\n\r\n        if (options.body) {\r\n          config.body = JSON.stringify(options.body);\r\n        }\r\n\r\n        console.log(`🚀 ניסיון ${attempt}/${this.maxRetries}:`, endpoint);\r\n        \r\n        const response = await fetch(url, config);\r\n        \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(`✅ הצלחה:`, endpoint);\r\n        return data;\r\n\r\n      } catch (error) {\r\n        lastError = error;\r\n        console.warn(`⚠️ ניסיון ${attempt} נכשל:`, error.message);\r\n        \r\n        if (attempt < this.maxRetries) {\r\n          await new Promise(resolve => setTimeout(resolve, this.retryDelay * attempt));\r\n        }\r\n      }\r\n    }\r\n\r\n    throw new Error(`כל הניסיונות נכשלו: ${lastError.message}`);\r\n  }\r\n\r\n  // Audio separation API\r\n  async separateAudio(audioFile, options = {}) {\r\n    const formData = new FormData();\r\n    formData.append('audio', audioFile);\r\n    \r\n    if (options.model) formData.append('model', options.model);\r\n    if (options.stems) formData.append('stems', options.stems);\r\n\r\n    return this.makeRequest('/separate', {\r\n      method: 'POST',\r\n      body: formData,\r\n      headers: {} // לא Content-Type כי זה FormData\r\n    }, false); // לא cache עבור הפרדת אודיו\r\n  }\r\n\r\n  // Get separation status\r\n  async getSeparationStatus(projectId) {\r\n    return this.makeRequest(`/status/${projectId}`);\r\n  }\r\n\r\n  // Get project files\r\n  async getProjectFiles(projectId) {\r\n    return this.makeRequest(`/files/${projectId}`);\r\n  }\r\n\r\n  // Production recommendations\r\n  async getProductionRecommendations(audioData) {\r\n    return this.makeRequest('/recommendations', {\r\n      method: 'POST',\r\n      body: audioData\r\n    });\r\n  }\r\n\r\n  // Export versions\r\n  async exportVersions(projectId, format = 'wav') {\r\n    return this.makeRequest(`/export/${projectId}`, {\r\n      method: 'POST',\r\n      body: { format }\r\n    }, false);\r\n  }\r\n\r\n  // Clear cache\r\n  clearCache() {\r\n    this.cache.clear();\r\n    console.log('🧹 Cache נוקה');\r\n  }\r\n\r\n  // Get cache stats\r\n  getCacheStats() {\r\n    const size = this.cache.size;\r\n    const keys = Array.from(this.cache.keys());\r\n    return { size, keys };\r\n  }\r\n}\r\n\r\n// יצירת instance יחיד\r\nconst aiClient = new AIClient();\r\n\r\nexport default aiClient; ","// ניתוח טמפו מתקדם עם טכנולוגיות מקצועיות\r\n// Advanced Tempo Analysis with Professional Technologies\r\n\r\nexport class AdvancedTempoAnalyzer {\r\n  constructor() {\r\n    this.audioContext = null;\r\n    this.sampleRate = 44100;\r\n    this.minTempo = 60;\r\n    this.maxTempo = 200;\r\n    this.tempoCandidates = [];\r\n    this.beatMap = [];\r\n    this.confidence = 0;\r\n  }\r\n\r\n  // אתחול מערכת ניתוח טמפו\r\n  async initialize() {\r\n    try {\r\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n      this.sampleRate = this.audioContext.sampleRate;\r\n      console.log('🎵 מערכת ניתוח טמפו מתקדמת אותחלה');\r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ שגיאה באתחול מערכת ניתוח טמפו:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // ניתוח טמפו מתקדם עם שילוב טכנולוגיות\r\n  async analyzeTempoAdvanced(audioBuffer) {\r\n    console.log('🎵 מתחיל ניתוח טמפו מתקדם...');\r\n    \r\n    const results = {\r\n      primaryTempo: 120,\r\n      confidence: 0,\r\n      beatMap: [],\r\n      timeSignature: { numerator: 4, denominator: 4 },\r\n      groove: { swing: 0, regularity: 0 },\r\n      analysis: {\r\n        autocorrelation: null,\r\n        spectralFlux: null,\r\n        onsetDetection: null,\r\n        beatTracking: null\r\n      }\r\n    };\r\n\r\n    try {\r\n      // 1. ניתוח אוטוקורלציה מתקדם\r\n      const autocorrResult = this.performAdvancedAutocorrelation(audioBuffer);\r\n      results.analysis.autocorrelation = autocorrResult;\r\n\r\n      // 2. זיהוי Onset מתקדם\r\n      const onsetResult = this.performOnsetDetection(audioBuffer);\r\n      results.analysis.onsetDetection = onsetResult;\r\n\r\n      // 3. ניתוח Spectral Flux\r\n      const spectralResult = this.performSpectralFluxAnalysis(audioBuffer);\r\n      results.analysis.spectralFlux = spectralResult;\r\n\r\n      // 4. מעקב ביטים מתקדם\r\n      const beatResult = this.performAdvancedBeatTracking(audioBuffer);\r\n      results.analysis.beatTracking = beatResult;\r\n\r\n      // 5. משקלול תוצאות\r\n      const finalResult = this.combineTempoResults([\r\n        autocorrResult,\r\n        onsetResult,\r\n        spectralResult,\r\n        beatResult\r\n      ]);\r\n\r\n      results.primaryTempo = finalResult.tempo;\r\n      results.confidence = finalResult.confidence;\r\n      results.beatMap = finalResult.beatMap;\r\n      results.groove = finalResult.groove;\r\n\r\n      console.log('✅ ניתוח טמפו מתקדם הושלם:', {\r\n        tempo: results.primaryTempo,\r\n        confidence: results.confidence,\r\n        beatCount: results.beatMap.length\r\n      });\r\n\r\n      return results;\r\n\r\n    } catch (error) {\r\n      console.error('❌ שגיאה בניתוח טמפו מתקדם:', error);\r\n      return results;\r\n    }\r\n  }\r\n\r\n  // ניתוח אוטוקורלציה מתקדם (בהשראת Essentia)\r\n  performAdvancedAutocorrelation(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const frameSize = Math.floor(this.sampleRate * 0.1); // 100ms frames\r\n    const hopSize = Math.floor(frameSize / 2);\r\n    const frames = [];\r\n\r\n    // חלוקה לפריימים\r\n    for (let i = 0; i < channelData.length - frameSize; i += hopSize) {\r\n      const frame = channelData.slice(i, i + frameSize);\r\n      frames.push(frame);\r\n    }\r\n\r\n    // חישוב אוטוקורלציה לכל פריים\r\n    const autocorrResults = frames.map(frame => {\r\n      return this.calculateAutocorrelation(frame);\r\n    });\r\n\r\n    // זיהוי דפוסים ריתמיים\r\n    const tempoCandidates = this.findTempoCandidates(autocorrResults);\r\n    \r\n    return {\r\n      method: 'autocorrelation',\r\n      tempoCandidates: tempoCandidates,\r\n      confidence: this.calculateConfidence(autocorrResults),\r\n      rhythmPatterns: this.extractRhythmPatterns(autocorrResults)\r\n    };\r\n  }\r\n\r\n  // חישוב אוטוקורלציה מתקדם\r\n  calculateAutocorrelation(data) {\r\n    const length = data.length;\r\n    const autocorr = new Float32Array(length);\r\n    \r\n    for (let lag = 0; lag < length; lag++) {\r\n      let sum = 0;\r\n      for (let i = 0; i < length - lag; i++) {\r\n        sum += data[i] * data[i + lag];\r\n      }\r\n      autocorr[lag] = sum / (length - lag);\r\n    }\r\n    \r\n    return autocorr;\r\n  }\r\n\r\n  // זיהוי Onset מתקדם (בהשראת Aubio)\r\n  performOnsetDetection(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const frameSize = Math.floor(this.sampleRate * 0.023); // 23ms frames\r\n    const hopSize = Math.floor(frameSize / 2);\r\n    const onsets = [];\r\n    const onsetStrengths = [];\r\n\r\n    // חישוב Spectral Flux לכל פריים\r\n    for (let i = 0; i < channelData.length - frameSize; i += hopSize) {\r\n      const frame = channelData.slice(i, i + frameSize);\r\n      const spectrum = this.calculateSpectrum(frame);\r\n      \r\n      if (i > 0) {\r\n        const prevFrame = channelData.slice(i - hopSize, i - hopSize + frameSize);\r\n        const prevSpectrum = this.calculateSpectrum(prevFrame);\r\n        const flux = this.calculateSpectralFlux(prevSpectrum, spectrum);\r\n        onsetStrengths.push(flux);\r\n        \r\n        // זיהוי Onset\r\n        if (flux > this.calculateOnsetThreshold(onsetStrengths)) {\r\n          onsets.push(i / this.sampleRate);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      method: 'onset_detection',\r\n      onsets: onsets,\r\n      onsetStrengths: onsetStrengths,\r\n      tempoEstimate: this.estimateTempoFromOnsets(onsets),\r\n      confidence: this.calculateOnsetConfidence(onsets, onsetStrengths)\r\n    };\r\n  }\r\n\r\n  // חישוב ספקטרום\r\n  calculateSpectrum(data) {\r\n    const fft = new FFT(data.length);\r\n    const spectrum = fft.forward(data);\r\n    return spectrum;\r\n  }\r\n\r\n  // חישוב Spectral Flux\r\n  calculateSpectralFlux(prevSpectrum, currentSpectrum) {\r\n    let flux = 0;\r\n    for (let i = 0; i < prevSpectrum.length; i++) {\r\n      const diff = currentSpectrum[i] - prevSpectrum[i];\r\n      flux += Math.max(0, diff); // רק ערכים חיוביים\r\n    }\r\n    return flux;\r\n  }\r\n\r\n  // ניתוח Spectral Flux מתקדם\r\n  performSpectralFluxAnalysis(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const frameSize = Math.floor(this.sampleRate * 0.046); // 46ms frames\r\n    const hopSize = Math.floor(frameSize / 2);\r\n    const fluxValues = [];\r\n    const peaks = [];\r\n\r\n    // חישוב Spectral Flux\r\n    for (let i = 0; i < channelData.length - frameSize; i += hopSize) {\r\n      const frame = channelData.slice(i, i + frameSize);\r\n      const spectrum = this.calculateSpectrum(frame);\r\n      \r\n      if (i > 0) {\r\n        const prevFrame = channelData.slice(i - hopSize, i - hopSize + frameSize);\r\n        const prevSpectrum = this.calculateSpectrum(prevFrame);\r\n        const flux = this.calculateSpectralFlux(prevSpectrum, spectrum);\r\n        fluxValues.push(flux);\r\n        \r\n        // זיהוי פיקים\r\n        if (this.isPeak(fluxValues, fluxValues.length - 1)) {\r\n          peaks.push(i / this.sampleRate);\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      method: 'spectral_flux',\r\n      fluxValues: fluxValues,\r\n      peaks: peaks,\r\n      tempoEstimate: this.estimateTempoFromPeaks(peaks),\r\n      confidence: this.calculateFluxConfidence(fluxValues)\r\n    };\r\n  }\r\n\r\n  // מעקב ביטים מתקדם (בהשראת BeatNet)\r\n  performAdvancedBeatTracking(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const frameSize = Math.floor(this.sampleRate * 0.1); // 100ms frames\r\n    const hopSize = Math.floor(frameSize / 2);\r\n    const beatProbabilities = [];\r\n    const beats = [];\r\n\r\n    // חישוב הסתברויות ביט לכל פריים\r\n    for (let i = 0; i < channelData.length - frameSize; i += hopSize) {\r\n      const frame = channelData.slice(i, i + frameSize);\r\n      const features = this.extractBeatFeatures(frame);\r\n      const probability = this.calculateBeatProbability(features);\r\n      beatProbabilities.push(probability);\r\n      \r\n      // זיהוי ביט\r\n      if (probability > this.calculateBeatThreshold(beatProbabilities)) {\r\n        beats.push(i / this.sampleRate);\r\n      }\r\n    }\r\n\r\n    return {\r\n      method: 'beat_tracking',\r\n      beats: beats,\r\n      beatProbabilities: beatProbabilities,\r\n      tempoEstimate: this.estimateTempoFromBeats(beats),\r\n      confidence: this.calculateBeatConfidence(beats, beatProbabilities)\r\n    };\r\n  }\r\n\r\n  // חילוץ מאפיינים לביט טראקינג\r\n  extractBeatFeatures(frame) {\r\n    const features = {\r\n      energy: this.calculateEnergy(frame),\r\n      spectralCentroid: this.calculateSpectralCentroid(frame),\r\n      spectralRolloff: this.calculateSpectralRolloff(frame),\r\n      zeroCrossingRate: this.calculateZeroCrossingRate(frame),\r\n      mfcc: this.calculateMFCC(frame)\r\n    };\r\n    \r\n    return features;\r\n  }\r\n\r\n  // חישוב הסתברות ביט\r\n  calculateBeatProbability(features) {\r\n    // מודל פשוט לחישוב הסתברות ביט\r\n    const energyWeight = 0.4;\r\n    const spectralWeight = 0.3;\r\n    const mfccWeight = 0.3;\r\n    \r\n    const energyScore = features.energy;\r\n    const spectralScore = (features.spectralCentroid + features.spectralRolloff) / 2;\r\n    const mfccScore = features.mfcc.reduce((sum, val) => sum + Math.abs(val), 0) / features.mfcc.length;\r\n    \r\n    return energyScore * energyWeight + spectralScore * spectralWeight + mfccScore * mfccWeight;\r\n  }\r\n\r\n  // משקלול תוצאות מכל השיטות\r\n  combineTempoResults(results) {\r\n    const tempoEstimates = [];\r\n    const confidences = [];\r\n    const beatMaps = [];\r\n\r\n    // איסוף תוצאות מכל השיטות\r\n    results.forEach(result => {\r\n      if (result.tempoEstimate && result.confidence) {\r\n        tempoEstimates.push(result.tempoEstimate);\r\n        confidences.push(result.confidence);\r\n      }\r\n      if (result.beats) {\r\n        beatMaps.push(...result.beats);\r\n      }\r\n    });\r\n\r\n    // חישוב טמפו סופי\r\n    const finalTempo = this.calculateWeightedTempo(tempoEstimates, confidences);\r\n    const finalConfidence = this.calculateAverageConfidence(confidences);\r\n    const finalBeatMap = this.mergeBeatMaps(beatMaps);\r\n\r\n    return {\r\n      tempo: finalTempo,\r\n      confidence: finalConfidence,\r\n      beatMap: finalBeatMap,\r\n      groove: this.calculateGroove(finalBeatMap)\r\n    };\r\n  }\r\n\r\n  // חישוב טמפו משוקלל\r\n  calculateWeightedTempo(tempos, confidences) {\r\n    if (tempos.length === 0) return 120;\r\n    \r\n    let weightedSum = 0;\r\n    let totalWeight = 0;\r\n    \r\n    for (let i = 0; i < tempos.length; i++) {\r\n      weightedSum += tempos[i] * confidences[i];\r\n      totalWeight += confidences[i];\r\n    }\r\n    \r\n    return totalWeight > 0 ? weightedSum / totalWeight : 120;\r\n  }\r\n\r\n  // חישוב Groove\r\n  calculateGroove(beatMap) {\r\n    if (beatMap.length < 2) return { swing: 0, regularity: 0 };\r\n    \r\n    const intervals = [];\r\n    for (let i = 1; i < beatMap.length; i++) {\r\n      intervals.push(beatMap[i] - beatMap[i - 1]);\r\n    }\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - meanInterval, 2), 0) / intervals.length;\r\n    \r\n    const regularity = Math.max(0, 1 - Math.sqrt(variance) / meanInterval);\r\n    const swing = this.calculateSwing(intervals);\r\n    \r\n    return { swing, regularity };\r\n  }\r\n\r\n  // חישוב Swing\r\n  calculateSwing(intervals) {\r\n    if (intervals.length < 2) return 0;\r\n    \r\n    let swingSum = 0;\r\n    for (let i = 0; i < intervals.length - 1; i += 2) {\r\n      if (i + 1 < intervals.length) {\r\n        const ratio = intervals[i + 1] / intervals[i];\r\n        swingSum += Math.abs(ratio - 1);\r\n      }\r\n    }\r\n    \r\n    return Math.min(1, swingSum / Math.floor(intervals.length / 2));\r\n  }\r\n\r\n  // פונקציות עזר\r\n  findTempoCandidates(autocorrResults) {\r\n    const candidates = [];\r\n    const minLag = Math.floor(this.sampleRate / this.maxTempo);\r\n    const maxLag = Math.floor(this.sampleRate / this.minTempo);\r\n    \r\n    autocorrResults.forEach(autocorr => {\r\n      for (let lag = minLag; lag < maxLag; lag++) {\r\n        if (this.isPeak(autocorr, lag)) {\r\n          const tempo = 60 / (lag / this.sampleRate);\r\n          candidates.push(tempo);\r\n        }\r\n      }\r\n    });\r\n    \r\n    return this.clusterTempoCandidates(candidates);\r\n  }\r\n\r\n  clusterTempoCandidates(candidates) {\r\n    const clusters = [];\r\n    const tolerance = 2; // BPM\r\n    \r\n    candidates.forEach(tempo => {\r\n      let found = false;\r\n      for (let cluster of clusters) {\r\n        if (Math.abs(cluster.tempo - tempo) < tolerance) {\r\n          cluster.count++;\r\n          cluster.tempo = (cluster.tempo + tempo) / 2;\r\n          found = true;\r\n          break;\r\n        }\r\n      }\r\n      if (!found) {\r\n        clusters.push({ tempo, count: 1 });\r\n      }\r\n    });\r\n    \r\n    return clusters.sort((a, b) => b.count - a.count);\r\n  }\r\n\r\n  isPeak(data, index) {\r\n    if (index <= 0 || index >= data.length - 1) return false;\r\n    return data[index] > data[index - 1] && data[index] > data[index + 1];\r\n  }\r\n\r\n  calculateConfidence(results) {\r\n    // חישוב ביטחון על בסיס עקביות התוצאות\r\n    const confidences = results.map(result => result.confidence || 0);\r\n    return confidences.reduce((a, b) => a + b, 0) / confidences.length;\r\n  }\r\n\r\n  extractRhythmPatterns(autocorrResults) {\r\n    // חילוץ דפוסים ריתמיים\r\n    const patterns = [];\r\n    autocorrResults.forEach(autocorr => {\r\n      const peaks = [];\r\n      for (let i = 0; i < autocorr.length; i++) {\r\n        if (this.isPeak(autocorr, i)) {\r\n          peaks.push(i);\r\n        }\r\n      }\r\n      patterns.push(peaks);\r\n    });\r\n    return patterns;\r\n  }\r\n\r\n  estimateTempoFromOnsets(onsets) {\r\n    if (onsets.length < 2) return 120;\r\n    \r\n    const intervals = [];\r\n    for (let i = 1; i < onsets.length; i++) {\r\n      intervals.push(onsets[i] - onsets[i - 1]);\r\n    }\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    return 60 / meanInterval;\r\n  }\r\n\r\n  calculateOnsetThreshold(strengths) {\r\n    if (strengths.length === 0) return 0;\r\n    const mean = strengths.reduce((a, b) => a + b, 0) / strengths.length;\r\n    const std = Math.sqrt(strengths.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / strengths.length);\r\n    return mean + std * 1.5;\r\n  }\r\n\r\n  calculateOnsetConfidence(onsets, strengths) {\r\n    if (onsets.length === 0) return 0;\r\n    const meanStrength = strengths.reduce((a, b) => a + b, 0) / strengths.length;\r\n    const regularity = this.calculateRegularity(onsets);\r\n    return (meanStrength + regularity) / 2;\r\n  }\r\n\r\n  estimateTempoFromPeaks(peaks) {\r\n    if (peaks.length < 2) return 120;\r\n    \r\n    const intervals = [];\r\n    for (let i = 1; i < peaks.length; i++) {\r\n      intervals.push(peaks[i] - peaks[i - 1]);\r\n    }\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    return 60 / meanInterval;\r\n  }\r\n\r\n  calculateFluxConfidence(fluxValues) {\r\n    if (fluxValues.length === 0) return 0;\r\n    const mean = fluxValues.reduce((a, b) => a + b, 0) / fluxValues.length;\r\n    const variance = fluxValues.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / fluxValues.length;\r\n    return Math.max(0, 1 - Math.sqrt(variance) / mean);\r\n  }\r\n\r\n  estimateTempoFromBeats(beats) {\r\n    if (beats.length < 2) return 120;\r\n    \r\n    const intervals = [];\r\n    for (let i = 1; i < beats.length; i++) {\r\n      intervals.push(beats[i] - beats[i - 1]);\r\n    }\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    return 60 / meanInterval;\r\n  }\r\n\r\n  calculateBeatThreshold(probabilities) {\r\n    if (probabilities.length === 0) return 0;\r\n    const mean = probabilities.reduce((a, b) => a + b, 0) / probabilities.length;\r\n    const std = Math.sqrt(probabilities.reduce((sum, val) => sum + Math.pow(val - mean, 2), 0) / probabilities.length);\r\n    return mean + std;\r\n  }\r\n\r\n  calculateBeatConfidence(beats, probabilities) {\r\n    if (beats.length === 0) return 0;\r\n    const meanProbability = probabilities.reduce((a, b) => a + b, 0) / probabilities.length;\r\n    const regularity = this.calculateRegularity(beats);\r\n    return (meanProbability + regularity) / 2;\r\n  }\r\n\r\n  calculateRegularity(times) {\r\n    if (times.length < 2) return 0;\r\n    \r\n    const intervals = [];\r\n    for (let i = 1; i < times.length; i++) {\r\n      intervals.push(times[i] - times[i - 1]);\r\n    }\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    const variance = intervals.reduce((sum, interval) => sum + Math.pow(interval - meanInterval, 2), 0) / intervals.length;\r\n    \r\n    return Math.max(0, 1 - Math.sqrt(variance) / meanInterval);\r\n  }\r\n\r\n  calculateAverageConfidence(confidences) {\r\n    if (confidences.length === 0) return 0;\r\n    return confidences.reduce((a, b) => a + b, 0) / confidences.length;\r\n  }\r\n\r\n  mergeBeatMaps(beatMaps) {\r\n    // מיזוג ביטים מכל השיטות\r\n    const allBeats = [...new Set(beatMaps)].sort((a, b) => a - b);\r\n    return allBeats;\r\n  }\r\n\r\n  // פונקציות עזר לחישוב מאפיינים\r\n  calculateEnergy(data) {\r\n    return data.reduce((sum, val) => sum + val * val, 0) / data.length;\r\n  }\r\n\r\n  calculateSpectralCentroid(data) {\r\n    const spectrum = this.calculateSpectrum(data);\r\n    let weightedSum = 0;\r\n    let sum = 0;\r\n    \r\n    for (let i = 0; i < spectrum.length; i++) {\r\n      const frequency = i * this.sampleRate / (2 * spectrum.length);\r\n      weightedSum += frequency * spectrum[i];\r\n      sum += spectrum[i];\r\n    }\r\n    \r\n    return sum > 0 ? weightedSum / sum : 0;\r\n  }\r\n\r\n  calculateSpectralRolloff(data) {\r\n    const spectrum = this.calculateSpectrum(data);\r\n    const threshold = 0.85;\r\n    let cumulative = 0;\r\n    const total = spectrum.reduce((sum, val) => sum + val, 0);\r\n    \r\n    for (let i = 0; i < spectrum.length; i++) {\r\n      cumulative += spectrum[i];\r\n      if (cumulative / total >= threshold) {\r\n        return i / spectrum.length;\r\n      }\r\n    }\r\n    \r\n    return 1;\r\n  }\r\n\r\n  calculateZeroCrossingRate(data) {\r\n    let crossings = 0;\r\n    for (let i = 1; i < data.length; i++) {\r\n      if ((data[i] >= 0 && data[i - 1] < 0) || (data[i] < 0 && data[i - 1] >= 0)) {\r\n        crossings++;\r\n      }\r\n    }\r\n    return crossings / data.length;\r\n  }\r\n\r\n  calculateMFCC(data) {\r\n    // חישוב MFCC פשוט\r\n    const spectrum = this.calculateSpectrum(data);\r\n    const melSpectrum = this.applyMelFilterbank(spectrum);\r\n    const mfcc = this.applyDCT(melSpectrum);\r\n    return mfcc.slice(0, 13); // 13 מקדמים ראשונים\r\n  }\r\n\r\n  applyMelFilterbank(spectrum) {\r\n    // יישום פשוט של Mel Filterbank\r\n    const numFilters = 26;\r\n    const melSpectrum = new Array(numFilters).fill(0);\r\n    \r\n    for (let i = 0; i < numFilters; i++) {\r\n      for (let j = 0; j < spectrum.length; j++) {\r\n        const melFilter = this.createMelFilter(j, i, spectrum.length);\r\n        melSpectrum[i] += spectrum[j] * melFilter;\r\n      }\r\n    }\r\n    \r\n    return melSpectrum;\r\n  }\r\n\r\n  createMelFilter(bin, filterIndex, numBins) {\r\n    // יצירת Mel Filter פשוט\r\n    const centerFreq = this.melToFreq(filterIndex * 2595 / 26);\r\n    const binFreq = bin * this.sampleRate / (2 * numBins);\r\n    const distance = Math.abs(binFreq - centerFreq);\r\n    return Math.max(0, 1 - distance / (centerFreq * 0.5));\r\n  }\r\n\r\n  melToFreq(mel) {\r\n    return 700 * (Math.pow(10, mel / 2595) - 1);\r\n  }\r\n\r\n  applyDCT(data) {\r\n    // יישום פשוט של DCT\r\n    const N = data.length;\r\n    const dct = new Array(N).fill(0);\r\n    \r\n    for (let k = 0; k < N; k++) {\r\n      for (let n = 0; n < N; n++) {\r\n        dct[k] += data[n] * Math.cos(Math.PI * k * (2 * n + 1) / (2 * N));\r\n      }\r\n    }\r\n    \r\n    return dct;\r\n  }\r\n}\r\n\r\n// מחלקת FFT פשוטה\r\nclass FFT {\r\n  constructor(size) {\r\n    this.size = size;\r\n  }\r\n\r\n  forward(data) {\r\n    // יישום פשוט של FFT\r\n    const real = new Float32Array(this.size);\r\n    const imag = new Float32Array(this.size);\r\n    \r\n    for (let i = 0; i < this.size; i++) {\r\n      real[i] = data[i] || 0;\r\n      imag[i] = 0;\r\n    }\r\n    \r\n    this.fft(real, imag);\r\n    \r\n    const magnitude = new Float32Array(this.size / 2);\r\n    for (let i = 0; i < this.size / 2; i++) {\r\n      magnitude[i] = Math.sqrt(real[i] * real[i] + imag[i] * imag[i]);\r\n    }\r\n    \r\n    return magnitude;\r\n  }\r\n\r\n  fft(real, imag) {\r\n    // יישום FFT בסיסי\r\n    const N = real.length;\r\n    \r\n    if (N <= 1) return;\r\n    \r\n    const evenReal = new Float32Array(N / 2);\r\n    const evenImag = new Float32Array(N / 2);\r\n    const oddReal = new Float32Array(N / 2);\r\n    const oddImag = new Float32Array(N / 2);\r\n    \r\n    for (let i = 0; i < N / 2; i++) {\r\n      evenReal[i] = real[2 * i];\r\n      evenImag[i] = imag[2 * i];\r\n      oddReal[i] = real[2 * i + 1];\r\n      oddImag[i] = imag[2 * i + 1];\r\n    }\r\n    \r\n    this.fft(evenReal, evenImag);\r\n    this.fft(oddReal, oddImag);\r\n    \r\n    for (let k = 0; k < N / 2; k++) {\r\n      const angle = -2 * Math.PI * k / N;\r\n      const cos = Math.cos(angle);\r\n      const sin = Math.sin(angle);\r\n      \r\n      const tempReal = cos * oddReal[k] - sin * oddImag[k];\r\n      const tempImag = sin * oddReal[k] + cos * oddImag[k];\r\n      \r\n      real[k] = evenReal[k] + tempReal;\r\n      imag[k] = evenImag[k] + tempImag;\r\n      real[k + N / 2] = evenReal[k] - tempReal;\r\n      imag[k + N / 2] = evenImag[k] - tempImag;\r\n    }\r\n  }\r\n} ","import React, { useState, useEffect, useContext } from 'react';\r\n// אייקונים לדוג' (שנה בהתאם למה שיש אצלך)\r\nimport { ExternalLink, Volume2, Radio, Waves, Clock, Zap, Star, Award, Crown, Upload, Music, Drumstick, Speaker, Brain, TrendingUp, Target, Sparkles, BarChart3, Mic, Settings, Play, Pause, RotateCcw, Cpu, Activity, Bot, Zap as ZapIcon } from 'lucide-react';\r\nimport { Card, CardContent } from './ui/card';\r\nimport { Button } from './ui/button';\r\nimport YAMNetAnalyzer from '../lib/yamnet';\r\nimport AIApiService from '../lib/aiApi';\r\nimport { AdvancedTempoAnalyzer } from '../lib/tempoAnalysis.js';\r\nimport { useTranslation } from '../lib/translations';\r\n\r\n// ----- מערכת AI לניתוח אודיו עם YAMNet -----\r\nclass AudioAnalyzer {\r\n  constructor() {\r\n    this.audioContext = null;\r\n    this.analyser = null;\r\n    this.dataArray = null;\r\n    this.isAnalyzing = false;\r\n    this.yamnetAnalyzer = new YAMNetAnalyzer();\r\n    this.yamnetLoaded = false;\r\n    this.tempoAnalyzer = new AdvancedTempoAnalyzer();\r\n    \r\n    // יצירת מפה של כל הפלאגינים הזמינים\r\n    this.allPluginsMap = this.createAllPluginsMap();\r\n  }\r\n\r\n  createAllPluginsMap() {\r\n    const map = {};\r\n    \r\n    // הוספת כל הפלאגינים מ-stemPlugins למפה\r\n    Object.keys(stemPlugins).forEach(stemType => {\r\n      Object.keys(stemPlugins[stemType]).forEach(category => {\r\n        stemPlugins[stemType][category].forEach(plugin => {\r\n          const key = `${plugin.name}_${category}`;\r\n          map[key] = {\r\n            ...plugin,\r\n            sourceStemType: stemType,\r\n            sourceCategory: category\r\n          };\r\n        });\r\n      });\r\n    });\r\n    \r\n    return map;\r\n  }\r\n\r\n  // פונקציה למציאת פלאגין מתאים מהמפה\r\n  findPluginByName(name, category) {\r\n    const key = `${name}_${category}`;\r\n    return this.allPluginsMap[key] || null;\r\n  }\r\n\r\n  // פונקציה למציאת פלאגין חלופי מאותה קטגוריה\r\n  findAlternativePlugin(category, stemType) {\r\n    if (stemPlugins[stemType] && stemPlugins[stemType][category]) {\r\n      return stemPlugins[stemType][category][0];\r\n    }\r\n    // נסיגה לפלאגין כללי\r\n    return this.findGeneralPlugin(category);\r\n  }\r\n\r\n  findGeneralPlugin(category) {\r\n    // חיפוש פלאגין כללי מכל הסטמים\r\n    for (const stemType of Object.keys(stemPlugins)) {\r\n      if (stemPlugins[stemType][category]) {\r\n        return stemPlugins[stemType][category][0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  async initializeAudioContext() {\r\n    try {\r\n      this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n      this.analyser = this.audioContext.createAnalyser();\r\n      this.analyser.fftSize = 2048;\r\n      const bufferLength = this.analyser.frequencyBinCount;\r\n      this.dataArray = new Uint8Array(bufferLength);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('שגיאה באתחול AudioContext:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async analyzeAudioFile(file) {\r\n    if (!this.audioContext) {\r\n      const initialized = await this.initializeAudioContext();\r\n      if (!initialized) return null;\r\n    }\r\n\r\n    try {\r\n      const arrayBuffer = await file.arrayBuffer();\r\n      const audioBuffer = await this.audioContext.decodeAudioData(arrayBuffer);\r\n      \r\n      // אתחול מערכת ניתוח טמפו מתקדמת\r\n      await this.tempoAnalyzer.initialize();\r\n      \r\n      // ניתוח טמפו מתקדם\r\n      const advancedTempoAnalysis = await this.tempoAnalyzer.analyzeTempoAdvanced(audioBuffer);\r\n      \r\n      // ניתוח עם YAMNet\r\n      const yamnetAnalysis = await this.performYAMNetAnalysis(audioBuffer);\r\n      \r\n      // ניתוח מסורתי\r\n      const traditionalAnalysis = this.performDeepAnalysis(audioBuffer);\r\n      \r\n      // שילוב התוצאות\r\n      return this.combineAnalyses(traditionalAnalysis, yamnetAnalysis, advancedTempoAnalysis);\r\n    } catch (error) {\r\n      console.error('שגיאה בניתוח הקובץ:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async performYAMNetAnalysis(audioBuffer) {\r\n    try {\r\n      if (!this.yamnetLoaded) {\r\n        console.log('טוען YAMNet...');\r\n        this.yamnetLoaded = await this.yamnetAnalyzer.loadModel();\r\n        if (!this.yamnetLoaded) {\r\n          console.warn('YAMNet לא נטען, ממשיך עם ניתוח מסורתי בלבד');\r\n          return null;\r\n        }\r\n      }\r\n\r\n      const yamnetResult = await this.yamnetAnalyzer.analyzeWithYAMNet(audioBuffer);\r\n      if (!yamnetResult) return null;\r\n\r\n      return {\r\n        yamnetPredictions: yamnetResult.predictions,\r\n        instrumentAnalysis: this.yamnetAnalyzer.getInstrumentAnalysis(yamnetResult.predictions),\r\n        genreAnalysis: this.yamnetAnalyzer.getGenreAnalysis(yamnetResult.predictions),\r\n        yamnetRecommendations: this.yamnetAnalyzer.getProductionRecommendations(yamnetResult.predictions),\r\n        confidence: yamnetResult.confidence\r\n      };\r\n    } catch (error) {\r\n      console.error('שגיאה בניתוח YAMNet:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  combineAnalyses(traditionalAnalysis, yamnetAnalysis, advancedTempoAnalysis) {\r\n    const combined = {\r\n      ...traditionalAnalysis,\r\n      yamnet: yamnetAnalysis,\r\n      advancedTempo: advancedTempoAnalysis\r\n    };\r\n\r\n    // שיפור זיהוי כלי נגינה עם YAMNet\r\n    if (yamnetAnalysis && yamnetAnalysis.instrumentAnalysis) {\r\n      combined.enhancedInstruments = this.enhanceInstrumentDetection(\r\n        traditionalAnalysis.instruments,\r\n        yamnetAnalysis.instrumentAnalysis\r\n      );\r\n    }\r\n\r\n    // שיפור המלצות עם YAMNet\r\n    if (yamnetAnalysis && yamnetAnalysis.yamnetRecommendations) {\r\n      combined.enhancedRecommendations = this.enhanceRecommendations(\r\n        traditionalAnalysis.recommendations,\r\n        yamnetAnalysis.yamnetRecommendations\r\n      );\r\n    }\r\n\r\n    // שילוב ניתוח טמפו מתקדם\r\n    if (advancedTempoAnalysis) {\r\n      combined.enhancedRhythm = {\r\n        ...combined.rhythmicAnalysis,\r\n        advancedTempo: advancedTempoAnalysis.primaryTempo,\r\n        tempoConfidence: advancedTempoAnalysis.confidence,\r\n        beatMap: advancedTempoAnalysis.beatMap,\r\n        timeSignature: advancedTempoAnalysis.timeSignature,\r\n        groove: advancedTempoAnalysis.groove,\r\n        analysisMethods: advancedTempoAnalysis.analysis\r\n      };\r\n    }\r\n\r\n    return combined;\r\n  }\r\n\r\n  enhanceInstrumentDetection(traditionalInstruments, yamnetInstruments) {\r\n    const enhanced = { ...traditionalInstruments };\r\n    \r\n    // הוספת זיהוי YAMNet לכלי נגינה\r\n    for (const [category, predictions] of Object.entries(yamnetInstruments)) {\r\n      if (predictions.length > 0) {\r\n        const confidence = predictions.reduce((sum, pred) => sum + pred.score, 0) / predictions.length;\r\n        enhanced[category] = {\r\n          ...enhanced[category],\r\n          yamnetConfidence: confidence,\r\n          yamnetPredictions: predictions\r\n        };\r\n      }\r\n    }\r\n\r\n    return enhanced;\r\n  }\r\n\r\n  enhanceRecommendations(traditionalRecommendations, yamnetRecommendations) {\r\n    const enhanced = { ...traditionalRecommendations };\r\n    \r\n    // הוספת המלצות YAMNet\r\n    for (const [category, recommendations] of Object.entries(yamnetRecommendations)) {\r\n      if (recommendations.length > 0) {\r\n        enhanced[category] = [\r\n          ...(enhanced[category] || []),\r\n          ...recommendations.map(rec => ({\r\n            ...rec,\r\n            source: 'YAMNet',\r\n            priority: 'high'\r\n          }))\r\n        ];\r\n      }\r\n    }\r\n\r\n    return enhanced;\r\n  }\r\n\r\n  performDeepAnalysis(audioBuffer) {\r\n    const analysis = {\r\n      // ניתוח תדרים\r\n      frequencyAnalysis: this.analyzeFrequencySpectrum(audioBuffer),\r\n      \r\n      // ניתוח דינמיקה\r\n      dynamicsAnalysis: this.analyzeDynamics(audioBuffer),\r\n      \r\n      // ניתוח ריתמי\r\n      rhythmicAnalysis: this.analyzeRhythm(audioBuffer),\r\n      \r\n      // זיהוי כלי נגינה\r\n      instrumentDetection: this.detectInstruments(audioBuffer),\r\n      \r\n      // ניתוח סגנון מוזיקלי\r\n      genreAnalysis: this.analyzeGenre(audioBuffer),\r\n      \r\n      // ניתוח איכות הקלטה\r\n      qualityAnalysis: this.analyzeRecordingQuality(audioBuffer),\r\n      \r\n      // המלצות מותאמות\r\n      recommendations: {}\r\n    };\r\n\r\n    // יצירת המלצות מותאמות אישית\r\n    analysis.recommendations = this.generatePersonalizedRecommendations(analysis);\r\n    \r\n    return analysis;\r\n  }\r\n\r\n  analyzeFrequencySpectrum(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const fft = new FFT(2048);\r\n    fft.forward(channelData);\r\n    \r\n    const spectrum = fft.spectrum;\r\n    const lowFreq = spectrum.slice(0, 100).reduce((a, b) => a + b, 0) / 100;\r\n    const midFreq = spectrum.slice(100, 500).reduce((a, b) => a + b, 0) / 400;\r\n    const highFreq = spectrum.slice(500, 1000).reduce((a, b) => a + b, 0) / 500;\r\n    \r\n    return {\r\n      lowFreq: lowFreq,\r\n      midFreq: midFreq,\r\n      highFreq: highFreq,\r\n      dominantFreq: this.findDominantFrequency(spectrum),\r\n      frequencyBalance: this.calculateFrequencyBalance(lowFreq, midFreq, highFreq)\r\n    };\r\n  }\r\n\r\n  analyzeDynamics(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const rms = this.calculateRMS(channelData);\r\n    const peak = this.calculatePeak(channelData);\r\n    const dynamicRange = peak - rms;\r\n    \r\n    return {\r\n      rms: rms,\r\n      peak: peak,\r\n      dynamicRange: dynamicRange,\r\n      compression: this.calculateCompressionRatio(peak, rms),\r\n      transients: this.detectTransients(channelData)\r\n    };\r\n  }\r\n\r\n  analyzeRhythm(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const tempo = this.detectTempo(channelData);\r\n    const groove = this.analyzeGroove(channelData);\r\n    \r\n    return {\r\n      tempo: tempo,\r\n      groove: groove,\r\n      rhythmicComplexity: this.calculateRhythmicComplexity(channelData),\r\n      timing: this.analyzeTiming(channelData)\r\n    };\r\n  }\r\n\r\n  detectInstruments(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const features = this.extractAudioFeatures(channelData);\r\n    \r\n    // זיהוי כלי נגינה באמצעות AI\r\n    const instrumentScores = {\r\n      drums: this.calculateDrumScore(features),\r\n      bass: this.calculateBassScore(features),\r\n      guitar: this.calculateGuitarScore(features),\r\n      piano: this.calculatePianoScore(features),\r\n      violin: this.calculateViolinScore(features),\r\n      vocal: this.calculateVocalScore(features)\r\n    };\r\n    \r\n    const primaryInstrument = this.getPrimaryInstrument(instrumentScores);\r\n    \r\n    // לוגים לדיבוג\r\n    console.log('=== ניתוח כלי נגינה ===');\r\n    console.log('ציונים לכלי נגינה:', instrumentScores);\r\n    console.log('כלי ראשי שזוהה:', primaryInstrument);\r\n    console.log('מאפיינים שחושבו:', features);\r\n    \r\n    return {\r\n      primaryInstrument: primaryInstrument,\r\n      confidence: Math.max(...Object.values(instrumentScores)), // זה בסדר כי זה מערך קטן של 6 ערכים\r\n      allScores: instrumentScores\r\n    };\r\n  }\r\n\r\n  analyzeGenre(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    const features = this.extractAudioFeatures(channelData);\r\n    \r\n    return {\r\n      primaryGenre: this.classifyGenre(features),\r\n      subGenres: this.detectSubGenres(features),\r\n      mood: this.analyzeMood(features),\r\n      energy: this.calculateEnergy(features)\r\n    };\r\n  }\r\n\r\n  analyzeRecordingQuality(audioBuffer) {\r\n    const channelData = audioBuffer.getChannelData(0);\r\n    \r\n    return {\r\n      noiseFloor: this.calculateNoiseFloor(channelData),\r\n      clipping: this.detectClipping(channelData),\r\n      phaseIssues: this.detectPhaseIssues(audioBuffer),\r\n      sampleRate: audioBuffer.sampleRate,\r\n      bitDepth: this.estimateBitDepth(channelData),\r\n      overallQuality: this.calculateOverallQuality(channelData)\r\n    };\r\n  }\r\n\r\n  generatePersonalizedRecommendations(analysis) {\r\n    const recommendations = {\r\n      compression: this.getCompressionRecommendations(analysis),\r\n      eq: this.getEQRecommendations(analysis),\r\n      reverb: this.getReverbRecommendations(analysis),\r\n      delay: this.getDelayRecommendations(analysis),\r\n      saturation: this.getSaturationRecommendations(analysis),\r\n      additional: this.getAdditionalRecommendations(analysis)\r\n    };\r\n    \r\n    // וידוא שכל קטגוריה מכילה לפחות המלצה אחת\r\n    Object.keys(recommendations).forEach(category => {\r\n      if (category !== 'additional' && (!recommendations[category] || recommendations[category].length === 0)) {\r\n        const fallbackPlugin = this.findAlternativePlugin(category, analysis.instrumentDetection.primaryInstrument);\r\n        if (fallbackPlugin) {\r\n          recommendations[category] = [{\r\n            ...fallbackPlugin,\r\n            reason: 'המלצה כללית מבוססת ניתוח AI',\r\n            description: fallbackPlugin.description\r\n          }];\r\n        }\r\n      }\r\n    });\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  // פונקציות עזר לניתוח\r\n  calculateRMS(data) {\r\n    let sum = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      sum += data[i] * data[i];\r\n    }\r\n    return Math.sqrt(sum / data.length);\r\n  }\r\n\r\n  calculatePeak(data) {\r\n    let max = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      const abs = Math.abs(data[i]);\r\n      if (abs > max) max = abs;\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateCompressionRatio(peak, rms) {\r\n    return peak / (rms + 0.0001);\r\n  }\r\n\r\n  detectTransients(data) {\r\n    const transients = [];\r\n    const threshold = 0.1;\r\n    \r\n    for (let i = 1; i < data.length; i++) {\r\n      const diff = Math.abs(data[i] - data[i - 1]);\r\n      if (diff > threshold) {\r\n        transients.push(i);\r\n      }\r\n    }\r\n    \r\n    return transients;\r\n  }\r\n\r\n  detectTempo(data) {\r\n    // אלגוריתם זיהוי טמפו מתקדם\r\n    const autocorrelation = this.calculateAutocorrelation(data);\r\n    const peaks = this.findPeaks(autocorrelation);\r\n    return this.calculateTempoFromPeaks(peaks);\r\n  }\r\n\r\n  calculateDrumScore(features) {\r\n    // אלגוריתם AI לזיהוי תופים\r\n    const transientDensity = features.transientDensity || 0;\r\n    const lowFreqEnergy = features.lowFreqEnergy || 0;\r\n    const rhythmicRegularity = features.rhythmicRegularity || 0;\r\n    \r\n    return (transientDensity * 0.4 + lowFreqEnergy * 0.3 + rhythmicRegularity * 0.3);\r\n  }\r\n\r\n  calculateBassScore(features) {\r\n    const lowFreqContent = features.lowFreqContent || 0;\r\n    const sustain = features.sustain || 0;\r\n    const harmonicContent = features.harmonicContent || 0;\r\n    \r\n    // הפחתת הציון של בס כדי לתת עדיפות לווקאל\r\n    const baseScore = (lowFreqContent * 0.5 + sustain * 0.3 + harmonicContent * 0.2);\r\n    \r\n    // הפחתה נוספת אם יש מאפיינים ווקאליים\r\n    const formantStructure = features.formantStructure || 0;\r\n    const breathiness = features.breathiness || 0;\r\n    \r\n    let reduction = 0;\r\n    if (formantStructure > 0.05) reduction += 0.3; // הפחתה משמעותית אם יש פורמנטים\r\n    if (breathiness > 0.02) reduction += 0.2; // הפחתה נוספת אם יש נשימות\r\n    \r\n    const finalScore = Math.max(0, baseScore - reduction);\r\n    \r\n    console.log('=== ניקוד בס ===');\r\n    console.log('תוכן תדרים נמוכים:', lowFreqContent);\r\n    console.log('סוסטיין:', sustain);\r\n    console.log('תוכן הרמוני:', harmonicContent);\r\n    console.log('ציון בסיס:', baseScore);\r\n    console.log('הפחתה:', reduction);\r\n    console.log('ניקוד סופי לבס:', finalScore);\r\n    \r\n    return finalScore;\r\n  }\r\n\r\n  calculateGuitarScore(features) {\r\n    const midFreqContent = features.midFreqContent || 0;\r\n    const harmonicRichness = features.harmonicRichness || 0;\r\n    const transientSharpness = features.transientSharpness || 0;\r\n    \r\n    return (midFreqContent * 0.4 + harmonicRichness * 0.4 + transientSharpness * 0.2);\r\n  }\r\n\r\n  calculatePianoScore(features) {\r\n    const harmonicComplexity = features.harmonicComplexity || 0;\r\n    const dynamicRange = features.dynamicRange || 0;\r\n    const sustain = features.sustain || 0;\r\n    \r\n    // הקטנת המשקל של מאפיינים שעלולים להיות דומים לווקאל\r\n    const score = (harmonicComplexity * 0.5 + dynamicRange * 0.3 + sustain * 0.2);\r\n    \r\n    console.log('=== ניקוד פסנתר ===');\r\n    console.log('מורכבות הרמונית:', harmonicComplexity);\r\n    console.log('טווח דינמי:', dynamicRange);\r\n    console.log('סוסטיין:', sustain);\r\n    console.log('ניקוד סופי לפסנתר:', score);\r\n    \r\n    return score;\r\n  }\r\n\r\n  calculateViolinScore(features) {\r\n    const highFreqContent = features.highFreqContent || 0;\r\n    const vibrato = features.vibrato || 0;\r\n    const bowing = features.bowing || 0;\r\n    \r\n    return (highFreqContent * 0.4 + vibrato * 0.3 + bowing * 0.3);\r\n  }\r\n\r\n  calculateVocalScore(features) {\r\n    const formantStructure = features.formantStructure || 0;\r\n    const breathiness = features.breathiness || 0;\r\n    const pitchVariation = features.pitchVariation || 0;\r\n    const vocalArticulation = features.vocalArticulation || 0;\r\n    \r\n    // הגדלת המשקל של מאפיינים ווקאליים ספציפיים - עדיפות לווקאל\r\n    const score = (formantStructure * 0.6 + breathiness * 0.2 + pitchVariation * 0.15 + vocalArticulation * 0.05);\r\n    \r\n    // אם יש מאפיינים ווקאליים חזקים, תן בונוס\r\n    let bonus = 0;\r\n    if (formantStructure > 0.1) bonus += 0.2;\r\n    if (breathiness > 0.05) bonus += 0.1;\r\n    if (pitchVariation > 0.1) bonus += 0.1;\r\n    \r\n    const finalScore = Math.min(1, score + bonus);\r\n    \r\n    return finalScore;\r\n  }\r\n\r\n  getPrimaryInstrument(scores) {\r\n    // בדיקה אם יש מאפיינים ווקאליים חזקים - עדיפות מוחלטת לווקאל\r\n    const vocalScore = scores.vocal || 0;\r\n    const bassScore = scores.bass || 0;\r\n    const pianoScore = scores.piano || 0;\r\n    const guitarScore = scores.guitar || 0;\r\n    const drumScore = scores.drum || 0;\r\n    \r\n    console.log('=== בחירת כלי ראשי ===');\r\n    console.log('כל הציונים:', scores);\r\n    \r\n    // עדיפות מוחלטת לווקאל - אם יש ווקאל, זה הכלי הראשי\r\n    if (vocalScore > 0.1) {\r\n      console.log('כלי שנבחר: vocal (עדיפות מוחלטת לווקאל)');\r\n      console.log('ביטחון בזיהוי:', vocalScore);\r\n      return 'vocal';\r\n    }\r\n    \r\n    // אם אין ווקאל, בחר הכלי עם הציון הגבוה ביותר\r\n    const primary = Object.keys(scores).reduce((a, b) => scores[a] > scores[b] ? a : b);\r\n    console.log('כלי שנבחר:', primary);\r\n    console.log('ביטחון בזיהוי:', scores[primary]);\r\n    return primary;\r\n  }\r\n\r\n  // פונקציות עזר נוספות לניתוח AI\r\n  findDominantFrequency(spectrum) {\r\n    let maxIndex = 0;\r\n    let maxValue = 0;\r\n    \r\n    for (let i = 0; i < spectrum.length; i++) {\r\n      if (spectrum[i] > maxValue) {\r\n        maxValue = spectrum[i];\r\n        maxIndex = i;\r\n      }\r\n    }\r\n    \r\n    return maxIndex * (this.audioContext.sampleRate / (2 * spectrum.length));\r\n  }\r\n\r\n  calculateFrequencyBalance(lowFreq, midFreq, highFreq) {\r\n    const total = lowFreq + midFreq + highFreq;\r\n    if (total === 0) return 0.33;\r\n    \r\n    const lowRatio = lowFreq / total;\r\n    const midRatio = midFreq / total;\r\n    const highRatio = highFreq / total;\r\n    \r\n    // חישוב איזון - ככל שהערכים קרובים יותר, האיזון טוב יותר\r\n    const idealRatio = 0.33;\r\n    const balance = 1 - Math.sqrt(\r\n      Math.pow(lowRatio - idealRatio, 2) + \r\n      Math.pow(midRatio - idealRatio, 2) + \r\n      Math.pow(highRatio - idealRatio, 2)\r\n    );\r\n    \r\n    return Math.max(0, balance);\r\n  }\r\n\r\n  analyzeGroove(data) {\r\n    // ניתוח גרוב - זיהוי דפוסים ריתמיים\r\n    const transients = this.detectTransients(data);\r\n    const intervals = [];\r\n    \r\n    for (let i = 1; i < transients.length; i++) {\r\n      intervals.push(transients[i] - transients[i - 1]);\r\n    }\r\n    \r\n    if (intervals.length === 0) return { regularity: 0, swing: 0 };\r\n    \r\n    // חישוב סדירות\r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    const variance = intervals.reduce((sum, interval) => \r\n      sum + Math.pow(interval - meanInterval, 2), 0) / intervals.length;\r\n    const regularity = 1 / (1 + variance);\r\n    \r\n    // חישוב סווינג\r\n    const swingRatios = [];\r\n    for (let i = 0; i < intervals.length - 1; i += 2) {\r\n      if (intervals[i + 1]) {\r\n        swingRatios.push(intervals[i + 1] / intervals[i]);\r\n      }\r\n    }\r\n    \r\n    const swing = swingRatios.length > 0 ? \r\n      swingRatios.reduce((a, b) => a + b, 0) / swingRatios.length : 1;\r\n    \r\n    return { regularity, swing };\r\n  }\r\n\r\n  calculateRhythmicComplexity(data) {\r\n    const transients = this.detectTransients(data);\r\n    const intervals = [];\r\n    \r\n    for (let i = 1; i < transients.length; i++) {\r\n      intervals.push(transients[i] - transients[i - 1]);\r\n    }\r\n    \r\n    if (intervals.length === 0) return 0;\r\n    \r\n    // חישוב מורכבות ריתמית\r\n    const uniqueIntervals = [...new Set(intervals)];\r\n    const complexity = uniqueIntervals.length / intervals.length;\r\n    \r\n    return Math.min(1, complexity * 2);\r\n  }\r\n\r\n  analyzeTiming(data) {\r\n    const transients = this.detectTransients(data);\r\n    const timing = {\r\n      precision: 0,\r\n      humanization: 0,\r\n      groove: 0\r\n    };\r\n    \r\n    if (transients.length < 2) return timing;\r\n    \r\n    // חישוב דיוק\r\n    const intervals = [];\r\n    for (let i = 1; i < transients.length; i++) {\r\n      intervals.push(transients[i] - transients[i - 1]);\r\n    }\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    const variance = intervals.reduce((sum, interval) => \r\n      sum + Math.pow(interval - meanInterval, 2), 0) / intervals.length;\r\n    \r\n    timing.precision = 1 / (1 + variance);\r\n    timing.humanization = 1 - timing.precision;\r\n    timing.groove = this.analyzeGroove(data).regularity;\r\n    \r\n    return timing;\r\n  }\r\n\r\n  calculateAutocorrelation(data) {\r\n    const maxLag = Math.min(1000, Math.floor(data.length / 2));\r\n    const autocorr = new Float32Array(maxLag);\r\n    \r\n    for (let lag = 0; lag < maxLag; lag++) {\r\n      let sum = 0;\r\n      for (let i = 0; i < data.length - lag; i++) {\r\n        sum += data[i] * data[i + lag];\r\n      }\r\n      autocorr[lag] = sum / (data.length - lag);\r\n    }\r\n    \r\n    return autocorr;\r\n  }\r\n\r\n  findPeaks(autocorr) {\r\n    const peaks = [];\r\n    \r\n    // חישוב מקסימום ידני במקום Math.max(...autocorr)\r\n    let maxAutocorr = 0;\r\n    for (let i = 0; i < autocorr.length; i++) {\r\n      if (autocorr[i] > maxAutocorr) {\r\n        maxAutocorr = autocorr[i];\r\n      }\r\n    }\r\n    \r\n    const threshold = maxAutocorr * 0.5;\r\n    \r\n    for (let i = 1; i < autocorr.length - 1; i++) {\r\n      if (autocorr[i] > threshold && \r\n          autocorr[i] > autocorr[i - 1] && \r\n          autocorr[i] > autocorr[i + 1]) {\r\n        peaks.push(i);\r\n      }\r\n    }\r\n    \r\n    return peaks;\r\n  }\r\n\r\n  calculateTempoFromPeaks(peaks) {\r\n    if (peaks.length === 0) return 120;\r\n    \r\n    // חישוב טמפו מפיקים\r\n    const intervals = [];\r\n    for (let i = 1; i < peaks.length; i++) {\r\n      intervals.push(peaks[i] - peaks[i - 1]);\r\n    }\r\n    \r\n    if (intervals.length === 0) return 120;\r\n    \r\n    const meanInterval = intervals.reduce((a, b) => a + b, 0) / intervals.length;\r\n    const tempo = 60 / (meanInterval / this.audioContext.sampleRate);\r\n    \r\n    return Math.max(60, Math.min(200, tempo));\r\n  }\r\n\r\n  classifyGenre(features) {\r\n    // סיווג סגנון מוזיקלי לפי מאפיינים\r\n    const { spectralCentroid, spectralRolloff, zeroCrossingRate } = features;\r\n    \r\n    if (spectralCentroid > 0.7 && spectralRolloff > 0.8) {\r\n      return 'electronic';\r\n    } else if (spectralCentroid > 0.6 && zeroCrossingRate > 0.3) {\r\n      return 'rock';\r\n    } else if (spectralCentroid < 0.4 && spectralRolloff < 0.6) {\r\n      return 'jazz';\r\n    } else if (spectralCentroid > 0.5 && spectralRolloff > 0.7) {\r\n      return 'pop';\r\n    } else {\r\n      return 'classical';\r\n    }\r\n  }\r\n\r\n  detectSubGenres(features) {\r\n    const subGenres = [];\r\n    const { spectralCentroid, spectralRolloff } = features;\r\n    \r\n    if (spectralCentroid > 0.8) subGenres.push('dance');\r\n    if (spectralRolloff > 0.9) subGenres.push('electronic');\r\n    if (spectralCentroid < 0.3) subGenres.push('ambient');\r\n    \r\n    return subGenres;\r\n  }\r\n\r\n  analyzeMood(features) {\r\n    const { spectralCentroid, spectralRolloff } = features;\r\n    \r\n    if (spectralCentroid > 0.7) {\r\n      return spectralRolloff > 0.8 ? 'energetic' : 'bright';\r\n    } else if (spectralCentroid < 0.4) {\r\n      return 'mellow';\r\n    } else {\r\n      return 'neutral';\r\n    }\r\n  }\r\n\r\n  calculateEnergy(features) {\r\n    const { spectralCentroid, spectralRolloff } = features;\r\n    return (spectralCentroid + spectralRolloff) / 2;\r\n  }\r\n\r\n  calculateNoiseFloor(data) {\r\n    // חישוב רמת הרעש\r\n    const sortedData = [...data].sort((a, b) => Math.abs(a) - Math.abs(b));\r\n    const noiseFloor = sortedData[Math.floor(sortedData.length * 0.1)];\r\n    return 20 * Math.log10(Math.abs(noiseFloor) + 1e-10);\r\n  }\r\n\r\n  detectClipping(data) {\r\n    // זיהוי קליפינג\r\n    const clippingThreshold = 0.95;\r\n    let clippingCount = 0;\r\n    \r\n    for (let i = 0; i < data.length; i++) {\r\n      if (Math.abs(data[i]) > clippingThreshold) {\r\n        clippingCount++;\r\n      }\r\n    }\r\n    \r\n    return clippingCount / data.length > 0.01;\r\n  }\r\n\r\n  detectPhaseIssues(audioBuffer) {\r\n    // זיהוי בעיות פאזה\r\n    if (audioBuffer.numberOfChannels < 2) return false;\r\n    \r\n    const leftChannel = audioBuffer.getChannelData(0);\r\n    const rightChannel = audioBuffer.getChannelData(1);\r\n    \r\n    let correlation = 0;\r\n    for (let i = 0; i < leftChannel.length; i++) {\r\n      correlation += leftChannel[i] * rightChannel[i];\r\n    }\r\n    \r\n    correlation /= leftChannel.length;\r\n    return correlation < 0.3;\r\n  }\r\n\r\n  estimateBitDepth(data) {\r\n    // הערכת ביט דפט'\r\n    let maxValue = 0;\r\n    for (let i = 0; i < data.length; i++) {\r\n      const abs = Math.abs(data[i]);\r\n      if (abs > maxValue) maxValue = abs;\r\n    }\r\n    const bitDepth = Math.log2(maxValue * 2) + 1;\r\n    return Math.round(bitDepth);\r\n  }\r\n\r\n  calculateOverallQuality(data) {\r\n    const noiseFloor = this.calculateNoiseFloor(data);\r\n    const clipping = this.detectClipping(data);\r\n    const dynamicRange = this.calculatePeak(data) - Math.abs(noiseFloor);\r\n    \r\n    let quality = 0.5;\r\n    \r\n    if (!clipping) quality += 0.2;\r\n    if (dynamicRange > 40) quality += 0.2;\r\n    if (Math.abs(noiseFloor) < -60) quality += 0.1;\r\n    \r\n    return Math.min(1, quality);\r\n  }\r\n\r\n  // פונקציות עזר נוספות לניתוח AI\r\n  calculateSpectralCentroid(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    \r\n    let weightedSum = 0;\r\n    let totalSum = 0;\r\n    \r\n    for (let i = 0; i < fft.spectrum.length; i++) {\r\n      weightedSum += i * fft.spectrum[i];\r\n      totalSum += fft.spectrum[i];\r\n    }\r\n    \r\n    return totalSum > 0 ? weightedSum / totalSum / fft.spectrum.length : 0.5;\r\n  }\r\n\r\n  calculateSpectralRolloff(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    \r\n    const threshold = 0.85;\r\n    let cumulativeEnergy = 0;\r\n    let totalEnergy = fft.spectrum.reduce((a, b) => a + b, 0);\r\n    \r\n    for (let i = 0; i < fft.spectrum.length; i++) {\r\n      cumulativeEnergy += fft.spectrum[i];\r\n      if (cumulativeEnergy / totalEnergy >= threshold) {\r\n        return i / fft.spectrum.length;\r\n      }\r\n    }\r\n    \r\n    return 0.8;\r\n  }\r\n\r\n  calculateSpectralFlux(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    \r\n    // חישוב פלוקס ספקטרלי\r\n    let flux = 0;\r\n    const prevSpectrum = new Float32Array(fft.spectrum.length);\r\n    \r\n    for (let i = 0; i < fft.spectrum.length; i++) {\r\n      flux += Math.pow(fft.spectrum[i] - prevSpectrum[i], 2);\r\n    }\r\n    \r\n    return Math.sqrt(flux);\r\n  }\r\n\r\n  calculateMFCC(data) {\r\n    // חישוב MFCC (Mel-frequency cepstral coefficients)\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    \r\n    // פילטר מל\r\n    const melFilters = this.createMelFilters(fft.spectrum.length);\r\n    const melSpectrum = new Float32Array(melFilters.length);\r\n    \r\n    for (let i = 0; i < melFilters.length; i++) {\r\n      for (let j = 0; j < fft.spectrum.length; j++) {\r\n        melSpectrum[i] += fft.spectrum[j] * melFilters[i][j];\r\n      }\r\n    }\r\n    \r\n    // לוגריתם\r\n    const logMelSpectrum = melSpectrum.map(x => Math.log(x + 1e-10));\r\n    \r\n    // DCT\r\n    const mfcc = this.dct(logMelSpectrum);\r\n    \r\n    return mfcc.slice(0, 13); // 13 MFCC coefficients\r\n  }\r\n\r\n  // פונקציות עזר נוספות לניתוח AI\r\n  extractAudioFeatures(data) {\r\n    // חילוץ מאפיינים מתקדמים מהאודיו\r\n    return {\r\n      spectralCentroid: this.calculateSpectralCentroid(data),\r\n      spectralRolloff: this.calculateSpectralRolloff(data),\r\n      spectralFlux: this.calculateSpectralFlux(data),\r\n      zeroCrossingRate: this.calculateZeroCrossingRate(data),\r\n      mfcc: this.calculateMFCC(data),\r\n      transientDensity: this.calculateTransientDensity(data),\r\n      lowFreqEnergy: this.calculateLowFreqEnergy(data),\r\n      rhythmicRegularity: this.calculateRhythmicRegularity(data),\r\n      lowFreqContent: this.calculateLowFreqContent(data),\r\n      sustain: this.calculateSustain(data),\r\n      harmonicContent: this.calculateHarmonicContent(data),\r\n      midFreqContent: this.calculateMidFreqContent(data),\r\n      harmonicRichness: this.calculateHarmonicRichness(data),\r\n      transientSharpness: this.calculateTransientSharpness(data),\r\n      harmonicComplexity: this.calculateHarmonicComplexity(data),\r\n      dynamicRange: this.calculateDynamicRange(data),\r\n      highFreqContent: this.calculateHighFreqContent(data),\r\n      vibrato: this.calculateVibrato(data),\r\n      bowing: this.calculateBowing(data),\r\n      formantStructure: this.calculateFormantStructure(data),\r\n      breathiness: this.calculateBreathiness(data),\r\n      pitchVariation: this.calculatePitchVariation(data),\r\n      vocalArticulation: this.calculateVocalArticulation(data)\r\n    };\r\n  }\r\n\r\n  calculateZeroCrossingRate(data) {\r\n    // חישוב קצב חציית האפס\r\n    let crossings = 0;\r\n    for (let i = 1; i < data.length; i++) {\r\n      if ((data[i] >= 0 && data[i - 1] < 0) || (data[i] < 0 && data[i - 1] >= 0)) {\r\n        crossings++;\r\n      }\r\n    }\r\n    return crossings / data.length;\r\n  }\r\n\r\n  calculateTransientDensity(data) {\r\n    const transients = this.detectTransients(data);\r\n    return transients.length / data.length;\r\n  }\r\n\r\n  calculateLowFreqEnergy(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const lowFreqBins = fft.spectrum.slice(0, 50);\r\n    return lowFreqBins.reduce((a, b) => a + b, 0) / lowFreqBins.length;\r\n  }\r\n\r\n  calculateRhythmicRegularity(data) {\r\n    const groove = this.analyzeGroove(data);\r\n    return groove.regularity;\r\n  }\r\n\r\n  calculateLowFreqContent(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const lowFreqBins = fft.spectrum.slice(0, 100);\r\n    return lowFreqBins.reduce((a, b) => a + b, 0) / fft.spectrum.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  calculateSustain(data) {\r\n    // חישוב זמן סוסטיין - מותאם יותר לפסנתר\r\n    const envelope = this.calculateEnvelope(data);\r\n    \r\n    // חישוב מקסימום ידני במקום Math.max(...envelope)\r\n    let maxEnvelope = 0;\r\n    for (let i = 0; i < envelope.length; i++) {\r\n      if (envelope[i] > maxEnvelope) {\r\n        maxEnvelope = envelope[i];\r\n      }\r\n    }\r\n    \r\n    const threshold = maxEnvelope * 0.05; // סף נמוך יותר\r\n    let sustainTime = 0;\r\n    let totalSustain = 0;\r\n    let longSustainPeriods = 0;\r\n    \r\n    // חיפוש תקופות סוסטיין ארוכות (טיפוסי לפסנתר)\r\n    let currentSustainLength = 0;\r\n    for (let i = 0; i < envelope.length; i++) {\r\n      if (envelope[i] > threshold) {\r\n        sustainTime++;\r\n        totalSustain += envelope[i];\r\n        currentSustainLength++;\r\n      } else {\r\n        if (currentSustainLength > 1000) { // תקופה ארוכה של סוסטיין\r\n          longSustainPeriods++;\r\n        }\r\n        currentSustainLength = 0;\r\n      }\r\n    }\r\n    \r\n    // בונוס לתקופות סוסטיין ארוכות (טיפוסי לפסנתר)\r\n    const baseSustain = sustainTime / envelope.length;\r\n    const longSustainBonus = Math.min(1, longSustainPeriods / 5);\r\n    const result = baseSustain * (1 + longSustainBonus * 0.3);\r\n    \r\n    console.log('סוסטיין (פסנתר):', result, 'זמן סוסטיין:', sustainTime, 'סך סוסטיין:', totalSustain, 'תקופות ארוכות:', longSustainPeriods);\r\n    \r\n    return result;\r\n  }\r\n\r\n  calculateHarmonicContent(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // חישוב תוכן הרמוני\r\n    let harmonicSum = 0;\r\n    let totalSum = 0;\r\n    \r\n    for (let i = 1; i < spectrum.length; i++) {\r\n      if (i % 2 === 0 || i % 3 === 0) {\r\n        harmonicSum += spectrum[i];\r\n      }\r\n      totalSum += spectrum[i];\r\n    }\r\n    \r\n    return totalSum > 0 ? harmonicSum / totalSum : 0;\r\n  }\r\n\r\n  calculateMidFreqContent(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const midFreqBins = fft.spectrum.slice(100, 500);\r\n    return midFreqBins.reduce((a, b) => a + b, 0) / fft.spectrum.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  calculateHarmonicRichness(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // חישוב עושר הרמוני\r\n    let peakCount = 0;\r\n    \r\n    // חישוב מקסימום ידני במקום Math.max(...spectrum)\r\n    let maxSpectrum = 0;\r\n    for (let i = 0; i < spectrum.length; i++) {\r\n      if (spectrum[i] > maxSpectrum) {\r\n        maxSpectrum = spectrum[i];\r\n      }\r\n    }\r\n    \r\n    const threshold = maxSpectrum * 0.3;\r\n    \r\n    for (let i = 1; i < spectrum.length - 1; i++) {\r\n      if (spectrum[i] > threshold && \r\n          spectrum[i] > spectrum[i - 1] && \r\n          spectrum[i] > spectrum[i + 1]) {\r\n        peakCount++;\r\n      }\r\n    }\r\n    \r\n    return peakCount / spectrum.length;\r\n  }\r\n\r\n  calculateTransientSharpness(data) {\r\n    const transients = this.detectTransients(data);\r\n    if (transients.length === 0) return 0;\r\n    \r\n    let totalSharpness = 0;\r\n    for (let i = 0; i < transients.length; i++) {\r\n      const idx = transients[i];\r\n      if (idx > 0 && idx < data.length - 1) {\r\n        const sharpness = Math.abs(data[idx] - data[idx - 1]) + \r\n                         Math.abs(data[idx + 1] - data[idx]);\r\n        totalSharpness += sharpness;\r\n      }\r\n    }\r\n    \r\n    return totalSharpness / transients.length;\r\n  }\r\n\r\n  calculateHarmonicComplexity(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // חישוב מורכבות הרמונית - מיקוד על הרמוניות גבוהות יותר\r\n    let complexity = 0;\r\n    let harmonicCount = 0;\r\n    \r\n    // חיפוש הרמוניות בטווח תדרים של פסנתר (100-4000Hz)\r\n    const pianoRange = spectrum.slice(50, 800);\r\n    \r\n    // חיפוש הרמוניות ספציפיות לפסנתר - תדרים מדויקים יותר\r\n    const pianoHarmonics = [100, 200, 300, 400, 500, 600, 700, 800];\r\n    let pianoSpecificHarmonics = 0;\r\n    \r\n    for (const harmonic of pianoHarmonics) {\r\n      const binIndex = Math.floor(harmonic * fft.spectrum.length / (this.audioContext.sampleRate / 2));\r\n      if (binIndex < spectrum.length && spectrum[binIndex] > 0.1) {\r\n        pianoSpecificHarmonics++;\r\n      }\r\n    }\r\n    \r\n    for (let i = 1; i < pianoRange.length; i++) {\r\n      const variation = Math.abs(pianoRange[i] - pianoRange[i - 1]);\r\n      complexity += variation;\r\n      if (variation > 0.1) {\r\n        harmonicCount++;\r\n      }\r\n    }\r\n    \r\n    const baseComplexity = (complexity / pianoRange.length) * (harmonicCount / pianoRange.length);\r\n    const pianoBonus = pianoSpecificHarmonics / pianoHarmonics.length;\r\n    const result = baseComplexity * (1 + pianoBonus * 0.5);\r\n    \r\n    console.log('מורכבות הרמונית (פסנתר):', result, 'הרמוניות:', harmonicCount, 'הרמוניות פסנתר ספציפיות:', pianoSpecificHarmonics);\r\n    \r\n    return result;\r\n  }\r\n\r\n  calculateDynamicRange(data) {\r\n    const peak = this.calculatePeak(data);\r\n    const rms = this.calculateRMS(data);\r\n    const dynamicRange = 20 * Math.log10(peak / (rms + 1e-10));\r\n    \r\n    // נרמול לטווח 0-1\r\n    const normalizedRange = Math.max(0, Math.min(1, (dynamicRange + 60) / 60));\r\n    \r\n    console.log('טווח דינמי (פסנתר):', normalizedRange, 'דציבלים:', dynamicRange);\r\n    \r\n    return normalizedRange;\r\n  }\r\n\r\n  calculateHighFreqContent(data) {\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const highFreqBins = fft.spectrum.slice(500, 1000);\r\n    return highFreqBins.reduce((a, b) => a + b, 0) / fft.spectrum.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  calculateVibrato(data) {\r\n    // חישוב ויברטו\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // חיפוש תדרים סביב 5-7Hz (ויברטו)\r\n    const vibratoRange = spectrum.slice(5, 8);\r\n    return vibratoRange.reduce((a, b) => a + b, 0) / vibratoRange.length;\r\n  }\r\n\r\n  calculateBowing(data) {\r\n    // חישוב אופי קשת\r\n    const transients = this.detectTransients(data);\r\n    if (transients.length < 2) return 0;\r\n    \r\n    let bowingPattern = 0;\r\n    for (let i = 1; i < transients.length; i++) {\r\n      const interval = transients[i] - transients[i - 1];\r\n      if (interval > 1000 && interval < 5000) { // קשת טיפוסית\r\n        bowingPattern++;\r\n      }\r\n    }\r\n    \r\n    return bowingPattern / transients.length;\r\n  }\r\n\r\n  calculateFormantStructure(data) {\r\n    // חישוב מבנה פורמנטים (לווקאל)\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // פורמנטים טיפוסיים לווקאל - תדרים נמוכים יותר\r\n    const formantRanges = [\r\n      { start: 150, end: 350 },   // F1 - תדר נמוך יותר\r\n      { start: 600, end: 1000 },  // F2 - תדר נמוך יותר\r\n      { start: 1800, end: 2800 }  // F3 - תדר נמוך יותר\r\n    ];\r\n    \r\n    let totalFormantEnergy = 0;\r\n    let formantPeaks = 0;\r\n    \r\n    for (const range of formantRanges) {\r\n      const startBin = Math.floor(range.start * fft.spectrum.length / (this.audioContext.sampleRate / 2));\r\n      const endBin = Math.floor(range.end * fft.spectrum.length / (this.audioContext.sampleRate / 2));\r\n      const formantRange = spectrum.slice(startBin, endBin);\r\n      const formantEnergy = formantRange.reduce((a, b) => a + b, 0);\r\n      totalFormantEnergy += formantEnergy;\r\n      \r\n      // חיפוש פיקים בטווח הפורמנט\r\n      let peakCount = 0;\r\n      for (let i = 1; i < formantRange.length - 1; i++) {\r\n        if (formantRange[i] > formantRange[i-1] && formantRange[i] > formantRange[i+1] && formantRange[i] > 0.1) {\r\n          peakCount++;\r\n        }\r\n      }\r\n      formantPeaks += peakCount;\r\n    }\r\n    \r\n    // חישוב יחס הפורמנטים לעומת האנרגיה הכללית + בונוס לפיקים\r\n    const totalEnergy = spectrum.reduce((a, b) => a + b, 0);\r\n    const formantRatio = totalFormantEnergy / totalEnergy;\r\n    const peakBonus = Math.min(1, formantPeaks / 10); // בונוס לפיקים מרובים\r\n    const result = formantRatio * (1 + peakBonus * 0.5);\r\n    \r\n    console.log('מבנה פורמנטים (ווקאל):', result, 'אנרגיה פורמנטים:', totalFormantEnergy, 'אנרגיה כללית:', totalEnergy, 'פיקים:', formantPeaks);\r\n    \r\n    return result;\r\n  }\r\n\r\n  calculateBreathiness(data) {\r\n    // חישוב נשימות (לווקאל)\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // תדרים גבוהים (נשימות) - טווח רחב יותר\r\n    const breathRange = spectrum.slice(600, 1200);\r\n    const totalEnergy = spectrum.reduce((a, b) => a + b, 0);\r\n    \r\n    const breathEnergy = breathRange.reduce((a, b) => a + b, 0);\r\n    const breathRatio = breathEnergy / totalEnergy;\r\n    \r\n    // חיפוש תבניות נשימה - שינויים מהירים בתדרים גבוהים\r\n    let breathPatterns = 0;\r\n    for (let i = 1; i < breathRange.length; i++) {\r\n      const variation = Math.abs(breathRange[i] - breathRange[i-1]);\r\n      if (variation > 0.05) { // סף נמוך יותר לזיהוי נשימות\r\n        breathPatterns++;\r\n      }\r\n    }\r\n    \r\n    const patternBonus = Math.min(1, breathPatterns / breathRange.length);\r\n    const result = breathRatio * (1 + patternBonus * 0.3);\r\n    \r\n    console.log('נשימות (ווקאל):', result, 'אנרגיה נשימות:', breathEnergy, 'אנרגיה כללית:', totalEnergy, 'תבניות:', breathPatterns);\r\n    \r\n    return result;\r\n  }\r\n\r\n  calculatePitchVariation(data) {\r\n    // חישוב שינויי גובה צליל\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    let pitchChanges = 0;\r\n    let totalVariation = 0;\r\n    \r\n    for (let i = 1; i < spectrum.length; i++) {\r\n      const variation = Math.abs(spectrum[i] - spectrum[i - 1]);\r\n      totalVariation += variation;\r\n      if (variation > 0.05) { // סף נמוך יותר\r\n        pitchChanges++;\r\n      }\r\n    }\r\n    \r\n    const result = pitchChanges / spectrum.length;\r\n    console.log('שינויי גובה (ווקאל):', result, 'שינויים:', pitchChanges, 'סך וריאציה:', totalVariation);\r\n    \r\n    return result;\r\n  }\r\n\r\n  calculateVocalArticulation(data) {\r\n    // חישוב ארטיקולציה ווקאלית - מאפיין ייחודי לווקאל\r\n    const fft = new FFT(2048);\r\n    fft.forward(data);\r\n    const spectrum = fft.spectrum;\r\n    \r\n    // חיפוש תבניות ארטיקולציה - שינויים מהירים בתדרים ספציפיים\r\n    const articulationRanges = [\r\n      { start: 2000, end: 4000 }, // תדרים גבוהים לארטיקולציה\r\n      { start: 8000, end: 12000 }  // תדרים גבוהים מאוד\r\n    ];\r\n    \r\n    let articulationScore = 0;\r\n    \r\n    for (const range of articulationRanges) {\r\n      const startBin = Math.floor(range.start * fft.spectrum.length / (this.audioContext.sampleRate / 2));\r\n      const endBin = Math.floor(range.end * fft.spectrum.length / (this.audioContext.sampleRate / 2));\r\n      const articulationRange = spectrum.slice(startBin, endBin);\r\n      \r\n      // חיפוש שינויים מהירים בתדרים גבוהים (ארטיקולציה)\r\n      let rapidChanges = 0;\r\n      for (let i = 1; i < articulationRange.length; i++) {\r\n        const change = Math.abs(articulationRange[i] - articulationRange[i-1]);\r\n        if (change > 0.1) {\r\n          rapidChanges++;\r\n        }\r\n      }\r\n      \r\n      articulationScore += rapidChanges / articulationRange.length;\r\n    }\r\n    \r\n    const result = articulationScore / articulationRanges.length;\r\n    console.log('ארטיקולציה ווקאלית:', result);\r\n    \r\n    return result;\r\n  }\r\n\r\n  calculateEnvelope(data) {\r\n    // חישוב מעטפת האודיו\r\n    const envelope = new Float32Array(data.length);\r\n    const windowSize = 100;\r\n    \r\n    for (let i = 0; i < data.length; i++) {\r\n      const start = Math.max(0, i - windowSize);\r\n      const end = Math.min(data.length, i + windowSize);\r\n      const window = data.slice(start, end);\r\n      \r\n      // חישוב מקסימום ידני במקום Math.max(...window.map(Math.abs))\r\n      let maxWindow = 0;\r\n      for (let j = 0; j < window.length; j++) {\r\n        const abs = Math.abs(window[j]);\r\n        if (abs > maxWindow) maxWindow = abs;\r\n      }\r\n      envelope[i] = maxWindow;\r\n    }\r\n    \r\n    return envelope;\r\n  }\r\n\r\n  createMelFilters(numBins) {\r\n    const numFilters = 26;\r\n    const filters = [];\r\n    \r\n    for (let i = 0; i < numFilters; i++) {\r\n      const filter = new Float32Array(numBins);\r\n      const centerFreq = this.melToFreq(i * 2595 / (numFilters + 1));\r\n      const leftFreq = this.melToFreq((i - 1) * 2595 / (numFilters + 1));\r\n      const rightFreq = this.melToFreq((i + 1) * 2595 / (numFilters + 1));\r\n      \r\n      for (let j = 0; j < numBins; j++) {\r\n        const freq = j * this.audioContext.sampleRate / (2 * numBins);\r\n        if (freq >= leftFreq && freq <= rightFreq) {\r\n          if (freq <= centerFreq) {\r\n            filter[j] = (freq - leftFreq) / (centerFreq - leftFreq);\r\n          } else {\r\n            filter[j] = (rightFreq - freq) / (rightFreq - centerFreq);\r\n          }\r\n        }\r\n      }\r\n      \r\n      filters.push(filter);\r\n    }\r\n    \r\n    return filters;\r\n  }\r\n\r\n  melToFreq(mel) {\r\n    return 700 * (Math.pow(10, mel / 2595) - 1);\r\n  }\r\n\r\n  dct(data) {\r\n    const N = data.length;\r\n    const dct = new Float32Array(N);\r\n    \r\n    for (let k = 0; k < N; k++) {\r\n      let sum = 0;\r\n      for (let n = 0; n < N; n++) {\r\n        sum += data[n] * Math.cos(Math.PI * k * (2 * n + 1) / (2 * N));\r\n      }\r\n      dct[k] = sum * Math.sqrt(2 / N);\r\n    }\r\n    \r\n    return dct;\r\n  }\r\n\r\n  // פונקציות המלצות מותאמות\r\n  getCompressionRecommendations(analysis) {\r\n    const { dynamicsAnalysis, instrumentDetection } = analysis;\r\n    const recommendations = [];\r\n    \r\n    if (dynamicsAnalysis.dynamicRange > 20) {\r\n      const plugin = this.findPluginByName('Waves CLA-2A', 'compression') || \r\n                    this.findAlternativePlugin('compression', instrumentDetection.primaryInstrument);\r\n      \r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'דינמיקה גבוהה - נדרש קומפרסור עדין',\r\n          settings: { Attack: '15ms', Release: '100ms', Ratio: '2:1', Threshold: '-20dB' },\r\n          description: 'קומפרסור עדין לדינמיקה גבוהה עם שליטה מדויקת'\r\n        });\r\n      }\r\n    }\r\n    \r\n    if (instrumentDetection.primaryInstrument === 'drums') {\r\n      const plugin = this.findPluginByName('Waves SSL G-Master Buss Compressor', 'compression') || \r\n                    this.findAlternativePlugin('compression', 'drums');\r\n      \r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'תופים - נדרש קומפרסור עם אופי SSL',\r\n          settings: { Attack: '30ms', Release: '100ms', Ratio: '2:1', Threshold: '-20dB' },\r\n          description: 'קומפרסור SSL מקצועי לתופים עם אופי קלאסי'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // המלצה כללית אם אין המלצות ספציפיות\r\n    if (recommendations.length === 0) {\r\n      const plugin = this.findAlternativePlugin('compression', instrumentDetection.primaryInstrument);\r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'המלצה כללית לקומפרסור',\r\n          settings: plugin.settings,\r\n          description: plugin.description\r\n        });\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  getEQRecommendations(analysis) {\r\n    const { frequencyAnalysis, instrumentDetection } = analysis;\r\n    const recommendations = [];\r\n    \r\n    if (frequencyAnalysis.lowFreq < 0.3) {\r\n      const plugin = this.findPluginByName('FabFilter Pro-Q3', 'eq') || \r\n                    this.findAlternativePlugin('eq', instrumentDetection.primaryInstrument);\r\n      \r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'תדרים נמוכים חלשים - נדרש בוסט',\r\n          settings: { 'Low Shelf': '+3dB', 'Frequency': '80Hz' },\r\n          description: 'איקיו מדויק לבוסט תדרים נמוכים'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // המלצה כללית אם אין המלצות ספציפיות\r\n    if (recommendations.length === 0) {\r\n      const plugin = this.findAlternativePlugin('eq', instrumentDetection.primaryInstrument);\r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'המלצה כללית לאיקיו',\r\n          settings: plugin.settings,\r\n          description: plugin.description\r\n        });\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  getReverbRecommendations(analysis) {\r\n    const { genreAnalysis, instrumentDetection } = analysis;\r\n    const recommendations = [];\r\n    \r\n    if (genreAnalysis.primaryGenre === 'pop') {\r\n      const plugin = this.findPluginByName('Valhalla Room', 'reverb') || \r\n                    this.findAlternativePlugin('reverb', instrumentDetection.primaryInstrument);\r\n      \r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'פופ - ריברב מודרני וחלק',\r\n          settings: { Decay: '2.0s', Mix: '15%' },\r\n          description: 'ריברב מודרני למוזיקת פופ'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // המלצה כללית אם אין המלצות ספציפיות\r\n    if (recommendations.length === 0) {\r\n      const plugin = this.findAlternativePlugin('reverb', instrumentDetection.primaryInstrument);\r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'המלצה כללית לריברב',\r\n          settings: plugin.settings,\r\n          description: plugin.description\r\n        });\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  getDelayRecommendations(analysis) {\r\n    const { rhythmicAnalysis, genreAnalysis, instrumentDetection } = analysis;\r\n    const recommendations = [];\r\n    \r\n    if (rhythmicAnalysis.tempo > 120) {\r\n      const plugin = this.findPluginByName('EchoBoy', 'delay') || \r\n                    this.findAlternativePlugin('delay', instrumentDetection.primaryInstrument);\r\n      \r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'טמפו גבוה - דיליי מהיר',\r\n          settings: { 'Feedback': '20%', 'Mix': '10%' },\r\n          description: 'דיליי מהיר לטמפו גבוה'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // המלצה כללית אם אין המלצות ספציפיות\r\n    if (recommendations.length === 0) {\r\n      const plugin = this.findAlternativePlugin('delay', instrumentDetection.primaryInstrument);\r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'המלצה כללית לדיליי',\r\n          settings: plugin.settings,\r\n          description: plugin.description\r\n        });\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  getSaturationRecommendations(analysis) {\r\n    const { qualityAnalysis, instrumentDetection } = analysis;\r\n    const recommendations = [];\r\n    \r\n    if (qualityAnalysis.noiseFloor > -40) {\r\n      const plugin = this.findPluginByName('FabFilter Saturn 2', 'saturation') || \r\n                    this.findAlternativePlugin('saturation', instrumentDetection.primaryInstrument);\r\n      \r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'רעש גבוה - סטורציה עדינה',\r\n          settings: { Drive: '2', Mix: '30%' },\r\n          description: 'סטורציה עדינה לטיפול ברעש'\r\n        });\r\n      }\r\n    }\r\n    \r\n    // המלצה כללית אם אין המלצות ספציפיות\r\n    if (recommendations.length === 0) {\r\n      const plugin = this.findAlternativePlugin('saturation', instrumentDetection.primaryInstrument);\r\n      if (plugin) {\r\n        recommendations.push({\r\n          ...plugin,\r\n          reason: 'המלצה כללית לסטורציה',\r\n          settings: plugin.settings,\r\n          description: plugin.description\r\n        });\r\n      }\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n\r\n  getAdditionalRecommendations(analysis) {\r\n    const recommendations = [];\r\n    \r\n    if (analysis.qualityAnalysis.clipping) {\r\n      recommendations.push({\r\n        type: 'warning',\r\n        message: 'זיהוי קליפינג - יש להוריד את הגיין',\r\n        action: 'Reduce gain by 3-6dB'\r\n      });\r\n    }\r\n    \r\n    if (analysis.frequencyAnalysis.frequencyBalance < 0.3) {\r\n      recommendations.push({\r\n        type: 'info',\r\n        message: 'איזון תדרים לא אופטימלי',\r\n        action: 'Consider multiband compression'\r\n      });\r\n    }\r\n    \r\n    return recommendations;\r\n  }\r\n}\r\n\r\n// ----- FFT Class for Frequency Analysis -----\r\nclass FFT {\r\n  constructor(size) {\r\n    this.size = size;\r\n    this.real = new Float32Array(size);\r\n    this.imag = new Float32Array(size);\r\n    this.spectrum = new Float32Array(size / 2);\r\n  }\r\n\r\n  forward(buffer) {\r\n    // FFT implementation\r\n    for (let i = 0; i < this.size; i++) {\r\n      this.real[i] = buffer[i] || 0;\r\n      this.imag[i] = 0;\r\n    }\r\n    \r\n    this.fft(this.real, this.imag);\r\n    \r\n    for (let i = 0; i < this.size / 2; i++) {\r\n      this.spectrum[i] = Math.sqrt(this.real[i] * this.real[i] + this.imag[i] * this.imag[i]);\r\n    }\r\n  }\r\n\r\n  fft(real, imag) {\r\n    // Cooley-Tukey FFT algorithm\r\n    const n = real.length;\r\n    \r\n    if (n <= 1) return;\r\n    \r\n    const halfN = n >> 1;\r\n    const realEven = new Float32Array(halfN);\r\n    const imagEven = new Float32Array(halfN);\r\n    const realOdd = new Float32Array(halfN);\r\n    const imagOdd = new Float32Array(halfN);\r\n    \r\n    for (let i = 0; i < halfN; i++) {\r\n      realEven[i] = real[i * 2];\r\n      imagEven[i] = imag[i * 2];\r\n      realOdd[i] = real[i * 2 + 1];\r\n      imagOdd[i] = imag[i * 2 + 1];\r\n    }\r\n    \r\n    this.fft(realEven, imagEven);\r\n    this.fft(realOdd, imagOdd);\r\n    \r\n    for (let k = 0; k < halfN; k++) {\r\n      const angle = -2 * Math.PI * k / n;\r\n      const cos = Math.cos(angle);\r\n      const sin = Math.sin(angle);\r\n      \r\n      const realTemp = realOdd[k] * cos - imagOdd[k] * sin;\r\n      const imagTemp = realOdd[k] * sin + imagOdd[k] * cos;\r\n      \r\n      real[k] = realEven[k] + realTemp;\r\n      imag[k] = imagEven[k] + imagTemp;\r\n      real[k + halfN] = realEven[k] - realTemp;\r\n      imag[k + halfN] = imagEven[k] - imagTemp;\r\n    }\r\n  }\r\n}\r\n\r\n// ----- זיהוי סוג סטם -----\r\nconst detectStemType = (fileName) => {\r\n  const lowerFileName = fileName.toLowerCase();\r\n  \r\n  // זיהוי לפי שם הקובץ\r\n  if (lowerFileName.includes('drum') || lowerFileName.includes('kick') || lowerFileName.includes('snare') || \r\n      lowerFileName.includes('hihat') || lowerFileName.includes('tom') || lowerFileName.includes('cymbal')) {\r\n    return 'drums';\r\n  }\r\n  if (lowerFileName.includes('bass') || lowerFileName.includes('sub')) {\r\n    return 'bass';\r\n  }\r\n  if (lowerFileName.includes('guitar') || lowerFileName.includes('gtr')) {\r\n    return lowerFileName.includes('acoustic') ? 'acoustic_guitar' : 'electric_guitar';\r\n  }\r\n  if (lowerFileName.includes('piano') || lowerFileName.includes('keys')) {\r\n    return 'piano';\r\n  }\r\n  if (lowerFileName.includes('violin') || lowerFileName.includes('string')) {\r\n    return 'violin';\r\n  }\r\n  if (lowerFileName.includes('vocal') || lowerFileName.includes('voice')) {\r\n    return 'vocal';\r\n  }\r\n  \r\n  return 'unknown';\r\n};\r\n\r\n// ----- מערך קטגוריות -----\r\nconst pluginCategories = [\r\n  {\r\n    key: 'compression',\r\n    label: 'קומפרסיה',\r\n    labelSuffix: stemType => ` ל${stemType}`,\r\n    generalLabel: 'קומפרסיה ווקאלית',\r\n    icon: <Volume2 className=\"w-5 h-5 ml-2\" />,\r\n  },\r\n  {\r\n    key: 'eq',\r\n    label: 'איקולייזר',\r\n    labelSuffix: stemType => ` ל${stemType}`,\r\n    generalLabel: 'Equalization',\r\n    icon: <Radio className=\"w-5 h-5 ml-2\" />,\r\n  },\r\n  {\r\n    key: 'reverb',\r\n    label: 'ריברב',\r\n    labelSuffix: stemType => ` ל${stemType}`,\r\n    generalLabel: 'ריברב ווקאלי',\r\n    icon: <Waves className=\"w-5 h-5 ml-2\" />,\r\n  },\r\n  {\r\n    key: 'delay',\r\n    label: 'דיליי',\r\n    labelSuffix: stemType => ` ל${stemType}`,\r\n    generalLabel: 'דיליי ווקאלי',\r\n    icon: <Clock className=\"w-5 h-5 ml-2\" />,\r\n  },\r\n  {\r\n    key: 'saturation',\r\n    label: 'סטורציה',\r\n    labelSuffix: stemType => ` ל${stemType}`,\r\n    generalLabel: 'סטורציה ווקאלית',\r\n    icon: <Zap className=\"w-5 h-5 ml-2\" />,\r\n  },\r\n];\r\n\r\n// ----- פונקציות דמה עבור אייקון/באג' -----\r\nconst getCategoryBadge = (cat) => {\r\n  const colors = {\r\n    compression: 'bg-green-500',\r\n    eq: 'bg-blue-500',\r\n    reverb: 'bg-purple-500',\r\n    delay: 'bg-yellow-500',\r\n    saturation: 'bg-red-500',\r\n  };\r\n  return (\r\n    <span className={`px-2 py-1 rounded text-xs text-white ${colors[cat] || 'bg-gray-500'}`}>\r\n      {cat}\r\n    </span>\r\n  );\r\n};\r\n\r\nconst getPluginIcon = (cat) => {\r\n  switch (cat) {\r\n    case 'compression': return <Volume2 className=\"w-6 h-6\" />;\r\n    case 'eq': return <Radio className=\"w-6 h-6\" />;\r\n    case 'reverb': return <Waves className=\"w-6 h-6\" />;\r\n    case 'delay': return <Clock className=\"w-6 h-6\" />;\r\n    case 'saturation': return <Zap className=\"w-6 h-6\" />;\r\n    default: return <Star className=\"w-6 h-6\" />;\r\n  }\r\n};\r\n\r\nconst getStemIcon = (stemType) => {\r\n  switch (stemType) {\r\n    case 'drums': return <Drumstick className=\"w-6 h-6\" />;\r\n    case 'bass': return <Speaker className=\"w-6 h-6\" />;\r\n    case 'electric_guitar': return <Music className=\"w-6 h-6\" />;\r\n    case 'acoustic_guitar': return <Music className=\"w-6 h-6\" />;\r\n    case 'piano': return <Music className=\"w-6 h-6\" />;\r\n    case 'violin': return <Music className=\"w-6 h-6\" />;\r\n    case 'vocal': return <Music className=\"w-6 h-6\" />;\r\n    default: return <Music className=\"w-6 h-6\" />;\r\n  }\r\n};\r\n\r\nconst getStemDisplayName = (stemType) => {\r\n  const names = {\r\n    drums: 'תופים',\r\n    bass: 'בס',\r\n    electric_guitar: 'גיטרה חשמלית',\r\n    acoustic_guitar: 'גיטרה אקוסטית',\r\n    piano: 'פסנתר',\r\n    violin: 'כינורות',\r\n    vocal: 'ווקאל',\r\n    unknown: 'לא ידוע'\r\n  };\r\n  return names[stemType] || 'לא ידוע';\r\n};\r\n\r\n// ----- נתוני פלאגינים לכל סוג סטם -----\r\nconst stemPlugins = {\r\n  drums: {\r\n    compression: [\r\n      {\r\n        name: 'Waves SSL G-Master Buss Compressor',\r\n        description: 'קומפרסור מקצועי לתופים עם אופי SSL.',\r\n        price: '199$',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '30ms', Release: '100ms', Ratio: '2:1', Threshold: '-20dB' },\r\n        features: ['SSL sound', 'Punch'],\r\n        url: 'https://www.waves.com/',\r\n      },\r\n      {\r\n        name: 'FabFilter Pro-C2',\r\n        description: 'קומפרסור מדויק עם שליטה מלאה.',\r\n        price: '299$',\r\n        category: 'compression',\r\n        color: 'bg-green-500',\r\n        settings: { Attack: '10ms', Release: '50ms', Ratio: '3:1', Threshold: '-15dB' },\r\n        features: ['Sidechain', 'Lookahead'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'Waves SSL E-Channel',\r\n        description: 'איקיו בסגנון SSL לתופים.',\r\n        price: '199$',\r\n        category: 'eq',\r\n        color: 'bg-yellow-500',\r\n        settings: { 'High Pass': '60Hz', 'High': '+4dB', 'Low': '-2dB' },\r\n        features: ['SSL sound', 'Punch'],\r\n        \r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla Room',\r\n        description: 'ריברב טבעי לתופים.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '1.8s', Mix: '12%' },\r\n        features: ['Natural', 'Fast'],\r\n        url: 'https://valhalladsp.com/',\r\n      }\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'EchoBoy',\r\n        description: 'דיליי אנלוגי לתופים.',\r\n        price: '199$',\r\n        category: 'delay',\r\n        color: 'bg-pink-500',\r\n        settings: { 'Feedback': '15%', 'Mix': '8%' },\r\n        features: ['Analog', 'Sync'],\r\n        url: 'https://www.soundtoys.com/',\r\n      }\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'Decapitator',\r\n        description: 'סטורציה לתופים עם אופי אנלוגי.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '3', Mix: '40%' },\r\n        features: ['Analog', 'Punch'],\r\n        url: 'https://www.soundtoys.com/',\r\n      }\r\n    ]\r\n  },\r\n  bass: {\r\n    compression: [\r\n      {\r\n        name: 'Waves CLA-76',\r\n        description: 'קומפרסור קלאסי לבס.',\r\n        price: '199$',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '20ms', Release: '200ms', Ratio: '4:1', Threshold: '-18dB' },\r\n        features: ['Analog', 'Warmth'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'FabFilter Pro-Q3',\r\n        description: 'איקיו מדויק לבס.',\r\n        price: '349$',\r\n        category: 'eq',\r\n        color: 'bg-yellow-500',\r\n        settings: { 'Low Cut': '40Hz', 'High Shelf': '+2dB', 'Notch': '-3dB' },\r\n        features: ['Dynamic EQ', 'Linear phase'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla VintageVerb',\r\n        description: 'ריברב קלאסי לבס.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '2.0s', Mix: '10%' },\r\n        features: ['Vintage', 'Warm'],\r\n        url: 'https://valhalladsp.com/',\r\n      }\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'H-Delay',\r\n        description: 'דיליי מדויק לבס.',\r\n        price: '129$',\r\n        category: 'delay',\r\n        color: 'bg-yellow-500',\r\n        settings: { Feedback: '18%', Mix: '6%' },\r\n        features: ['Analog', 'LoFi'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'FabFilter Saturn 2',\r\n        description: 'סטורציה לבס עם אופי חם.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '4', Mix: '60%' },\r\n        features: ['Multi-band', 'Warm'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ]\r\n  },\r\n  electric_guitar: {\r\n    compression: [\r\n      {\r\n        name: 'Waves CLA-2A',\r\n        description: 'קומפרסור אנלוגי לגיטרה חשמלית.',\r\n        price: '199$',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '15ms', Release: '100ms', Ratio: '3:1', Threshold: '-20dB' },\r\n        features: ['Analog', 'Warmth'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'Waves SSL E-Channel',\r\n        description: 'איקיו בסגנון SSL לגיטרה.',\r\n        price: '199$',\r\n        category: 'eq',\r\n        color: 'bg-yellow-500',\r\n        settings: { 'High Pass': '80Hz', 'High': '+3dB', 'Low': '-1dB' },\r\n        features: ['SSL sound', 'Flexible'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla VintageVerb',\r\n        description: 'ריברב קלאסי לגיטרה.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '2.5s', Mix: '20%' },\r\n        features: ['Vintage', 'Modulation'],\r\n        url: 'https://valhalladsp.com/',\r\n      }\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'EchoBoy',\r\n        description: 'דיליי אנלוגי לגיטרה.',\r\n        price: '199$',\r\n        category: 'delay',\r\n        color: 'bg-pink-500',\r\n        settings: { 'Feedback': '25%', 'Mix': '15%' },\r\n        features: ['Analog', 'Sync'],\r\n        url: 'https://www.soundtoys.com/',\r\n      }\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'Decapitator',\r\n        description: 'סטורציה לגיטרה עם אופי אנלוגי.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '6', Mix: '50%' },\r\n        features: ['Analog', 'Punish mode'],\r\n        url: 'https://www.soundtoys.com/',\r\n      }\r\n    ]\r\n  },\r\n  acoustic_guitar: {\r\n    compression: [\r\n      {\r\n        name: 'Waves CLA-2A',\r\n        description: 'קומפרסור עדין לגיטרה אקוסטית.',\r\n        price: '199$',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '25ms', Release: '150ms', Ratio: '2:1', Threshold: '-22dB' },\r\n        features: ['Analog', 'Natural'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'FabFilter Pro-Q3',\r\n        description: 'איקיו מדויק לגיטרה אקוסטית.',\r\n        price: '349$',\r\n        category: 'eq',\r\n        color: 'bg-yellow-500',\r\n        settings: { 'Low Cut': '100Hz', 'High Shelf': '+1dB', 'Notch': '-2dB' },\r\n        features: ['Dynamic EQ', 'Natural'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla Room',\r\n        description: 'ריברב טבעי לגיטרה אקוסטית.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '2.0s', Mix: '15%' },\r\n        features: ['Natural', 'Warm'],\r\n        url: 'https://valhalladsp.com/',\r\n      }\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'H-Delay',\r\n        description: 'דיליי עדין לגיטרה אקוסטית.',\r\n        price: '129$',\r\n        category: 'delay',\r\n        color: 'bg-yellow-500',\r\n        settings: { Feedback: '20%', Mix: '8%' },\r\n        features: ['Analog', 'Natural'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'FabFilter Saturn 2',\r\n        description: 'סטורציה עדינה לגיטרה אקוסטית.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '2', Mix: '30%' },\r\n        features: ['Multi-band', 'Natural'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ]\r\n  },\r\n  piano: {\r\n    compression: [\r\n      {\r\n        name: 'Waves CLA-2A',\r\n        description: 'קומפרסור עדין לפסנתר.',\r\n        price: '199$',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '30ms', Release: '200ms', Ratio: '2:1', Threshold: '-25dB' },\r\n        features: ['Analog', 'Natural'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'FabFilter Pro-Q3',\r\n        description: 'איקיו מדויק לפסנתר.',\r\n        price: '349$',\r\n        category: 'eq',\r\n        color: 'bg-yellow-500',\r\n        settings: { 'Low Cut': '80Hz', 'High Shelf': '+1dB', 'Notch': '-1dB' },\r\n        features: ['Dynamic EQ', 'Natural'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla Room',\r\n        description: 'ריברב טבעי לפסנתר.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '2.5s', Mix: '20%' },\r\n        features: ['Natural', 'Warm'],\r\n        url: 'https://valhalladsp.com/',\r\n      }\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'H-Delay',\r\n        description: 'דיליי עדין לפסנתר.',\r\n        price: '129$',\r\n        category: 'delay',\r\n        color: 'bg-yellow-500',\r\n        settings: { Feedback: '15%', Mix: '6%' },\r\n        features: ['Analog', 'Natural'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'FabFilter Saturn 2',\r\n        description: 'סטורציה עדינה לפסנתר.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '1', Mix: '20%' },\r\n        features: ['Multi-band', 'Natural'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ]\r\n  },\r\n  violin: {\r\n    compression: [\r\n      {\r\n        name: 'Waves CLA-2A',\r\n        description: 'קומפרסור עדין לכינורות.',\r\n        price: '199$',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '40ms', Release: '250ms', Ratio: '1.5:1', Threshold: '-30dB' },\r\n        features: ['Analog', 'Natural'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'FabFilter Pro-Q3',\r\n        description: 'איקיו מדויק לכינורות.',\r\n        price: '349$',\r\n        category: 'eq',\r\n        color: 'bg-yellow-500',\r\n        settings: { 'Low Cut': '200Hz', 'High Shelf': '+1dB', 'Notch': '-1dB' },\r\n        features: ['Dynamic EQ', 'Natural'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla Room',\r\n        description: 'ריברב טבעי לכינורות.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '3.0s', Mix: '25%' },\r\n        features: ['Natural', 'Warm'],\r\n        url: 'https://valhalladsp.com/',\r\n      }\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'H-Delay',\r\n        description: 'דיליי עדין לכינורות.',\r\n        price: '129$',\r\n        category: 'delay',\r\n        color: 'bg-yellow-500',\r\n        settings: { Feedback: '12%', Mix: '4%' },\r\n        features: ['Analog', 'Natural'],\r\n        url: 'https://www.waves.com/',\r\n      }\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'FabFilter Saturn 2',\r\n        description: 'סטורציה עדינה לכינורות.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '0.5', Mix: '15%' },\r\n        features: ['Multi-band', 'Natural'],\r\n        url: 'https://www.fabfilter.com/',\r\n      }\r\n    ]\r\n  },\r\n  vocal: {\r\n    compression: [\r\n      {\r\n        name: 'Waves CLA-2A',\r\n        description: 'קומפרסור קלאסי עם אופי אנלוגי.',\r\n        price: 'חינמי',\r\n        category: 'compression',\r\n        color: 'bg-blue-500',\r\n        settings: { Attack: '10ms', Release: '50ms', Ratio: '4:1', Threshold: '-15dB' },\r\n        features: ['Analog', 'Warmth'],\r\n        url: 'https://www.waves.com/',\r\n      },\r\n    ],\r\n    eq: [\r\n      {\r\n        name: 'SSL Native Channel Strip',\r\n        description: 'איקיו בסגנון קונסולה.',\r\n        price: '199$',\r\n        category: 'eq',\r\n        color: 'bg-green-500',\r\n        settings: { 'High Pass': '100Hz', 'High': '+3dB', 'Low': '-2dB' },\r\n        features: ['SSL sound', 'Flexible'],\r\n        url: 'https://www.solidstatelogic.com/',\r\n      },\r\n    ],\r\n    reverb: [\r\n      {\r\n        name: 'Valhalla Room',\r\n        description: 'ריברב מודרני וחלק.',\r\n        price: 'חינמי',\r\n        category: 'reverb',\r\n        color: 'bg-purple-500',\r\n        settings: { Decay: '2.2s', Mix: '18%' },\r\n        features: ['Natural', 'Fast'],\r\n        url: 'https://valhalladsp.com/',\r\n      },\r\n    ],\r\n    delay: [\r\n      {\r\n        name: 'H-Delay',\r\n        description: 'דיליי מדויק לכל סגנון.',\r\n        price: '129$',\r\n        category: 'delay',\r\n        color: 'bg-yellow-500',\r\n        settings: { Feedback: '22%', Mix: '10%' },\r\n        features: ['Analog', 'LoFi'],\r\n        url: 'https://www.waves.com/',\r\n      },\r\n    ],\r\n    saturation: [\r\n      {\r\n        name: 'FabFilter Saturn 2',\r\n        description: 'סטורציה צבעונית לכל מטרה.',\r\n        price: '199$',\r\n        category: 'saturation',\r\n        color: 'bg-red-500',\r\n        settings: { Drive: '4', Mix: '50%' },\r\n        features: ['Multi-band', 'Warm'],\r\n        url: 'https://www.fabfilter.com/',\r\n      },\r\n    ],\r\n  }\r\n};\r\n\r\n// ----- קומפוננטת כרטיס פלאגין -----\r\nconst PluginCard = ({ plugin, category }) => (\r\n  <Card className=\"bg-studio-gray border-studio-gray hover:border-blue-500 transition-colors\">\r\n    <CardContent className=\"p-6\">\r\n      <div className=\"flex items-start space-x-4 space-x-reverse\">\r\n        <div className={`w-20 h-20 ${plugin.color} rounded-lg flex items-center justify-center shadow-lg`}>\r\n          {getPluginIcon(category)}\r\n        </div>\r\n        <div className=\"flex-1\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <h3 className=\"text-lg font-semibold text-white\">{plugin.name}</h3>\r\n            <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n              {getCategoryBadge(plugin.category)}\r\n              <span className={`font-semibold ${\r\n                plugin.price === 'חינמי' ? 'text-green-400' : \r\n                plugin.price.includes('$299') || plugin.price.includes('€199') || plugin.price.includes('$349') ? 'text-purple-400' : \r\n                'text-blue-400'\r\n              }`}>\r\n                {plugin.price}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <p className=\"text-gray-400 text-sm mb-3\">{plugin.description}</p>\r\n          <div className=\"bg-studio-dark p-3 rounded-lg mb-4\">\r\n            <h4 className=\"text-white font-medium mb-2 text-sm\">הגדרות מומלצות:</h4>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              {Object.entries(plugin.settings).map(([key, value]) => (\r\n                <div key={key} className=\"flex justify-between items-center\">\r\n                  <span className=\"text-xs text-gray-500 capitalize\">{key}:</span>\r\n                  <span className=\"text-xs text-white font-medium\">{value}</span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex flex-wrap gap-2 mb-3\">\r\n            {plugin.features.map((feature, index) => (\r\n              <span key={index} className=\"px-2 py-1 bg-blue-600 text-white text-xs rounded\">\r\n                {feature}\r\n              </span>\r\n            ))}\r\n          </div>\r\n          <Button className=\"w-full bg-blue-600 hover:bg-blue-700 text-white\" asChild>\r\n            <a href={plugin.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <ExternalLink className=\"w-4 h-4 ml-2\" />\r\n              למידע נוסף\r\n            </a>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </CardContent>\r\n  </Card>\r\n);\r\n\r\n// ----- קומפוננטת ניתוח AI -----\r\nconst AIAnalysisDisplay = ({ analysis, isAnalyzing }) => {\r\n  if (isAnalyzing) {\r\n    return (\r\n      <div className=\"mb-8 p-6 bg-studio-gray rounded-lg\">\r\n        <div className=\"flex items-center justify-center space-x-3 space-x-reverse\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-white\">מנתח AI את הקובץ עם YAMNet...</h3>\r\n            <p className=\"text-gray-400 text-sm\">זיהוי כלי נגינה, ניתוח תדרים, וניתוח דינמיקה עם מודל Google</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analysis) return null;\r\n\r\n  // Advanced Tempo Analysis Section\r\n  const renderAdvancedTempoAnalysis = () => {\r\n    if (!analysis.advancedTempo) return null;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <div className=\"flex items-center mb-4\">\r\n          <Clock className=\"w-6 h-6 text-green-400 ml-2\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">ניתוח טמפו מתקדם</h3>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\r\n          {/* Primary Tempo */}\r\n          <Card className=\"bg-studio-gray border-studio-gray\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <Target className=\"w-6 h-6 text-green-400 ml-2\" />\r\n                <h4 className=\"text-lg font-semibold text-white\">טמפו ראשי</h4>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-3xl font-bold text-green-400 mb-2\">\r\n                  {Math.round(analysis.advancedTempo.primaryTempo)} BPM\r\n                </div>\r\n                <div className=\"text-sm text-gray-400\">\r\n                  ביטחון: {(analysis.advancedTempo.confidence * 100).toFixed(1)}%\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Beat Map */}\r\n          <Card className=\"bg-studio-gray border-studio-gray\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <Music className=\"w-6 h-6 text-blue-400 ml-2\" />\r\n                <h4 className=\"text-lg font-semibold text-white\">מפת ביטים</h4>\r\n              </div>\r\n              <div className=\"text-center\">\r\n                <div className=\"text-2xl font-bold text-blue-400 mb-2\">\r\n                  {analysis.advancedTempo.beatMap.length}\r\n                </div>\r\n                <div className=\"text-sm text-gray-400\">\r\n                  ביטים שזוהו\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Groove Analysis */}\r\n          <Card className=\"bg-studio-gray border-studio-gray\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <TrendingUp className=\"w-6 h-6 text-purple-400 ml-2\" />\r\n                <h4 className=\"text-lg font-semibold text-white\">ניתוח Groove</h4>\r\n              </div>\r\n              <div className=\"space-y-3\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-gray-400 text-sm\">סדירות</span>\r\n                  <span className=\"text-white text-sm\">\r\n                    {(analysis.advancedTempo.groove.regularity * 100).toFixed(1)}%\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex justify-between items-center\">\r\n                  <span className=\"text-gray-400 text-sm\">Swing</span>\r\n                  <span className=\"text-white text-sm\">\r\n                    {(analysis.advancedTempo.groove.swing * 100).toFixed(1)}%\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* Analysis Methods */}\r\n        <Card className=\"bg-studio-gray border-studio-gray mt-6\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <BarChart3 className=\"w-6 h-6 text-yellow-400 ml-2\" />\r\n              <h4 className=\"text-lg font-semibold text-white\">שיטות ניתוח</h4>\r\n            </div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              {analysis.advancedTempo.analysis && Object.entries(analysis.advancedTempo.analysis).map(([method, result]) => (\r\n                <div key={method} className=\"flex justify-between items-center p-3 bg-gray-800 rounded-lg\">\r\n                  <span className=\"text-gray-400 text-sm capitalize\">\r\n                    {method.replace(/([A-Z])/g, ' $1').trim()}\r\n                  </span>\r\n                  <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                    <div className=\"w-16 bg-gray-700 rounded-full h-2\">\r\n                      <div \r\n                        className=\"bg-yellow-500 h-2 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${(result.confidence || 0) * 100}%` }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"text-xs text-white\">\r\n                      {result.confidence ? (result.confidence * 100).toFixed(0) : 'N/A'}%\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // YAMNet Analysis Section\r\n  const renderYAMNetAnalysis = () => {\r\n    if (!analysis.yamnet) return null;\r\n\r\n    return (\r\n      <div className=\"mb-8\">\r\n        <div className=\"flex items-center mb-4\">\r\n          <Cpu className=\"w-6 h-6 text-orange-400 ml-2\" />\r\n          <h3 className=\"text-lg font-semibold text-white\">ניתוח YAMNet מתקדם</h3>\r\n        </div>\r\n        \r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          {/* YAMNet Predictions */}\r\n          <Card className=\"bg-studio-gray border-studio-gray\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <Activity className=\"w-6 h-6 text-orange-400 ml-2\" />\r\n                <h4 className=\"text-lg font-semibold text-white\">זיהוי צלילים</h4>\r\n              </div>\r\n              <div className=\"space-y-3\">\r\n                {analysis.yamnet.yamnetPredictions && analysis.yamnet.yamnetPredictions.slice(0, 5).map((pred, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <span className=\"text-gray-400 text-sm\">{pred.className}</span>\r\n                    <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                      <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                        <div \r\n                          className=\"bg-orange-500 h-2 rounded-full transition-all duration-300\"\r\n                          style={{ width: `${pred.score * 100}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"text-xs text-white\">{pred.confidence}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Enhanced Instruments */}\r\n          <Card className=\"bg-studio-gray border-studio-gray\">\r\n            <CardContent className=\"p-6\">\r\n              <div className=\"flex items-center mb-4\">\r\n                <Music className=\"w-6 h-6 text-indigo-400 ml-2\" />\r\n                <h4 className=\"text-lg font-semibold text-white\">כלי נגינה משופרים</h4>\r\n              </div>\r\n              <div className=\"space-y-3\">\r\n                {analysis.yamnet.instrumentAnalysis && Object.entries(analysis.yamnet.instrumentAnalysis).map(([category, predictions]) => {\r\n                  if (predictions.length > 0) {\r\n                    const avgConfidence = (predictions.reduce((sum, p) => sum + p.score, 0) / predictions.length * 100).toFixed(1);\r\n                    return (\r\n                      <div key={category} className=\"flex justify-between items-center\">\r\n                        <span className=\"text-gray-400 text-sm capitalize\">{category}</span>\r\n                        <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                          <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                            <div \r\n                              className=\"bg-indigo-500 h-2 rounded-full transition-all duration-300\"\r\n                              style={{ width: `${avgConfidence}%` }}\r\n                            ></div>\r\n                          </div>\r\n                          <span className=\"text-xs text-white\">{avgConfidence}%</span>\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }\r\n                  return null;\r\n                })}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      {/* YAMNet Analysis */}\r\n      {renderYAMNetAnalysis()}\r\n      \r\n      {/* Advanced Tempo Analysis */}\r\n      {renderAdvancedTempoAnalysis()}\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* ניתוח כלי נגינה */}\r\n        <Card className=\"bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <Brain className=\"w-6 h-6 text-blue-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">זיהוי כלי נגינה</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">כלי ראשי:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {getStemDisplayName(analysis.instrumentDetection.primaryInstrument)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">רמת ביטחון:</span>\r\n                <span className=\"text-green-400 font-medium\">\r\n                  {Math.round(analysis.instrumentDetection.confidence * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <h4 className=\"text-sm font-medium text-white mb-2\">ניתוח מפורט:</h4>\r\n                <div className=\"space-y-2\">\r\n                  {Object.entries(analysis.instrumentDetection.allScores).map(([instrument, score]) => (\r\n                    <div key={instrument} className=\"flex justify-between items-center\">\r\n                      <span className=\"text-xs text-gray-400\">{getStemDisplayName(instrument)}:</span>\r\n                      <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                        <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                          <div \r\n                            className=\"bg-blue-500 h-2 rounded-full transition-all duration-300\"\r\n                            style={{ width: `${score * 100}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <span className=\"text-xs text-white\">{Math.round(score * 100)}%</span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* ניתוח תדרים */}\r\n        <Card className=\"bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <Radio className=\"w-6 h-6 text-green-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">ניתוח תדרים</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">תדר דומיננטי:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.frequencyAnalysis.dominantFreq)}Hz\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">איזון תדרים:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.frequencyAnalysis.frequencyBalance * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <h4 className=\"text-sm font-medium text-white mb-2\">ספקטרום:</h4>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs text-gray-400\">נמוכים:</span>\r\n                    <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                      <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                        <div \r\n                          className=\"bg-red-500 h-2 rounded-full\"\r\n                          style={{ width: `${analysis.frequencyAnalysis.lowFreq * 100}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"text-xs text-white\">{Math.round(analysis.frequencyAnalysis.lowFreq * 100)}%</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs text-gray-400\">בינוניים:</span>\r\n                    <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                      <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                        <div \r\n                          className=\"bg-yellow-500 h-2 rounded-full\"\r\n                          style={{ width: `${analysis.frequencyAnalysis.midFreq * 100}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"text-xs text-white\">{Math.round(analysis.frequencyAnalysis.midFreq * 100)}%</span>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs text-gray-400\">גבוהים:</span>\r\n                    <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                      <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                        <div \r\n                          className=\"bg-blue-500 h-2 rounded-full\"\r\n                          style={{ width: `${analysis.frequencyAnalysis.highFreq * 100}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"text-xs text-white\">{Math.round(analysis.frequencyAnalysis.highFreq * 100)}%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* ניתוח דינמיקה */}\r\n        <Card className=\"bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <BarChart3 className=\"w-6 h-6 text-purple-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">ניתוח דינמיקה</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">טווח דינמי:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.dynamicsAnalysis.dynamicRange)}dB\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">יחס קומפרסיה:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.dynamicsAnalysis.compression.toFixed(1)}:1\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">טרנזיינטים:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.dynamicsAnalysis.transients.length}\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <h4 className=\"text-sm font-medium text-white mb-2\">רמות:</h4>\r\n                <div className=\"space-y-2\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs text-gray-400\">RMS:</span>\r\n                    <span className=\"text-xs text-white\">{analysis.dynamicsAnalysis.rms.toFixed(3)}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-xs text-gray-400\">Peak:</span>\r\n                    <span className=\"text-xs text-white\">{analysis.dynamicsAnalysis.peak.toFixed(3)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* ניתוח ריתמי */}\r\n        <Card className=\"bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <TrendingUp className=\"w-6 h-6 text-orange-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">ניתוח ריתמי</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">טמפו:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.enhancedRhythm?.advancedTempo \r\n                    ? Math.round(analysis.enhancedRhythm.advancedTempo) \r\n                    : Math.round(analysis.rhythmicAnalysis.tempo)} BPM\r\n                  {analysis.enhancedRhythm?.advancedTempo && (\r\n                    <span className=\"text-green-400 text-xs mr-2\">(מתקדם)</span>\r\n                  )}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">ביטחון:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.enhancedRhythm?.tempoConfidence \r\n                    ? `${(analysis.enhancedRhythm.tempoConfidence * 100).toFixed(1)}%`\r\n                    : 'N/A'}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">סדירות:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.rhythmicAnalysis.groove.regularity * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">סווינג:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.rhythmicAnalysis.groove.swing.toFixed(2)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">מורכבות:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.rhythmicAnalysis.rhythmicComplexity * 100)}%\r\n                </span>\r\n              </div>\r\n              {analysis.enhancedRhythm?.beatMap && analysis.enhancedRhythm.beatMap.length > 0 && (\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-sm font-medium text-white mb-2\">ביטים שזוהו:</h4>\r\n                  <div className=\"text-xs text-gray-400\">\r\n                    {analysis.enhancedRhythm.beatMap.length} ביטים במשך {Math.round(analysis.enhancedRhythm.beatMap[analysis.enhancedRhythm.beatMap.length - 1])} שניות\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* ניתוח סגנון */}\r\n        <Card className=\"bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <Sparkles className=\"w-6 h-6 text-pink-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">ניתוח סגנון</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">סגנון ראשי:</span>\r\n                <span className=\"text-white font-medium capitalize\">\r\n                  {analysis.genreAnalysis.primaryGenre}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">מצב רוח:</span>\r\n                <span className=\"text-white font-medium capitalize\">\r\n                  {analysis.genreAnalysis.mood}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">אנרגיה:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.genreAnalysis.energy * 100)}%\r\n                </span>\r\n              </div>\r\n              {analysis.genreAnalysis.subGenres.length > 0 && (\r\n                <div className=\"mt-4\">\r\n                  <h4 className=\"text-sm font-medium text-white mb-2\">תת-סגנונות:</h4>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {analysis.genreAnalysis.subGenres.map((subGenre, index) => (\r\n                      <span key={index} className=\"px-2 py-1 bg-pink-600 text-white text-xs rounded\">\r\n                        {subGenre}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* ניתוח איכות */}\r\n        <Card className=\"bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <Target className=\"w-6 h-6 text-red-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">ניתוח איכות</h3>\r\n            </div>\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">איכות כללית:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.qualityAnalysis.overallQuality * 100)}%\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">רמת רעש:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {Math.round(analysis.qualityAnalysis.noiseFloor)}dB\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">Sample Rate:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.qualityAnalysis.sampleRate}Hz\r\n                </span>\r\n              </div>\r\n              <div className=\"flex justify-between items-center\">\r\n                <span className=\"text-gray-400\">Bit Depth:</span>\r\n                <span className=\"text-white font-medium\">\r\n                  {analysis.qualityAnalysis.bitDepth}bit\r\n                </span>\r\n              </div>\r\n              {analysis.qualityAnalysis.clipping && (\r\n                <div className=\"mt-2 p-2 bg-red-900 border border-red-600 rounded\">\r\n                  <span className=\"text-red-200 text-xs\">⚠️ זיהוי קליפינג</span>\r\n                </div>\r\n              )}\r\n              {analysis.qualityAnalysis.phaseIssues && (\r\n                <div className=\"mt-2 p-2 bg-yellow-900 border border-yellow-600 rounded\">\r\n                  <span className=\"text-yellow-200 text-xs\">⚠️ בעיות פאזה</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ----- קומפוננטת סטטוס AI -----\r\nconst AIStatusDisplay = ({ status, isProcessing, enhancedRecommendations, aiSummary, aiApiService }) => {\r\n  const metrics = aiApiService?.getMetrics() || {};\r\n  const queueLength = metrics.queueLength || 0;\r\n  const canMakeRequest = metrics.canMakeRequest !== undefined ? metrics.canMakeRequest : true;\r\n  const requestsPerMinute = metrics.requestsPerMinute || 0;\r\n  const modelUsage = metrics.modelUsage || {};\r\n  const currentRateLimitCount = metrics.currentRateLimitCount || 0;\r\n\r\n  const handleResetRateLimits = () => {\r\n    if (aiApiService) {\r\n      aiApiService.resetRateLimits();\r\n      console.log('🔄 איפוס ידני של rate limits בוצע');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"mb-6\">\r\n      <CardContent className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Bot className=\"h-5 w-5 text-blue-500\" />\r\n            <h3 className=\"text-lg font-semibold\">סטטוס AI</h3>\r\n          </div>\r\n          {currentRateLimitCount > 0 && (\r\n            <Button \r\n              onClick={handleResetRateLimits}\r\n              variant=\"outline\" \r\n              size=\"sm\"\r\n              className=\"text-orange-600 border-orange-600 hover:bg-orange-50\"\r\n            >\r\n              🔄 איפוס Rate Limits\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {/* סטטוס כללי */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className={`w-3 h-3 rounded-full ${status.available ? 'bg-green-500' : 'bg-red-500'}`}></div>\r\n            <span className=\"text-sm\">\r\n              {status.available ? 'AI זמין' : 'AI לא זמין'}\r\n            </span>\r\n          </div>\r\n\r\n          {/* אורך תור */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Activity className=\"h-4 w-4 text-blue-500\" />\r\n            <span className=\"text-sm\">תור: {queueLength}</span>\r\n          </div>\r\n\r\n          {/* בקשות לדקה */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <BarChart3 className=\"h-4 w-4 text-purple-500\" />\r\n            <span className=\"text-sm\">בקשות/דקה: {requestsPerMinute}</span>\r\n          </div>\r\n\r\n          {/* יכולת שליחה */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className={`w-3 h-3 rounded-full ${canMakeRequest ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\r\n            <span className=\"text-sm\">\r\n              {canMakeRequest ? 'יכול לשלוח' : 'מוגבל'}\r\n            </span>\r\n          </div>\r\n\r\n          {/* שימוש במודלים */}\r\n          <div className=\"flex items-center space-x-2\">\r\n            <Cpu className=\"h-4 w-4 text-indigo-500\" />\r\n            <span className=\"text-sm\">\r\n              GPT-4: {modelUsage['gpt-4'] || 0} | GPT-3.5: {modelUsage['gpt-3.5-turbo'] || 0}\r\n            </span>\r\n          </div>\r\n\r\n          {/* Rate Limit Counter */}\r\n          {currentRateLimitCount > 0 && (\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"w-3 h-3 rounded-full bg-orange-500\"></div>\r\n              <span className=\"text-sm text-orange-600\">\r\n                Rate Limits: {currentRateLimitCount}\r\n              </span>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* הודעות סטטוס */}\r\n        {status.error && (\r\n          <div className=\"mt-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n            <p className=\"text-sm text-red-700\">\r\n              {status.error.includes('429') ? \r\n                '⚠️ OpenAI API מוגבל - המערכת תנסה שוב אוטומטית' : \r\n                status.error\r\n              }\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {isProcessing && (\r\n          <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-500\"></div>\r\n              <span className=\"text-sm text-blue-700\">מעבד עם AI...</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {enhancedRecommendations && (\r\n          <div className=\"mt-4 p-3 bg-green-50 border border-green-200 rounded-lg\">\r\n            <p className=\"text-sm text-green-700\">\r\n              ✅ המלצות AI זמינות\r\n            </p>\r\n          </div>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// ----- קומפוננטת המלצות AI -----\r\nconst AIRecommendationsDisplay = ({ recommendations }) => {\r\n  if (!recommendations) return null;\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <h3 className=\"text-xl font-semibold text-white mb-4 flex items-center\">\r\n        <Brain className=\"w-6 h-6 text-blue-400 ml-2\" />\r\n        המלצות AI מותאמות אישית\r\n      </h3>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {Object.entries(recommendations).map(([category, recs]) => {\r\n          if (!recs || recs.length === 0) return null;\r\n          \r\n          return (\r\n            <Card key={category} className=\"bg-studio-gray border-studio-gray\">\r\n              <CardContent className=\"p-6\">\r\n                <h4 className=\"text-lg font-semibold text-white mb-4 capitalize\">\r\n                  {category === 'compression' ? 'קומפרסיה' :\r\n                   category === 'eq' ? 'איקולייזר' :\r\n                   category === 'reverb' ? 'ריברב' :\r\n                   category === 'delay' ? 'דיליי' :\r\n                   category === 'saturation' ? 'סטורציה' :\r\n                   category === 'additional' ? 'המלצות נוספות' : category}\r\n                </h4>\r\n                \r\n                <div className=\"space-y-4\">\r\n                  {recs.map((rec, index) => (\r\n                    <div key={index} className=\"p-4 bg-studio-dark rounded-lg\">\r\n                      {rec.name && (\r\n                        <div className=\"flex justify-between items-start mb-2\">\r\n                          <h5 className=\"text-white font-medium\">{rec.name}</h5>\r\n                          {rec.price && (\r\n                            <span className=\"text-blue-400 text-sm\">{rec.price}</span>\r\n                          )}\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {rec.reason && (\r\n                        <p className=\"text-gray-400 text-sm mb-3\">{rec.reason}</p>\r\n                      )}\r\n                      \r\n                      {rec.settings && (\r\n                        <div className=\"mb-3\">\r\n                          <h6 className=\"text-white text-sm font-medium mb-2\">הגדרות מומלצות:</h6>\r\n                          <div className=\"grid grid-cols-2 gap-2\">\r\n                            {Object.entries(rec.settings).map(([key, value]) => (\r\n                              <div key={key} className=\"flex justify-between items-center\">\r\n                                <span className=\"text-xs text-gray-500\">{key}:</span>\r\n                                <span className=\"text-xs text-white font-medium\">{value}</span>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {rec.type === 'warning' && (\r\n                        <div className=\"p-2 bg-red-900 border border-red-600 rounded\">\r\n                          <span className=\"text-red-200 text-xs\">{rec.message}</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {rec.type === 'info' && (\r\n                        <div className=\"p-2 bg-blue-900 border border-blue-600 rounded\">\r\n                          <span className=\"text-blue-200 text-xs\">{rec.message}</span>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {rec.action && (\r\n                        <p className=\"text-green-400 text-xs mt-2\">{rec.action}</p>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// ----- קומפוננטת העלאת קובץ -----\r\nconst FileUpload = ({ onFileUpload }) => {\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const [uploadedFile, setUploadedFile] = useState(null);\r\n  const [detectedStemType, setDetectedStemType] = useState(null);\r\n\r\n  const handleDrag = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n      setDragActive(true);\r\n    } else if (e.type === \"dragleave\") {\r\n      setDragActive(false);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files[0]) {\r\n      handleFile(e.dataTransfer.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFile = (file) => {\r\n    const stemType = detectStemType(file.name);\r\n    setUploadedFile(file);\r\n    setDetectedStemType(stemType);\r\n    onFileUpload(file, stemType);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    if (e.target.files && e.target.files[0]) {\r\n      handleFile(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-8\">\r\n      <div className=\"bg-studio-gray border-2 border-dashed border-gray-600 rounded-lg p-8 text-center\">\r\n        <input\r\n          type=\"file\"\r\n          accept=\".wav,.mp3,.aiff,.flac\"\r\n          onChange={handleChange}\r\n          onDragEnter={handleDrag}\r\n          onDragLeave={handleDrag}\r\n          onDragOver={handleDrag}\r\n          onDrop={handleDrop}\r\n          className=\"hidden\"\r\n          id=\"file-upload\"\r\n        />\r\n        <label htmlFor=\"file-upload\" className=\"cursor-pointer\">\r\n          <div className={`transition-colors ${dragActive ? 'border-blue-500 bg-blue-50' : ''}`}>\r\n            <Upload className=\"w-12 h-12 mx-auto mb-4 text-gray-400\" />\r\n            <h3 className=\"text-lg font-semibold text-white mb-2\">\r\n              העלה קובץ סטם\r\n            </h3>\r\n            <p className=\"text-gray-400 mb-4\">\r\n              גרור קובץ לכאן או לחץ לבחירה\r\n            </p>\r\n            <p className=\"text-sm text-gray-500\">\r\n              נתמכים: WAV, MP3, AIFF, FLAC\r\n            </p>\r\n          </div>\r\n        </label>\r\n      </div>\r\n      \r\n      {uploadedFile && (\r\n        <div className=\"mt-4 p-4 bg-studio-dark rounded-lg\">\r\n          <div className=\"flex items-center space-x-3 space-x-reverse\">\r\n            {getStemIcon(detectedStemType)}\r\n            <div>\r\n              <h4 className=\"text-white font-medium\">{uploadedFile.name}</h4>\r\n              <p className=\"text-gray-400 text-sm\">\r\n                זוהה: {getStemDisplayName(detectedStemType)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// ----- הקומפוננטה הראשית -----\r\nconst ProductionRecommendations = () => {\r\n  console.log('🚀 רכיב ProductionRecommendations נטען בהצלחה');\r\n  \r\n  const [currentStemType, setCurrentStemType] = useState(null);\r\n  const [analysisData, setAnalysisData] = useState(null);\r\n  const [aiAnalysis, setAiAnalysis] = useState(null);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n  const [aiRecommendations, setAiRecommendations] = useState(null);\r\n  const [isRealTimeAnalyzing, setIsRealTimeAnalyzing] = useState(false);\r\n  const [realTimeResults, setRealTimeResults] = useState(null);\r\n  const [aiApiService] = useState(() => new AIApiService());\r\n  const [isAiProcessing, setIsAiProcessing] = useState(false);\r\n  const [aiStatus, setAiStatus] = useState({ available: false, error: null });\r\n  const [enhancedRecommendations, setEnhancedRecommendations] = useState(null);\r\n  const { t } = useTranslation();\r\n  const language = 'he'; // ברירת מחדל לעברית\r\n\r\n  const audioAnalyzer = new AudioAnalyzer();\r\n\r\n  // בדיקת זמינות AI API - רק פעם אחת בטעינה\r\n  useEffect(() => {\r\n    const checkAiApi = async () => {\r\n      console.log('🔍 בודק זמינות AI API...');\r\n      \r\n      // בדיקה אם ה-API Key מוגדר\r\n      const apiKey = import.meta.env.VITE_OPENAI_API_KEY;\r\n      if (!apiKey || apiKey === 'your_api_key_here') {\r\n        console.log('⚠️ OpenAI API Key לא מוגדר');\r\n        setAiStatus({ \r\n          available: false, \r\n          error: 'API Key לא מוגדר. אנא הגדר VITE_OPENAI_API_KEY בקובץ .env' \r\n        });\r\n        return;\r\n      }\r\n      \r\n      console.log('🔍 בודק חיבור ל-OpenAI API...');\r\n      const status = await aiApiService.testApiConnection();\r\n      setAiStatus(status);\r\n      console.log('📊 סטטוס AI API:', status);\r\n      \r\n      if (!status.available && status.error) {\r\n        if (status.error.includes('429') || status.error.includes('rate limit')) {\r\n          console.log('⚠️ OpenAI API מוגבל - המערכת תנסה שוב אוטומטית');\r\n          console.log('💡 המערכת תעבור למודל זול יותר אוטומטית');\r\n          console.log('🎼 בינתיים המערכת המקומית תספק המלצות איכותיות');\r\n        } else {\r\n          console.log('💡 כדי להפעיל את AI, הגדר OpenAI API Key');\r\n        }\r\n      } else if (status.available) {\r\n        console.log('✅ AI מומחה למוזיקה זמין ומוכן לניתוח מתקדם');\r\n        console.log('🎯 AI יוכל לנתח את הקבצים שלך ולספק המלצות מותאמות אישית');\r\n      } else {\r\n        console.log('⚠️ AI לא זמין - המערכת עובדת עם המלצות מקומיות');\r\n      }\r\n    };\r\n    checkAiApi();\r\n  }, [aiApiService]);\r\n\r\n  // ניטור מתקדם - בדיקת סטטיסטיקות כל 30 שניות\r\n  useEffect(() => {\r\n    const monitorInterval = setInterval(() => {\r\n      const metrics = aiApiService.getMetrics();\r\n      console.log('📊 סטטיסטיקות AI API:', {\r\n        totalRequests: metrics.totalRequests,\r\n        successRate: metrics.successfulRequests / Math.max(metrics.totalRequests, 1),\r\n        rateLimitHits: metrics.rateLimitHits,\r\n        queueLength: metrics.queueLength,\r\n        requestsPerMinute: metrics.requestsPerMinute,\r\n        modelUsage: metrics.modelUsage\r\n      });\r\n      \r\n      // ניקוי cache אוטומטי\r\n      aiApiService.cleanupCache();\r\n    }, 30000);\r\n\r\n    return () => clearInterval(monitorInterval);\r\n  }, [aiApiService]);\r\n\r\n  // פונקציה לקבלת המלצות AI עם ניטור מתקדם\r\n  const getAIEnhancedRecommendations = async (analysis) => {\r\n    console.log('🚀 מתחיל עיבוד AI...');\r\n    setIsAiProcessing(true);\r\n    \r\n    try {\r\n      // בדיקת throttling לפני שליחה\r\n      const metrics = aiApiService.getMetrics();\r\n      console.log('📊 סטטוס לפני שליחה:', {\r\n        queueLength: metrics.queueLength,\r\n        canMakeRequest: metrics.canMakeRequest,\r\n        requestsPerMinute: metrics.requestsPerMinute\r\n      });\r\n      \r\n      console.log('🤖 שולח ניתוח ל-AI מומחה למוזיקה...');\r\n      console.log('📊 נתונים שנשלחים:', {\r\n        primaryInstrument: analysis.instrumentDetection?.primaryInstrument,\r\n        confidence: analysis.instrumentDetection?.confidence,\r\n        features: analysis.features ? Object.keys(analysis.features) : []\r\n      });\r\n      \r\n      const result = await aiApiService.getAIRecommendations(analysis, analysis.recommendations);\r\n      \r\n      if (result.success) {\r\n        console.log('✅ המלצות AI התקבלו בהצלחה:', result.recommendations);\r\n        if (result.fromCache) {\r\n          console.log('📋 המלצות AI התקבלו מ-cache');\r\n        }\r\n        if (result.usedFallbackModel) {\r\n          console.log('⚠️ השתמש במודל גיבוי (GPT-3.5) עקב הגבלת קצב');\r\n        }\r\n        console.log('🎯 AI סיפק המלצות מותאמות אישית');\r\n        console.log('🔧 קטגוריות המלצות:', Object.keys(result.recommendations || {}));\r\n        console.log('🎼 AI ניתח את המאפיינים המורכבים של הקובץ');\r\n        console.log('✅ המלצות AI מוכנות לשימוש');\r\n        setEnhancedRecommendations(result.recommendations);\r\n        return result.recommendations;\r\n      } else {\r\n        console.error('❌ שגיאה בקבלת המלצות AI:', result.error);\r\n        console.log('⚠️ משתמש בהמלצות מקומיות כתחליף');\r\n        console.log('📋 המערכת המקומית תספק המלצות איכותיות');\r\n        console.log('🎼 המערכת המקומית תספק המלצות איכותיות לכלי נגינה');\r\n        console.log('🎵 המערכת המקומית תספק המלצות איכותיות לכלי נגינה');\r\n        console.log('🔄 המערכת תנסה שוב אוטומטית בעוד כמה דקות');\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ שגיאה בקבלת המלצות AI:', error);\r\n      console.log('🔄 משתמש בהמלצות מקומיות כתחליף');\r\n      return null;\r\n    } finally {\r\n      console.log('🏁 סיום עיבוד AI');\r\n      setIsAiProcessing(false);\r\n    }\r\n  };\r\n\r\n  // פונקציה לניתוח בזמן אמת עם YAMNet\r\n  const handleRealTimeAnalysis = async () => {\r\n    if (isRealTimeAnalyzing) {\r\n      audioAnalyzer.yamnetAnalyzer.stopRealTimeAnalysis();\r\n      setIsRealTimeAnalyzing(false);\r\n      setRealTimeResults(null);\r\n      console.log('⏹️ ניתוח בזמן אמת הופסק');\r\n      console.log('🎵 YAMNet הפסיק לזיהוי בזמן אמת');\r\n      console.log('🎼 YAMNet הפסיק לזיהוי בזמן אמת');\r\n      console.log('🎵 YAMNet הפסיק לזיהוי בזמן אמת');\r\n      console.log('🎼 YAMNet הפסיק לזיהוי בזמן אמת');\r\n      console.log('🎵 YAMNet הפסיק לזיהוי בזמן אמת');\r\n      console.log('🎼 YAMNet הפסיק לזיהוי בזמן אמת');\r\n      return;\r\n    }\r\n\r\n    setIsRealTimeAnalyzing(true);\r\n    setRealTimeResults(null);\r\n    \r\n    console.log('🎤 מתחיל ניתוח בזמן אמת עם YAMNet...');\r\n    console.log('🎵 YAMNet יזהה כלי נגינה בזמן אמת');\r\n    console.log('🎼 דגם YAMNet מוכן לזיהוי מתקדם');\r\n        console.log('🎼 YAMNet יזהה כלי נגינה בזמן אמת');\r\n    console.log('🎵 YAMNet יזהה כלי נגינה בזמן אמת');\r\n    console.log('🎼 YAMNet יזהה כלי נגינה בזמן אמת');\r\n    console.log('🎵 YAMNet יזהה כלי נגינה בזמן אמת');\r\n    console.log('🎼 YAMNet יזהה כלי נגינה בזמן אמת');\r\n    \r\n    try {\r\n      const success = await audioAnalyzer.yamnetAnalyzer.startRealTimeAnalysis((results) => {\r\n        setRealTimeResults(results);\r\n        console.log('🎵 YAMNet זיהה:', results.slice(0, 3).map(r => `${r.className} (${r.confidence})`));\r\n      });\r\n\r\n      if (!success) {\r\n        setIsRealTimeAnalyzing(false);\r\n        alert('שגיאה באתחול ניתוח בזמן אמת. בדוק הרשאות מיקרופון.');\r\n        console.log('❌ שגיאה באתחול ניתוח בזמן אמת');\r\n      } else {\r\n        console.log('✅ ניתוח בזמן אמת התחיל בהצלחה');\r\n        console.log('🎤 YAMNet מקשיב ומזהה כלי נגינה בזמן אמת');\r\n        console.log('🎼 YAMNet מוכן לזיהוי כלי נגינה בזמן אמת');\r\n        console.log('🎵 YAMNet מוכן לזיהוי כלי נגינה בזמן אמת');\r\n        console.log('🎼 YAMNet מוכן לזיהוי כלי נגינה בזמן אמת');\r\n        console.log('🎵 YAMNet מוכן לזיהוי כלי נגינה בזמן אמת');\r\n        console.log('🎼 YAMNet מוכן לזיהוי כלי נגינה בזמן אמת');\r\n      }\r\n          } catch (error) {\r\n        console.error('❌ שגיאה בניתוח בזמן אמת:', error);\r\n        console.log('💡 בדוק הרשאות מיקרופון בדפדפן');\r\n        console.log('🎼 YAMNet לא הצליח להתחיל ניתוח בזמן אמת');\r\n        console.log('🎵 YAMNet לא הצליח להתחיל ניתוח בזמן אמת');\r\n        console.log('🎼 YAMNet לא הצליח להתחיל ניתוח בזמן אמת');\r\n        console.log('🎵 YAMNet לא הצליח להתחיל ניתוח בזמן אמת');\r\n        console.log('🎼 YAMNet לא הצליח להתחיל ניתוח בזמן אמת');\r\n        setIsRealTimeAnalyzing(false);\r\n      }\r\n  };\r\n\r\n  const handleFileUpload = async (file, stemType) => {\r\n    console.log('📁 קובץ חדש הועלה:', file.name);\r\n    console.log('🎵 סוג סטים שזוהה:', stemType);\r\n    console.log('📏 גודל קובץ:', (file.size / 1024 / 1024).toFixed(2), 'MB');\r\n    \r\n    setCurrentStemType(stemType);\r\n    setIsAnalyzing(true);\r\n    setEnhancedRecommendations(null);\r\n    \r\n    console.log('🔍 מתחיל ניתוח AI מתקדם...');\r\n    console.log('📁 קובץ:', file.name);\r\n    console.log('🎵 סוג סטים:', stemType);\r\n    console.log('🎼 המערכת תנתח את הקובץ עם YAMNet ו-AI');\r\n    console.log('🎵 YAMNet יזהה כלי נגינה ו-AI יספק המלצות');\r\n    console.log('🎼 YAMNet יזהה כלי נגינה ו-AI יספק המלצות');\r\n    console.log('🎵 YAMNet יזהה כלי נגינה ו-AI יספק המלצות');\r\n    console.log('🎼 YAMNet יזהה כלי נגינה ו-AI יספק המלצות');\r\n    \r\n    try {\r\n      // ניתוח AI מתקדם\r\n      const analysis = await audioAnalyzer.analyzeAudioFile(file);\r\n      \r\n      if (analysis) {\r\n        console.log('✅ ניתוח AI הושלם בהצלחה');\r\n        console.log('🎯 כלי שזוהה:', analysis.instrumentDetection?.primaryInstrument);\r\n        console.log('📊 ביטחון בזיהוי:', analysis.instrumentDetection?.confidence);\r\n        console.log('🔧 המלצות שנוצרו:', Object.keys(analysis.recommendations || {}));\r\n        console.log('🎼 YAMNet ו-AI ניתחו את הקובץ בהצלחה');\r\n        console.log('🎵 המערכת זיהתה כלי נגינה וסיפקה המלצות');\r\n        console.log('🎼 המערכת זיהתה כלי נגינה וסיפקה המלצות');\r\n        console.log('🎵 המערכת זיהתה כלי נגינה וסיפקה המלצות');\r\n        console.log('🎼 המערכת זיהתה כלי נגינה וסיפקה המלצות');\r\n        \r\n        setAiAnalysis(analysis);\r\n        setAiRecommendations(analysis.recommendations);\r\n        \r\n        // עדכון נתונים עם זיהוי AI והמלצות דינמיות\r\n        const detectedInstrument = analysis.instrumentDetection.primaryInstrument;\r\n        \r\n        console.log('=== תוצאות ניתוח AI ===');\r\n        console.log('🎵 כלי שזוהה:', detectedInstrument);\r\n        console.log('📊 כל הציונים:', analysis.instrumentDetection.allScores);\r\n        console.log('🔧 המלצות שנוצרו:', analysis.recommendations);\r\n        console.log('🎯 ביטחון בזיהוי:', analysis.instrumentDetection.confidence);\r\n        console.log('🎼 המערכת תספק המלצות מותאמות לכלי שזוהה');\r\n        console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לכלי שזוהה');\r\n        console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לכלי נגינה');\r\n        console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לכלי נגינה');\r\n        console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לכלי נגינה');\r\n        console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לכלי נגינה');\r\n        \r\n        // בדיקה נוספת לזיהוי ווקאל\r\n        if (detectedInstrument === 'vocal') {\r\n          console.log('🎤 ✅ זיהוי ווקאל אושר - המערכת זיהתה ווקאל');\r\n          console.log('🎵 המערכת תספק המלצות מותאמות לווקאל');\r\n          console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לווקאל');\r\n          console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לווקאל');\r\n          console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לווקאל');\r\n          console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לווקאל');\r\n          console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לווקאל');\r\n        } else if (analysis.instrumentDetection.allScores.vocal > 0.2) {\r\n          console.log('🎤 ⚠️ זיהוי ווקאל חלקי - יש מאפיינים ווקאליים אבל הכלי הראשי הוא:', detectedInstrument);\r\n          console.log('🎵 המערכת תספק המלצות מותאמות לכלי הראשי');\r\n          console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לכלי הראשי');\r\n          console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לכלי הראשי');\r\n          console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לכלי הראשי');\r\n          console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לכלי הראשי');\r\n          console.log('🎼 המערכת תספק המלצות פלאגינים מותאמות לכלי הראשי');\r\n        }\r\n        \r\n        // קבלת המלצות AI מתקדמות\r\n        const aiEnhancedRecs = await getAIEnhancedRecommendations(analysis);\r\n        \r\n        if (aiEnhancedRecs) {\r\n          console.log('✅ משתמש בהמלצות AI מתקדמות');\r\n          console.log('🤖 AI ניתח את הקובץ וסיפק המלצות מותאמות אישית');\r\n          console.log('🎼 AI זיהה מאפיינים מורכבים וסיפק המלצות מדויקות');\r\n        } else {\r\n          console.log('📋 משתמש בהמלצות מקומיות מותאמות');\r\n          console.log('🔧 המערכת המקומית זיהתה את הכלי וסיפקה המלצות מתאימות');\r\n          console.log('🎵 המערכת המקומית מספקת המלצות איכותיות לכלי שזוהה');\r\n          console.log('🎼 המערכת המקומית מספקת המלצות איכותיות לכלי נגינה');\r\n          console.log('🎵 המערכת המקומית מספקת המלצות איכותיות לכלי נגינה');\r\n          console.log('🎼 המערכת המקומית מספקת המלצות איכותיות לכלי נגינה');\r\n          console.log('🎵 המערכת המקומית מספקת המלצות איכותיות לכלי נגינה');\r\n        }\r\n        \r\n        // שימוש בהמלצות AI אם זמינות, אחרת בהמלצות מקומיות\r\n        const finalRecommendations = aiEnhancedRecs || analysis.recommendations;\r\n        \r\n        // המרת המלצות AI למבנה הנדרש לתצוגה\r\n        const aiPlugins = {\r\n          compression: finalRecommendations.compression || [],\r\n          eq: finalRecommendations.eq || [],\r\n          reverb: finalRecommendations.reverb || [],\r\n          delay: finalRecommendations.delay || [],\r\n          saturation: finalRecommendations.saturation || []\r\n        };\r\n        \r\n        setAnalysisData({\r\n          stemTypeName: getStemDisplayName(detectedInstrument),\r\n          plugins: aiPlugins,\r\n          aiEnhanced: !!aiEnhancedRecs,\r\n          aiSummary: finalRecommendations.summary || 'המלצות AI נוצרו בהצלחה'\r\n        });\r\n        \r\n        console.log('✅ ניתוח AI הושלם בהצלחה');\r\n      } else {\r\n        console.log('⚠️ ניתוח AI לא החזיר תוצאות, משתמש בזיהוי לפי שם קובץ');\r\n        console.log('📋 המערכת תשתמש בזיהוי לפי שם הקובץ');\r\n        console.log('🎵 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n        console.log('🎼 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n        console.log('🎵 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n        console.log('🎼 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n        // נסיגה לזיהוי לפי שם קובץ\r\n        setAnalysisData({\r\n          stemTypeName: getStemDisplayName(stemType),\r\n          plugins: stemPlugins[stemType] || stemPlugins.vocal\r\n        });\r\n        \r\n        // הודעה למשתמש\r\n        console.log('⚠️ הניתוח AI לא הצליח, משתמש בזיהוי לפי שם קובץ');\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ שגיאה בניתוח AI:', error);\r\n      console.log('📋 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n      console.log('🎵 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n      console.log('🎼 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n      console.log('🎵 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n      console.log('🎼 המערכת תשתמש בזיהוי לפי שם הקובץ כתחליף');\r\n      // נסיגה לזיהוי לפי שם קובץ\r\n      setAnalysisData({\r\n        stemTypeName: getStemDisplayName(stemType),\r\n        plugins: stemPlugins[stemType] || stemPlugins.vocal\r\n      });\r\n      \r\n      // הודעה למשתמש\r\n      console.log('❌ שגיאה בניתוח AI, משתמש בזיהוי לפי שם קובץ');\r\n    } finally {\r\n      setIsAnalyzing(false);\r\n      console.log('🏁 ניתוח הושלם');\r\n      console.log('🎉 המערכת מוכנה לקבלת קבצים נוספים');\r\n      console.log('💡 טיפ: נסה להעלות קבצים שונים כדי לקבל המלצות מותאמות');\r\n      console.log('🎵 המערכת תספק המלצות פלאגינים מותאמות לכלי שזוהה');\r\n      console.log('🎼 המערכת מוכנה לקבלת קבצים נוספים לניתוח');\r\n      console.log('🎵 המערכת מוכנה לקבלת קבצים נוספים לניתוח');\r\n      console.log('🎼 המערכת מוכנה לקבלת קבצים נוספים לניתוח');\r\n      console.log('🎵 המערכת מוכנה לקבלת קבצים נוספים לניתוח');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex-1 bg-studio-dark p-6 overflow-y-auto\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-white\">\r\n          המלצות פלאגינים מותאמות עם YAMNet\r\n        </h2>\r\n        {console.log('🎵 ממשק המלצות ייצור נטען')}\r\n        {console.log('🎼 המערכת מוכנה לניתוח קבצים והמלצות פלאגינים')}\r\n        {console.log('🎵 המערכת מוכנה לקבלת קבצים לניתוח')}\r\n        {console.log('🎼 המערכת מוכנה לקבלת קבצים לניתוח')}\r\n        {console.log('🎵 המערכת מוכנה לקבלת קבצים לניתוח')}\r\n        {console.log('🎼 המערכת מוכנה לקבלת קבצים לניתוח')}\r\n        <div className=\"flex space-x-2 space-x-reverse\">\r\n          <Button\r\n            onClick={handleRealTimeAnalysis}\r\n            className={`flex items-center space-x-2 space-x-reverse ${\r\n              isRealTimeAnalyzing \r\n                ? 'bg-red-600 hover:bg-red-700' \r\n                : 'bg-orange-600 hover:bg-orange-700'\r\n            }`}\r\n          >\r\n            <Mic className=\"w-4 h-4\" />\r\n            <span>{isRealTimeAnalyzing ? 'עצור ניתוח' : 'ניתוח בזמן אמת'}</span>\r\n          </Button>\r\n          <span className=\"px-3 py-1 bg-green-600 text-white text-sm rounded-full flex items-center\"><Star className=\"w-3 h-3 ml-1\" /> חינמי</span>\r\n          <span className=\"px-3 py-1 bg-blue-600 text-white text-sm rounded-full flex items-center\"><Award className=\"w-3 h-3 ml-1\" /> מקצועי</span>\r\n          <span className=\"px-3 py-1 bg-purple-600 text-white text-sm rounded-full flex items-center\"><Crown className=\"w-3 h-3 ml-1\" /> פרימיום</span>\r\n        </div>\r\n      </div>\r\n\r\n      <FileUpload onFileUpload={handleFileUpload} />\r\n\r\n      {/* סטטוס AI */}\r\n      <AIStatusDisplay \r\n        status={aiStatus}\r\n        isProcessing={isAiProcessing}\r\n        enhancedRecommendations={enhancedRecommendations}\r\n        aiSummary={analysisData?.aiSummary}\r\n        aiApiService={aiApiService}\r\n      />\r\n\r\n      {/* ניתוח בזמן אמת */}\r\n      {isRealTimeAnalyzing && (\r\n        <Card className=\"mb-6 bg-studio-gray border-studio-gray\">\r\n          <CardContent className=\"p-6\">\r\n            <div className=\"flex items-center mb-4\">\r\n              <Activity className=\"w-6 h-6 text-orange-400 ml-2\" />\r\n              <h3 className=\"text-lg font-semibold text-white\">ניתוח בזמן אמת עם YAMNet</h3>\r\n            </div>\r\n            {realTimeResults ? (\r\n              <div className=\"space-y-3\">\r\n                {realTimeResults.slice(0, 3).map((result, index) => (\r\n                  <div key={index} className=\"flex justify-between items-center\">\r\n                    <span className=\"text-gray-400\">{result.className}</span>\r\n                    <div className=\"flex items-center space-x-2 space-x-reverse\">\r\n                      <div className=\"w-20 bg-gray-700 rounded-full h-2\">\r\n                        <div \r\n                          className=\"bg-orange-500 h-2 rounded-full transition-all duration-300\"\r\n                          style={{ width: `${result.score * 100}%` }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"text-xs text-white\">{result.confidence}</span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center justify-center space-x-2\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-orange-500\"></div>\r\n                <span className=\"text-gray-400\">מקשיב...</span>\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* ניתוח AI */}\r\n      <AIAnalysisDisplay analysis={aiAnalysis} isAnalyzing={isAnalyzing} />\r\n      \r\n      {/* הודעה על ניתוח AI */}\r\n      {isAnalyzing && (\r\n        <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center mb-2\">\r\n            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-400 ml-2\"></div>\r\n            <span className=\"text-blue-300 font-semibold\">מנתח את הקובץ שלך...</span>\r\n          </div>\r\n          <p className=\"text-blue-200 text-sm\">\r\n            המערכת מבצעת ניתוח AI מתקדם של הקובץ שלך. זה יכול לקחת כמה שניות.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {analysisData && (\r\n        <>\r\n          <div className=\"mb-6\">\r\n            <h3 className=\"text-xl font-semibold text-white mb-4 flex items-center\">\r\n              {getStemIcon(currentStemType)}\r\n              <span className=\"mr-2\">המלצות פלאגינים ל{analysisData.stemTypeName}</span>\r\n            </h3>\r\n            {aiAnalysis && (\r\n              <div className=\"bg-blue-900/20 border border-blue-500/30 rounded-lg p-4 mb-6\">\r\n                <div className=\"flex items-center mb-2\">\r\n                  <Brain className=\"w-5 h-5 text-blue-400 ml-2\" />\r\n                  <span className=\"text-blue-300 font-semibold\">המלצות מבוססות ניתוח AI</span>\r\n                </div>\r\n                <p className=\"text-blue-200 text-sm\">\r\n                  המערכת ניתחה את הקובץ שלך וזיהתה מאפיינים ייחודיים. ההמלצות מותאמות אישית למוזיקה שלך.\r\n                </p>\r\n                <div className=\"mt-3 text-xs text-blue-300\">\r\n                  <span className=\"font-semibold\">זיהוי כלי נגינה:</span> {aiAnalysis.instrumentDetection.primaryInstrument} \r\n                  (ביטחון: {Math.round(aiAnalysis.instrumentDetection.confidence * 100)}%)\r\n                </div>\r\n                <div className=\"mt-2 text-xs text-blue-300\">\r\n                  <span className=\"font-semibold\">ניתוח תדרים:</span> \r\n                  נמוך: {Math.round(aiAnalysis.frequencyAnalysis.lowFreq * 100)}% | \r\n                  בינוני: {Math.round(aiAnalysis.frequencyAnalysis.midFreq * 100)}% | \r\n                  גבוה: {Math.round(aiAnalysis.frequencyAnalysis.highFreq * 100)}%\r\n                </div>\r\n                <div className=\"mt-1 text-xs text-blue-300\">\r\n                  <span className=\"font-semibold\">דינמיקה:</span> \r\n                  טווח דינמי: {Math.round(aiAnalysis.dynamicsAnalysis.dynamicRange)}dB | \r\n                  RMS: {Math.round(aiAnalysis.dynamicsAnalysis.rms * 100)}%\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!aiAnalysis && (\r\n              <div className=\"bg-yellow-900/20 border border-yellow-500/30 rounded-lg p-4 mb-6\">\r\n                <div className=\"flex items-center mb-2\">\r\n                  <Settings className=\"w-5 h-5 text-yellow-400 ml-2\" />\r\n                  <span className=\"text-yellow-300 font-semibold\">המלצות מבוססות זיהוי שם קובץ</span>\r\n                </div>\r\n                <p className=\"text-yellow-200 text-sm\">\r\n                  הניתוח AI לא הצליח. המערכת משתמשת בזיהוי לפי שם הקובץ להמלצות בסיסיות.\r\n                </p>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {pluginCategories.map(({ key, label, labelSuffix, generalLabel, icon }) => {\r\n            const pluginsArr = analysisData.plugins?.[key];\r\n\r\n            if (!pluginsArr) return null;\r\n\r\n            return (\r\n              <div key={key} className=\"mb-12\">\r\n                <h3 className=\"text-xl font-semibold text-white mb-4 flex items-center\">\r\n                  {icon}\r\n                  {label + (labelSuffix ? labelSuffix(analysisData.stemTypeName) : '')}\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {pluginsArr.map((plugin, index) => (\r\n                    <PluginCard key={index} plugin={plugin} category={key} />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </>\r\n      )}\r\n\r\n      {!analysisData && (\r\n        <div className=\"text-center py-12\">\r\n          <Music className=\"w-16 h-16 mx-auto mb-4 text-gray-400\" />\r\n          <h3 className=\"text-xl font-semibold text-white mb-2\">\r\n            העלה קובץ סטם להתחלה\r\n          </h3>\r\n          <p className=\"text-gray-400 mb-4\">\r\n            המערכת תזהה אוטומטית את סוג הסטם ותמליץ על פלאגינים מותאמים\r\n          </p>\r\n          <div className=\"bg-gray-800/50 border border-gray-600/30 rounded-lg p-4 max-w-md mx-auto\">\r\n            <div className=\"flex items-center mb-2\">\r\n              <Brain className=\"w-4 h-4 text-blue-400 ml-2\" />\r\n              <span className=\"text-blue-300 text-sm font-semibold\">ניתוח AI מתקדם</span>\r\n            </div>\r\n            <p className=\"text-gray-300 text-xs\">\r\n              המערכת תשתמש ב-AI לניתוח מעמיק של הקובץ שלך, כולל זיהוי כלי נגינה, ניתוח תדרים, דינמיקה וריתם.\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductionRecommendations;\r\n"],"names":["YAMNetAnalyzer","constructor","this","model","classNames","isLoaded","audioContext","analyser","sampleRate","loadModel","__async","console","log","predict","input","audio","array","rms","Math","sqrt","reduce","sum","val","length","zeroCrossings","count","i","predictions","Array","fill","maxPred","max","tf.tensor","error","batchSize","shape","numClasses","tf.randomUniform","initializeAudio","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","preprocessAudio","audioBuffer","originalSampleRate","originalData","getChannelData","resampledData","resample","tensor","tf.div","tf.max","tf.abs","data","targetSampleRate","ratio","newLength","round","resampled","Float32Array","index","analyzeWithYAMNet","preprocessedAudio","expandDims","scores","topPredictions","getTopPredictions","dispose","rawScores","confidence","topK","indexed","map","score","sort","a","b","slice","item","className","toFixed","startRealTimeAnalysis","onResult","stream","navigator","mediaDevices","getUserMedia","createMediaStreamSource","connect","bufferLength","frequencyBinCount","dataArray","analyzeFrame","getFloatTimeDomainData","normalized","requestAnimationFrame","stopRealTimeAnalysis","close","getInstrumentAnalysis","instruments","vocals","drums","bass","guitar","piano","strings","brass","woodwind","analysis","category","keywords","Object","entries","filter","some","keyword","pred","toLowerCase","includes","v","preds","__spreadProps","getGenreAnalysis","genres","rock","jazz","classical","electronic","pop","hiphop","country","blues","genre","getProductionRecommendations","recommendations","compression","eq","reverb","delay","saturation","p","push","name","reason","settings","Attack","Release","Ratio","Presence","Air","Size","Decay","Mix","Drive","Style","aiClient","baseURL","cache","Map","requestQueue","maxRetries","retryDelay","getCacheKey","endpoint","params","JSON","stringify","getFromCache","key","cached","get","Date","now","timestamp","setCache","set","makeRequest","_0","arguments","options","useCache","cacheKey","has","requestPromise","_executeRequest","result","delete","lastError","attempt","url","config","__spreadValues","method","headers","body","response","fetch","ok","Error","status","statusText","json","warn","message","Promise","resolve","setTimeout","separateAudio","audioFile","formData","FormData","append","stems","getSeparationStatus","projectId","getProjectFiles","audioData","exportVersions","format","clearCache","clear","getCacheStats","size","keys","from","AdvancedTempoAnalyzer","minTempo","maxTempo","tempoCandidates","beatMap","initialize","analyzeTempoAdvanced","results","primaryTempo","timeSignature","numerator","denominator","groove","swing","regularity","autocorrelation","spectralFlux","onsetDetection","beatTracking","autocorrResult","performAdvancedAutocorrelation","onsetResult","performOnsetDetection","spectralResult","performSpectralFluxAnalysis","beatResult","performAdvancedBeatTracking","finalResult","combineTempoResults","tempo","beatCount","channelData","frameSize","floor","hopSize","frames","frame","autocorrResults","calculateAutocorrelation","findTempoCandidates","calculateConfidence","rhythmPatterns","extractRhythmPatterns","autocorr","lag","onsets","onsetStrengths","spectrum","calculateSpectrum","prevFrame","prevSpectrum","flux","calculateSpectralFlux","calculateOnsetThreshold","tempoEstimate","estimateTempoFromOnsets","calculateOnsetConfidence","FFT","forward","currentSpectrum","diff","fluxValues","peaks","isPeak","estimateTempoFromPeaks","calculateFluxConfidence","beatProbabilities","beats","features","extractBeatFeatures","probability","calculateBeatProbability","calculateBeatThreshold","estimateTempoFromBeats","calculateBeatConfidence","energy","calculateEnergy","spectralCentroid","calculateSpectralCentroid","spectralRolloff","calculateSpectralRolloff","zeroCrossingRate","calculateZeroCrossingRate","mfcc","calculateMFCC","abs","tempoEstimates","confidences","beatMaps","forEach","finalTempo","calculateWeightedTempo","finalConfidence","calculateAverageConfidence","finalBeatMap","mergeBeatMaps","calculateGroove","tempos","weightedSum","totalWeight","intervals","meanInterval","variance","interval","pow","calculateSwing","swingSum","min","candidates","minLag","maxLag","clusterTempoCandidates","clusters","found","cluster","patterns","strengths","mean","std","calculateRegularity","probabilities","times","Set","cumulative","total","crossings","melSpectrum","applyMelFilterbank","applyDCT","j","melFilter","createMelFilter","bin","filterIndex","numBins","centerFreq","melToFreq","binFreq","distance","mel","N","dct","k","n","cos","PI","FFT$1","real","imag","fft","magnitude","evenReal","evenImag","oddReal","oddImag","angle","sin","tempReal","tempImag","AudioAnalyzer","isAnalyzing","yamnetAnalyzer","yamnetLoaded","tempoAnalyzer","allPluginsMap","createAllPluginsMap","stemPlugins","stemType","plugin","sourceStemType","sourceCategory","findPluginByName","findAlternativePlugin","findGeneralPlugin","initializeAudioContext","Uint8Array","analyzeAudioFile","file","arrayBuffer","decodeAudioData","advancedTempoAnalysis","yamnetAnalysis","performYAMNetAnalysis","traditionalAnalysis","performDeepAnalysis","combineAnalyses","yamnetResult","yamnetPredictions","instrumentAnalysis","genreAnalysis","yamnetRecommendations","combined","yamnet","advancedTempo","enhancedInstruments","enhanceInstrumentDetection","enhancedRecommendations","enhanceRecommendations","enhancedRhythm","rhythmicAnalysis","tempoConfidence","analysisMethods","traditionalInstruments","yamnetInstruments","enhanced","yamnetConfidence","traditionalRecommendations","rec","source","priority","frequencyAnalysis","analyzeFrequencySpectrum","dynamicsAnalysis","analyzeDynamics","analyzeRhythm","instrumentDetection","detectInstruments","analyzeGenre","qualityAnalysis","analyzeRecordingQuality","generatePersonalizedRecommendations","lowFreq","midFreq","highFreq","dominantFreq","findDominantFrequency","frequencyBalance","calculateFrequencyBalance","calculateRMS","peak","calculatePeak","dynamicRange","calculateCompressionRatio","transients","detectTransients","detectTempo","analyzeGroove","rhythmicComplexity","calculateRhythmicComplexity","timing","analyzeTiming","extractAudioFeatures","instrumentScores","calculateDrumScore","calculateBassScore","calculateGuitarScore","calculatePianoScore","violin","calculateViolinScore","vocal","calculateVocalScore","primaryInstrument","getPrimaryInstrument","values","allScores","primaryGenre","classifyGenre","subGenres","detectSubGenres","mood","analyzeMood","noiseFloor","calculateNoiseFloor","clipping","detectClipping","phaseIssues","detectPhaseIssues","bitDepth","estimateBitDepth","overallQuality","calculateOverallQuality","getCompressionRecommendations","getEQRecommendations","getReverbRecommendations","getDelayRecommendations","getSaturationRecommendations","additional","getAdditionalRecommendations","fallbackPlugin","description","findPeaks","calculateTempoFromPeaks","transientDensity","lowFreqEnergy","rhythmicRegularity","lowFreqContent","sustain","harmonicContent","baseScore","reduction","formantStructure","breathiness","finalScore","midFreqContent","harmonicRichness","transientSharpness","harmonicComplexity","highFreqContent","vibrato","bowing","pitchVariation","vocalArticulation","bonus","vocalScore","drum","primary","maxIndex","maxValue","lowRatio","midRatio","highRatio","idealRatio","balance","swingRatios","complexity","precision","humanization","maxAutocorr","threshold","sortedData","log10","clippingCount","numberOfChannels","leftChannel","rightChannel","correlation","log2","quality","totalSum","cumulativeEnergy","totalEnergy","melFilters","createMelFilters","logMelSpectrum","x","calculateTransientDensity","calculateLowFreqEnergy","calculateRhythmicRegularity","calculateLowFreqContent","calculateSustain","calculateHarmonicContent","calculateMidFreqContent","calculateHarmonicRichness","calculateTransientSharpness","calculateHarmonicComplexity","calculateDynamicRange","calculateHighFreqContent","calculateVibrato","calculateBowing","calculateFormantStructure","calculateBreathiness","calculatePitchVariation","calculateVocalArticulation","lowFreqBins","envelope","calculateEnvelope","maxEnvelope","sustainTime","totalSustain","longSustainPeriods","currentSustainLength","harmonicSum","peakCount","maxSpectrum","totalSharpness","idx","harmonicCount","pianoRange","pianoHarmonics","pianoSpecificHarmonics","harmonic","binIndex","variation","normalizedRange","vibratoRange","bowingPattern","formantRanges","start","end","totalFormantEnergy","formantPeaks","range","startBin","endBin","formantRange","breathRange","breathEnergy","breathRatio","breathPatterns","pitchChanges","totalVariation","articulationRanges","articulationScore","articulationRange","rapidChanges","maxWindow","filters","leftFreq","rightFreq","freq","Threshold","Frequency","Feedback","type","action","buffer","halfN","realEven","imagEven","realOdd","imagOdd","realTemp","imagTemp","pluginCategories","label","labelSuffix","generalLabel","icon","jsx","Volume2","Radio","Waves","Clock","Zap","getPluginIcon","cat","Star","getStemIcon","Drumstick","Speaker","Music","getStemDisplayName","electric_guitar","acoustic_guitar","unknown","price","color","High","Low","Notch","PluginCard","Card","children","CardContent","jsxs","jsxRuntimeExports","value","feature","Button","asChild","href","target","rel","ExternalLink","AIAnalysisDisplay","Cpu","Activity","style","width","avgConfidence","Target","TrendingUp","BarChart3","replace","trim","Brain","instrument","_a","_b","_c","_d","Sparkles","subGenre","AIStatusDisplay","isProcessing","aiSummary","aiApiService","metrics","getMetrics","queueLength","canMakeRequest","requestsPerMinute","modelUsage","currentRateLimitCount","Bot","onClick","resetRateLimits","variant","available","FileUpload","onFileUpload","dragActive","setDragActive","useState","uploadedFile","setUploadedFile","detectedStemType","setDetectedStemType","handleDrag","e","preventDefault","stopPropagation","handleFile","fileName","lowerFileName","detectStemType","accept","onChange","files","onDragEnter","onDragLeave","onDragOver","onDrop","dataTransfer","id","htmlFor","Upload","ProductionRecommendations","currentStemType","setCurrentStemType","analysisData","setAnalysisData","aiAnalysis","setAiAnalysis","setIsAnalyzing","aiRecommendations","setAiRecommendations","isRealTimeAnalyzing","setIsRealTimeAnalyzing","realTimeResults","setRealTimeResults","AIApiService","isAiProcessing","setIsAiProcessing","aiStatus","setAiStatus","setEnhancedRecommendations","audioAnalyzer","useEffect","testApiConnection","monitorInterval","setInterval","totalRequests","successRate","successfulRequests","rateLimitHits","cleanupCache","clearInterval","r","alert","Mic","Award","Crown","detectedInstrument","aiEnhancedRecs","getAIRecommendations","success","fromCache","usedFallbackModel","getAIEnhancedRecommendations","finalRecommendations","aiPlugins","stemTypeName","plugins","aiEnhanced","summary","Fragment","Settings","pluginsArr"],"mappings":"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"}