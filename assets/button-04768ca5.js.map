{"version":3,"file":"button-04768ca5.js","sources":["../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs","../../node_modules/@radix-ui/react-slot/dist/index.mjs","../../node_modules/class-variance-authority/dist/index.mjs","../../src/components/ui/button.jsx"],"sourcesContent":["// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","/**\n * Copyright 2022 Joe Bell. All rights reserved.\n *\n * This file is licensed to you under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with the\n * License. You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR REPRESENTATIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */ import { clsx } from \"clsx\";\nconst falsyToString = (value)=>typeof value === \"boolean\" ? `${value}` : value === 0 ? \"0\" : value;\nexport const cx = clsx;\nexport const cva = (base, config)=>(props)=>{\n        var _config_compoundVariants;\n        if ((config === null || config === void 0 ? void 0 : config.variants) == null) return cx(base, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n        const { variants, defaultVariants } = config;\n        const getVariantClassNames = Object.keys(variants).map((variant)=>{\n            const variantProp = props === null || props === void 0 ? void 0 : props[variant];\n            const defaultVariantProp = defaultVariants === null || defaultVariants === void 0 ? void 0 : defaultVariants[variant];\n            if (variantProp === null) return null;\n            const variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);\n            return variants[variant][variantKey];\n        });\n        const propsWithoutUndefined = props && Object.entries(props).reduce((acc, param)=>{\n            let [key, value] = param;\n            if (value === undefined) {\n                return acc;\n            }\n            acc[key] = value;\n            return acc;\n        }, {});\n        const getCompoundVariantClassNames = config === null || config === void 0 ? void 0 : (_config_compoundVariants = config.compoundVariants) === null || _config_compoundVariants === void 0 ? void 0 : _config_compoundVariants.reduce((acc, param)=>{\n            let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param;\n            return Object.entries(compoundVariantOptions).every((param)=>{\n                let [key, value] = param;\n                return Array.isArray(value) ? value.includes({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                }[key]) : ({\n                    ...defaultVariants,\n                    ...propsWithoutUndefined\n                })[key] === value;\n            }) ? [\n                ...acc,\n                cvClass,\n                cvClassName\n            ] : acc;\n        }, []);\n        return cx(base, getVariantClassNames, getCompoundVariantClassNames, props === null || props === void 0 ? void 0 : props.class, props === null || props === void 0 ? void 0 : props.className);\n    };\n\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\"\r\nimport { cn } from \"../../lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n        studio: \"studio-gradient text-white hover:studio-gradient-hover\",\r\n      },\r\n      size: {\r\n        default: \"h-10 px-4 py-2\",\r\n        sm: \"h-9 rounded-md px-3\",\r\n        lg: \"h-11 rounded-md px-8\",\r\n        icon: \"h-10 w-10\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nconst Button = React.forwardRef(({ className, variant, size, asChild = false, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"button\"\r\n  return (\r\n    <Comp\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  )\r\n})\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button, buttonVariants } "],"names":["setRef","ref","value","current","composeRefs","refs","node","hasCleanup","cleanups","map","cleanup","i","length","useComposedRefs","React.useCallback","useCallback","createSlot","ownerName","SlotClone","Slot2","React.forwardRef","props","forwardedRef","_a","children","slotProps","__objRest","childrenArray","React.Children","toArray","slottable","find","isSlottable","newElement","newChildren","child","Children","count","only","React.isValidElement","jsx","__spreadProps","__spreadValues","React.cloneElement","cloneElement","displayName","Slot","createSlotClone","childrenRef","element","getter","Object","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","_b","getElementRef","props2","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","result","filter","Boolean","join","mergeProps","type","React.Fragment","SLOTTABLE_IDENTIFIER","Symbol","isValidElement","__radixId","falsyToString","cx","clsx","buttonVariants","base","config","variants","variant","default","destructive","outline","secondary","ghost","link","studio","size","sm","lg","icon","defaultVariants","_config_compoundVariants","class","className","getVariantClassNames","keys","variantProp","defaultVariantProp","variantKey","propsWithoutUndefined","entries","reduce","acc","param","key","getCompoundVariantClassNames","compoundVariants","cvClass","cvClassName","compoundVariantOptions","every","Array","isArray","includes","Button","forwardRef","asChild","Comp","jsxRuntimeExports","cn"],"mappings":"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","x_google_ignoreList":[0,1,2]}