{"version":3,"file":"WaveformVisualizer-ca4f2956.js","sources":["../../src/components/WaveformVisualizer.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst WaveformVisualizer = ({ \r\n  audioData, \r\n  isPlaying, \r\n  currentTime = 0, \r\n  duration = 1,\r\n  height = 80,\r\n  color = '#8b5cf6'\r\n}) => {\r\n  const canvasRef = useRef(null);\r\n  const animationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    const ctx = canvas.getContext('2d');\r\n    const width = canvas.width;\r\n    const height = canvas.height;\r\n\r\n    // Clear canvas\r\n    ctx.clearRect(0, 0, width, height);\r\n\r\n    // Generate waveform data if not provided\r\n    const waveformData = audioData || generateMockWaveform(width);\r\n\r\n    // Draw waveform\r\n    drawWaveform(ctx, waveformData, width, height, color, currentTime, duration, isPlaying);\r\n\r\n    // Animate if playing\r\n    if (isPlaying) {\r\n      animationRef.current = requestAnimationFrame(() => {\r\n        // Update animation\r\n      });\r\n    }\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n    };\r\n  }, [audioData, isPlaying, currentTime, duration, color]);\r\n\r\n  const generateMockWaveform = (width) => {\r\n    const data = [];\r\n    for (let i = 0; i < width; i++) {\r\n      data.push(Math.random() * 0.8 + 0.2);\r\n    }\r\n    return data;\r\n  };\r\n\r\n  const drawWaveform = (ctx, data, width, height, color, currentTime, duration, isPlaying) => {\r\n    const centerY = height / 2;\r\n    const barWidth = Math.max(1, width / data.length);\r\n    const progress = currentTime / duration;\r\n\r\n    ctx.strokeStyle = color;\r\n    ctx.lineWidth = 2;\r\n\r\n    data.forEach((value, index) => {\r\n      const x = index * barWidth;\r\n      const barHeight = value * (height * 0.6);\r\n      const isActive = index / data.length < progress;\r\n\r\n      // Background bar\r\n      ctx.fillStyle = isActive ? color + '40' : '#374151';\r\n      ctx.fillRect(x, centerY - barHeight / 2, barWidth - 1, barHeight);\r\n\r\n      // Active indicator\r\n      if (isActive) {\r\n        ctx.fillStyle = color;\r\n        ctx.fillRect(x, centerY - barHeight / 2, barWidth - 1, barHeight);\r\n      }\r\n\r\n      // Playing animation\r\n      if (isPlaying && isActive) {\r\n        const pulseIntensity = Math.sin(Date.now() * 0.01 + index * 0.1) * 0.3 + 0.7;\r\n        ctx.fillStyle = color + Math.floor(pulseIntensity * 255).toString(16).padStart(2, '0');\r\n        ctx.fillRect(x, centerY - barHeight / 2, barWidth - 1, barHeight);\r\n      }\r\n    });\r\n\r\n    // Progress line\r\n    const progressX = progress * width;\r\n    ctx.strokeStyle = '#ffffff';\r\n    ctx.lineWidth = 3;\r\n    ctx.beginPath();\r\n    ctx.moveTo(progressX, 0);\r\n    ctx.lineTo(progressX, height);\r\n    ctx.stroke();\r\n\r\n    // Time indicators\r\n    ctx.fillStyle = '#ffffff';\r\n    ctx.font = '12px Arial';\r\n    ctx.textAlign = 'center';\r\n    \r\n    // Current time\r\n    const currentTimeText = formatTime(currentTime);\r\n    ctx.fillText(currentTimeText, 40, height - 10);\r\n    \r\n    // Total duration\r\n    const durationText = formatTime(duration);\r\n    ctx.fillText(durationText, width - 40, height - 10);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = Math.floor(seconds % 60);\r\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={800}\r\n        height={height}\r\n        className=\"w-full h-full rounded-lg\"\r\n        style={{ \r\n          background: 'linear-gradient(to bottom, #1f2937, #111827)',\r\n          border: '1px solid rgba(255, 255, 255, 0.1)'\r\n        }}\r\n      />\r\n      \r\n      {/* Overlay for better visual appeal */}\r\n      <div className=\"absolute inset-0 rounded-lg pointer-events-none\">\r\n        <div className=\"absolute top-0 left-0 right-0 h-1 bg-gradient-to-r from-transparent via-purple-500/20 to-transparent\"></div>\r\n        <div className=\"absolute bottom-0 left-0 right-0 h-1 bg-gradient-to-r from-transparent via-purple-500/20 to-transparent\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WaveformVisualizer; "],"names":["WaveformVisualizer","audioData","isPlaying","currentTime","duration","height","color","canvasRef","useRef","animationRef","useEffect","canvas","current","ctx","getContext","width","clearRect","waveformData","generateMockWaveform","drawWaveform","requestAnimationFrame","cancelAnimationFrame","data","i","push","Math","random","centerY","barWidth","max","length","progress","strokeStyle","lineWidth","forEach","value","index","x","barHeight","isActive","fillStyle","fillRect","pulseIntensity","sin","Date","now","floor","toString","padStart","progressX","beginPath","moveTo","lineTo","stroke","font","textAlign","currentTimeText","formatTime","fillText","durationText","seconds","jsxs","className","children","jsxRuntimeExports","jsx","ref","style","background","border"],"mappings":"iFAEA,MAAMA,EAAqB,EACzBC,YACAC,YACAC,cAAc,EACdC,WAAW,EACXC,SAAS,GACTC,QAAQ,cAEF,MAAAC,EAAYC,SAAO,MACnBC,EAAeD,SAAO,MAE5BE,EAAAA,UAAU,KACR,MAAMC,EAASJ,EAAUK,QACzB,IAAKD,EAAQ,OAEP,MAAAE,EAAMF,EAAOG,WAAW,MACxBC,EAAQJ,EAAOI,MACfV,EAASM,EAAON,OAGtBQ,EAAIG,UAAU,EAAG,EAAGD,EAAOV,GAGrB,MAAAY,EAAehB,GAAaiB,EAAqBH,GAYvD,OATAI,EAAaN,EAAKI,EAAcF,EAAOV,EAAQC,EAAOH,EAAaC,EAAUF,GAGzEA,IACWO,EAAAG,QAAUQ,sBAAsB,SAKxC,KACDX,EAAaG,SACfS,qBAAqBZ,EAAaG,WAGrC,CAACX,EAAWC,EAAWC,EAAaC,EAAUE,IAE3C,MAAAY,EAAwBH,IAC5B,MAAMO,EAAO,GACb,IAAA,IAASC,EAAI,EAAGA,EAAIR,EAAOQ,IACzBD,EAAKE,KAAqB,GAAhBC,KAAKC,SAAiB,IAE3B,OAAAJ,GAGHH,EAAe,CAACN,EAAKS,EAAMP,EAAOV,EAAQC,EAAOH,EAAaC,EAAUF,KAC5E,MAAMyB,EAAUtB,EAAS,EACnBuB,EAAWH,KAAKI,IAAI,EAAGd,EAAQO,EAAKQ,QACpCC,EAAW5B,EAAcC,EAE/BS,EAAImB,YAAc1B,EAClBO,EAAIoB,UAAY,EAEXX,EAAAY,QAAQ,CAACC,EAAOC,KACnB,MAAMC,EAAID,EAAQR,EACZU,EAAYH,GAAkB,GAAT9B,GACrBkC,EAAWH,EAAQd,EAAKQ,OAASC,EAavC,GAVIlB,EAAA2B,UAAYD,EAAWjC,EAAQ,KAAO,UAC1CO,EAAI4B,SAASJ,EAAGV,EAAUW,EAAY,EAAGV,EAAW,EAAGU,GAGnDC,IACF1B,EAAI2B,UAAYlC,EAChBO,EAAI4B,SAASJ,EAAGV,EAAUW,EAAY,EAAGV,EAAW,EAAGU,IAIrDpC,GAAaqC,EAAU,CACnB,MAAAG,EAA6D,GAA5CjB,KAAKkB,IAAiB,IAAbC,KAAKC,MAAuB,GAART,GAAqB,GACzEvB,EAAI2B,UAAYlC,EAAQmB,KAAKqB,MAAuB,IAAjBJ,GAAsBK,SAAS,IAAIC,SAAS,EAAG,KAClFnC,EAAI4B,SAASJ,EAAGV,EAAUW,EAAY,EAAGV,EAAW,EAAGU,EACzD,IAIF,MAAMW,EAAYlB,EAAWhB,EAC7BF,EAAImB,YAAc,UAClBnB,EAAIoB,UAAY,EAChBpB,EAAIqC,YACArC,EAAAsC,OAAOF,EAAW,GAClBpC,EAAAuC,OAAOH,EAAW5C,GACtBQ,EAAIwC,SAGJxC,EAAI2B,UAAY,UAChB3B,EAAIyC,KAAO,aACXzC,EAAI0C,UAAY,SAGV,MAAAC,EAAkBC,EAAWtD,GACnCU,EAAI6C,SAASF,EAAiB,GAAInD,EAAS,IAGrC,MAAAsD,EAAeF,EAAWrD,GAChCS,EAAI6C,SAASC,EAAc5C,EAAQ,GAAIV,EAAS,KAG5CoD,EAAcG,GAGX,GAFMnC,KAAKqB,MAAMc,EAAU,OACrBnC,KAAKqB,MAAMc,EAAU,IACXb,WAAWC,SAAS,EAAG,OAI9C,SAAAa,KAAC,MAAI,CAAAC,UAAU,WACbC,SAAA,CAAAC,EAAAC,IAAC,SAAA,CACCC,IAAK3D,EACLQ,MAAO,IACPV,SACAyD,UAAU,2BACVK,MAAO,CACLC,WAAY,+CACZC,OAAQ,0CAKZR,KAAC,MAAI,CAAAC,UAAU,kDACbC,SAAA,GAACE,IAAA,MAAA,CAAIH,UAAU,2GACfG,IAAC,MAAI,CAAAH,UAAU"}