{"version":3,"mappings":"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","names":["dynamicLoader","constructor","this","loadedModules","Map","loadingPromises","loadTensorFlow","__async","has","get","loadingPromise","console","log","tf","__vitePreload","import","setBackend","ready","set","delete","error","warn","simulatedTF","sequential","add","layer","layers","push","compile","config","compiled","predict","input","array","Math","random","fit","x","y","history","loss","dense","__spreadValues","type","dropout","conv1d","maxPooling1d","globalAveragePooling1d","train","adam","learningRate","tensor","data","reshape","shape","expandDims","axis","tensor2d","backend","dispose","loadJSPDF","then","n","j","default","jsPDF","catch","loadHtml2Canvas","html2canvas","loadComponent","componentName","componentMap","ProductionRecommendations","ExportVersions","SketchCreation","SessionManagement","CreditsContracts","UserVerification","AudioSeparation","Error","module","component","cleanup","clear","getLoadingStats","Array","from","keys","loadingModules","totalLoaded","size","totalLoading","initializeAllLibraries","results","tensorflow","jspdf","PerformanceMonitor","performanceStats","setPerformanceStats","useState","memory","cpu","totalChunks","isVisible","setIsVisible","useEffect","interval","setInterval","performance","memoryInfo","memoryUsage","usedJSHeapSize","jsHeapSizeLimit","startTime","now","cpuTime","loadingStats","round","length","clearInterval","jsxs","className","children","jsx","Zap","jsxRuntimeExports","onClick","Database","usage","Cpu","getCpuColor","HardDrive","title","setTimeout","window","location","reload","Activity"],"sources":["../../src/lib/dynamicImports.js","../../src/components/PerformanceMonitor.jsx"],"sourcesContent":["// מערכת טעינה דינמית למודולים כבדים\r\nexport class DynamicLoader {\r\n  constructor() {\r\n    this.loadedModules = new Map();\r\n    this.loadingPromises = new Map();\r\n  }\r\n\r\n  // טעינת TensorFlow.js דינמית\r\n  async loadTensorFlow() {\r\n    if (this.loadedModules.has('tensorflow')) {\r\n      return this.loadedModules.get('tensorflow');\r\n    }\r\n\r\n    if (this.loadingPromises.has('tensorflow')) {\r\n      return this.loadingPromises.get('tensorflow');\r\n    }\r\n\r\n    const loadingPromise = (async () => {\r\n      try {\r\n        console.log('🧠 מנסה לטעון TensorFlow.js...');\r\n        \r\n        // טעינת TensorFlow.js\r\n        const tf = await import('@tensorflow/tfjs');\r\n        \r\n        // אתחול backend\r\n        await tf.setBackend('webgl');\r\n        await tf.ready();\r\n        \r\n        console.log('✅ TensorFlow.js נטען בהצלחה');\r\n        this.loadedModules.set('tensorflow', tf);\r\n        this.loadingPromises.delete('tensorflow');\r\n        return tf;\r\n        \r\n      } catch (error) {\r\n        console.warn('⚠️ שגיאה בטעינת TensorFlow.js, יוצר מודל סימולציה:', error);\r\n        \r\n        // מודל סימולציה משופר\r\n        const simulatedTF = {\r\n          sequential: () => ({\r\n            add: function(layer) {\r\n              this.layers = this.layers || [];\r\n              this.layers.push(layer);\r\n              return this;\r\n            },\r\n            compile: function(config) {\r\n              this.compiled = true;\r\n              return this;\r\n            },\r\n            predict: async function(input) {\r\n              return {\r\n                array: async () => [[Math.random(), Math.random(), Math.random()]]\r\n              };\r\n            },\r\n            fit: async function(x, y, config) {\r\n              return { history: { loss: [0.5, 0.3, 0.2, 0.1] } };\r\n            }\r\n          }),\r\n          layers: {\r\n            dense: (config) => ({ type: 'dense', ...config }),\r\n            dropout: (config) => ({ type: 'dropout', ...config }),\r\n            conv1d: (config) => ({ type: 'conv1d', ...config }),\r\n            maxPooling1d: (config) => ({ type: 'maxPooling1d', ...config }),\r\n            globalAveragePooling1d: () => ({ type: 'globalAveragePooling1d' })\r\n          },\r\n          train: {\r\n            adam: (learningRate) => ({ type: 'adam', learningRate })\r\n          },\r\n          tensor: (data) => ({\r\n            array: async () => data,\r\n            reshape: function(shape) { return this; },\r\n            expandDims: function(axis) { return this; }\r\n          }),\r\n          tensor2d: (data) => ({\r\n            array: async () => data,\r\n            reshape: function(shape) { return this; }\r\n          }),\r\n          setBackend: async (backend) => console.log(`Backend set to: ${backend}`),\r\n          ready: async () => console.log('TensorFlow ready'),\r\n          dispose: () => console.log('TensorFlow disposed')\r\n        };\r\n        \r\n        this.loadedModules.set('tensorflow', simulatedTF);\r\n        this.loadingPromises.delete('tensorflow');\r\n        console.log('✅ מודל סימולציה של TensorFlow.js נוצר בהצלחה');\r\n        return simulatedTF;\r\n      }\r\n    })();\r\n\r\n    this.loadingPromises.set('tensorflow', loadingPromise);\r\n    return loadingPromise;\r\n  }\r\n\r\n  // טעינת jspdf דינמית\r\n  async loadJSPDF() {\r\n    if (this.loadedModules.has('jspdf')) {\r\n      return this.loadedModules.get('jspdf');\r\n    }\r\n\r\n    if (this.loadingPromises.has('jspdf')) {\r\n      return this.loadingPromises.get('jspdf');\r\n    }\r\n\r\n    const loadingPromise = import('jspdf').then(({ default: jsPDF }) => {\r\n      this.loadedModules.set('jspdf', jsPDF);\r\n      this.loadingPromises.delete('jspdf');\r\n      console.log('✅ jsPDF נטען דינמית בהצלחה');\r\n      return jsPDF;\r\n    }).catch(error => {\r\n      console.error('❌ שגיאה בטעינת jsPDF:', error);\r\n      this.loadingPromises.delete('jspdf');\r\n      throw error;\r\n    });\r\n\r\n    this.loadingPromises.set('jspdf', loadingPromise);\r\n    return loadingPromise;\r\n  }\r\n\r\n  // טעינת html2canvas דינמית\r\n  async loadHtml2Canvas() {\r\n    if (this.loadedModules.has('html2canvas')) {\r\n      return this.loadedModules.get('html2canvas');\r\n    }\r\n\r\n    if (this.loadingPromises.has('html2canvas')) {\r\n      return this.loadingPromises.get('html2canvas');\r\n    }\r\n\r\n    const loadingPromise = import('html2canvas').then(({ default: html2canvas }) => {\r\n      this.loadedModules.set('html2canvas', html2canvas);\r\n      this.loadingPromises.delete('html2canvas');\r\n      console.log('✅ html2canvas נטען דינמית בהצלחה');\r\n      return html2canvas;\r\n    }).catch(error => {\r\n      console.error('❌ שגיאה בטעינת html2canvas:', error);\r\n      this.loadingPromises.delete('html2canvas');\r\n      throw error;\r\n    });\r\n\r\n    this.loadingPromises.set('html2canvas', loadingPromise);\r\n    return loadingPromise;\r\n  }\r\n\r\n  // טעינת רכיב דינמית\r\n  async loadComponent(componentName) {\r\n    const componentMap = {\r\n      'ProductionRecommendations': () => import('../components/ProductionRecommendations'),\r\n      'ExportVersions': () => import('../components/ExportVersions'),\r\n      'SketchCreation': () => import('../components/SketchCreation'),\r\n      'SessionManagement': () => import('../components/SessionManagement'),\r\n      'CreditsContracts': () => import('../components/CreditsContracts'),\r\n      'UserVerification': () => import('../components/UserVerification'),\r\n      'AudioSeparation': () => import('../components/AudioSeparation')\r\n    };\r\n\r\n    if (!componentMap[componentName]) {\r\n      throw new Error(`רכיב ${componentName} לא נמצא`);\r\n    }\r\n\r\n    if (this.loadedModules.has(componentName)) {\r\n      console.log(`📦 רכיב ${componentName} כבר נטען, משתמש בגרסה קיימת`);\r\n      return this.loadedModules.get(componentName);\r\n    }\r\n\r\n    if (this.loadingPromises.has(componentName)) {\r\n      console.log(`⏳ רכיב ${componentName} כבר בטעינה, ממתין...`);\r\n      return this.loadingPromises.get(componentName);\r\n    }\r\n\r\n    console.log(`🚀 מתחיל טעינת רכיב: ${componentName}`);\r\n    const loadingPromise = componentMap[componentName]().then(module => {\r\n      const component = module.default;\r\n      if (!component) {\r\n        throw new Error(`רכיב ${componentName} לא יוצא נכון`);\r\n      }\r\n      this.loadedModules.set(componentName, component);\r\n      this.loadingPromises.delete(componentName);\r\n      console.log(`✅ רכיב ${componentName} נטען דינמית בהצלחה`);\r\n      return component;\r\n    }).catch(error => {\r\n      console.error(`❌ שגיאה בטעינת רכיב ${componentName}:`, error);\r\n      this.loadingPromises.delete(componentName);\r\n      throw error;\r\n    });\r\n\r\n    this.loadingPromises.set(componentName, loadingPromise);\r\n    return loadingPromise;\r\n  }\r\n\r\n  // ניקוי מודולים לא בשימוש\r\n  cleanup() {\r\n    this.loadedModules.clear();\r\n    this.loadingPromises.clear();\r\n    console.log('🧹 ניקוי מודולים דינמיים הושלם');\r\n  }\r\n\r\n  // קבלת סטטיסטיקות טעינה\r\n  getLoadingStats() {\r\n    return {\r\n      loadedModules: Array.from(this.loadedModules.keys()),\r\n      loadingModules: Array.from(this.loadingPromises.keys()),\r\n      totalLoaded: this.loadedModules.size,\r\n      totalLoading: this.loadingPromises.size\r\n    };\r\n  }\r\n\r\n  // טעינה בטוחה של כל הספריות\r\n  async initializeAllLibraries() {\r\n    console.log('🚀 מתחיל טעינה בטוחה של כל הספריות...');\r\n    \r\n    const results = {\r\n      tensorflow: false,\r\n      jspdf: false,\r\n      html2canvas: false\r\n    };\r\n    \r\n    try {\r\n      // טעינת TensorFlow.js\r\n      try {\r\n        await this.loadTensorFlow();\r\n        results.tensorflow = true;\r\n        console.log('✅ TensorFlow.js נטען בהצלחה');\r\n      } catch (error) {\r\n        console.warn('⚠️ TensorFlow.js לא נטען, משתמש במודל סימולציה');\r\n        results.tensorflow = false;\r\n      }\r\n      \r\n      // טעינת jsPDF\r\n      try {\r\n        await this.loadJSPDF();\r\n        results.jspdf = true;\r\n        console.log('✅ jsPDF נטען בהצלחה');\r\n      } catch (error) {\r\n        console.warn('⚠️ jsPDF לא נטען');\r\n        results.jspdf = false;\r\n      }\r\n      \r\n      // טעינת html2canvas\r\n      try {\r\n        await this.loadHtml2Canvas();\r\n        results.html2canvas = true;\r\n        console.log('✅ html2canvas נטען בהצלחה');\r\n      } catch (error) {\r\n        console.warn('⚠️ html2canvas לא נטען');\r\n        results.html2canvas = false;\r\n      }\r\n      \r\n      console.log('📊 סיכום טעינת ספריות:', results);\r\n      return results;\r\n      \r\n    } catch (error) {\r\n      console.error('❌ שגיאה בטעינת ספריות:', error);\r\n      return results;\r\n    }\r\n  }\r\n}\r\n\r\n// יצירת מופע גלובלי\r\nexport const dynamicLoader = new DynamicLoader(); ","import React, { useState, useEffect } from 'react';\r\nimport { Activity, Database, Cpu, HardDrive, Zap } from 'lucide-react';\r\nimport { dynamicLoader } from '../lib/dynamicImports';\r\n\r\nconst PerformanceMonitor = () => {\r\n  const [performanceStats, setPerformanceStats] = useState({\r\n    memory: 0,\r\n    cpu: 0,\r\n    loadedModules: 0,\r\n    loadingModules: 0,\r\n    totalChunks: 0\r\n  });\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const updateStats = () => {\r\n      // מדידת זיכרון\r\n      if ('memory' in performance) {\r\n        const memoryInfo = performance.memory;\r\n        const memoryUsage = (memoryInfo.usedJSHeapSize / memoryInfo.jsHeapSizeLimit) * 100;\r\n        \r\n        // מדידת CPU (קירוב)\r\n        const startTime = performance.now();\r\n        let cpuUsage = 0;\r\n        for (let i = 0; i < 1000000; i++) {\r\n          cpuUsage += Math.random();\r\n        }\r\n        const endTime = performance.now();\r\n        const cpuTime = endTime - startTime;\r\n        \r\n        // סטטיסטיקות מודולים\r\n        const loadingStats = dynamicLoader.getLoadingStats();\r\n        \r\n        setPerformanceStats({\r\n          memory: Math.round(memoryUsage),\r\n          cpu: Math.round(cpuTime),\r\n          loadedModules: loadingStats.totalLoaded,\r\n          loadingModules: loadingStats.totalLoading,\r\n          totalChunks: loadingStats.loadedModules.length + loadingStats.loadingModules.length\r\n        });\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(updateStats, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const getMemoryColor = (usage) => {\r\n    if (usage < 50) return 'text-green-500';\r\n    if (usage < 80) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  };\r\n\r\n  const getCpuColor = (usage) => {\r\n    if (usage < 10) return 'text-green-500';\r\n    if (usage < 50) return 'text-yellow-500';\r\n    return 'text-red-500';\r\n  };\r\n\r\n  if (!isVisible) {\r\n    return (\r\n      <button\r\n        onClick={() => setIsVisible(true)}\r\n        className=\"fixed bottom-4 right-4 bg-blue-600 hover:bg-blue-700 text-white p-2 rounded-full shadow-lg z-50\"\r\n        title=\"ניטור ביצועים\"\r\n      >\r\n        <Activity size={20} />\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed bottom-4 right-4 bg-gray-900 border border-gray-700 rounded-lg p-4 shadow-xl z-50 min-w-64\">\r\n      <div className=\"flex items-center justify-between mb-3\">\r\n        <h3 className=\"text-white font-semibold flex items-center\">\r\n          <Zap size={16} className=\"mr-2\" />\r\n          ניטור ביצועים\r\n        </h3>\r\n        <button\r\n          onClick={() => setIsVisible(false)}\r\n          className=\"text-gray-400 hover:text-white\"\r\n        >\r\n          ✕\r\n        </button>\r\n      </div>\r\n      \r\n      <div className=\"space-y-3\">\r\n        {/* זיכרון */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center text-gray-300\">\r\n            <Database size={14} className=\"mr-2\" />\r\n            זיכרון\r\n          </div>\r\n          <div className={`font-mono ${getMemoryColor(performanceStats.memory)}`}>\r\n            {performanceStats.memory}%\r\n          </div>\r\n        </div>\r\n        \r\n        {/* CPU */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center text-gray-300\">\r\n            <Cpu size={14} className=\"mr-2\" />\r\n            CPU\r\n          </div>\r\n          <div className={`font-mono ${getCpuColor(performanceStats.cpu)}`}>\r\n            {performanceStats.cpu}ms\r\n          </div>\r\n        </div>\r\n        \r\n        {/* מודולים נטענים */}\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center text-gray-300\">\r\n            <HardDrive size={14} className=\"mr-2\" />\r\n            מודולים\r\n          </div>\r\n          <div className=\"text-blue-400 font-mono\">\r\n            {performanceStats.loadedModules}/{performanceStats.totalChunks}\r\n          </div>\r\n        </div>\r\n        \r\n        {/* פעולות מהירות */}\r\n        <div className=\"pt-2 border-t border-gray-700\">\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => dynamicLoader.cleanup()}\r\n              className=\"flex-1 bg-red-600 hover:bg-red-700 text-white text-xs py-1 px-2 rounded\"\r\n              title=\"ניקוי זיכרון\"\r\n            >\r\n              ניקוי\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                // במקום window.location.reload(), נשתמש בפונקציה מקומית\r\n                dynamicLoader.cleanup();\r\n                setTimeout(() => {\r\n                  window.location.reload();\r\n                }, 100);\r\n              }}\r\n              className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white text-xs py-1 px-2 rounded\"\r\n              title=\"רענון\"\r\n            >\r\n              רענון\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PerformanceMonitor; "],"file":"assets/PerformanceMonitor-86a8acb4.js"}